[{"C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\index.js":"1","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\store.js":"2","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\reportWebVitals.js":"3","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\App.js":"4","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Reducers\\Product_reducer.js":"5","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Reducers\\Cart_reducer.js":"6","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Reducers\\Order_reducer.js":"7","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Reducers\\User_reducer.js":"8","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\Introscreen.js":"9","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\Productscreen.js":"10","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\Cartscreen.js":"11","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\Homescreen.js":"12","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\LoginScreen.js":"13","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\RegisterScreen.js":"14","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\ProfileScreen.js":"15","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\ShippingScreen.js":"16","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\PlaceOrderScreen.js":"17","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\PaymentScreen.js":"18","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\UsersListScreen.js":"19","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\OrderScreen.js":"20","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\UserEditScreen.js":"21","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\ProductsListScreen.js":"22","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\ProductEditScreen.js":"23","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\Orders_ListScreen.jsx":"24","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Footer.js":"25","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Header.js":"26","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Constants\\Cart_constant.js":"27","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Constants\\Product_constant.js":"28","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Constants\\User_constant.js":"29","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Constants\\Order_constant.js":"30","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Message.js":"31","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\backend_URL.js":"32","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Rating.js":"33","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Loading.js":"34","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Prod.js":"35","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Loginform_Container.js":"36","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Actions\\Cart_action.js":"37","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Actions\\User_action.js":"38","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Actions\\product_action.js":"39","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Actions\\Order_action.js":"40","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Components\\CheckoutSteps.js":"41"},{"size":588,"mtime":1631333928085,"results":"42","hashOfConfig":"43"},{"size":2563,"mtime":1631333928089,"results":"44","hashOfConfig":"43"},{"size":375,"mtime":1631333928088,"results":"45","hashOfConfig":"43"},{"size":3023,"mtime":1632168958750,"results":"46","hashOfConfig":"43"},{"size":3839,"mtime":1631333928029,"results":"47","hashOfConfig":"43"},{"size":1982,"mtime":1631333928028,"results":"48","hashOfConfig":"43"},{"size":4051,"mtime":1631333928029,"results":"49","hashOfConfig":"43"},{"size":4085,"mtime":1631333928030,"results":"50","hashOfConfig":"43"},{"size":11386,"mtime":1632145127297,"results":"51","hashOfConfig":"43"},{"size":16607,"mtime":1632174005836,"results":"52","hashOfConfig":"43"},{"size":6779,"mtime":1632173887963,"results":"53","hashOfConfig":"43"},{"size":7236,"mtime":1632148366823,"results":"54","hashOfConfig":"43"},{"size":3331,"mtime":1631333928042,"results":"55","hashOfConfig":"43"},{"size":4558,"mtime":1631333928050,"results":"56","hashOfConfig":"43"},{"size":8152,"mtime":1631333928049,"results":"57","hashOfConfig":"43"},{"size":4138,"mtime":1632174260308,"results":"58","hashOfConfig":"43"},{"size":8520,"mtime":1632174327286,"results":"59","hashOfConfig":"43"},{"size":2679,"mtime":1631333928045,"results":"60","hashOfConfig":"43"},{"size":4365,"mtime":1631333928052,"results":"61","hashOfConfig":"43"},{"size":13536,"mtime":1631333928043,"results":"62","hashOfConfig":"43"},{"size":5099,"mtime":1631333928052,"results":"63","hashOfConfig":"43"},{"size":5370,"mtime":1631333928047,"results":"64","hashOfConfig":"43"},{"size":10816,"mtime":1631333928046,"results":"65","hashOfConfig":"43"},{"size":4132,"mtime":1631333928044,"results":"66","hashOfConfig":"43"},{"size":614,"mtime":1631333927824,"results":"67","hashOfConfig":"43"},{"size":4020,"mtime":1631333927826,"results":"68","hashOfConfig":"43"},{"size":242,"mtime":1631333927834,"results":"69","hashOfConfig":"43"},{"size":1385,"mtime":1631333927838,"results":"70","hashOfConfig":"43"},{"size":1604,"mtime":1631333927839,"results":"71","hashOfConfig":"43"},{"size":1301,"mtime":1631333927837,"results":"72","hashOfConfig":"43"},{"size":299,"mtime":1631333927830,"results":"73","hashOfConfig":"43"},{"size":179,"mtime":1631333928056,"results":"74","hashOfConfig":"43"},{"size":2007,"mtime":1632145501117,"results":"75","hashOfConfig":"43"},{"size":402,"mtime":1631333927827,"results":"76","hashOfConfig":"43"},{"size":1773,"mtime":1631564287586,"results":"77","hashOfConfig":"43"},{"size":519,"mtime":1631333927829,"results":"78","hashOfConfig":"43"},{"size":2164,"mtime":1632171027664,"results":"79","hashOfConfig":"43"},{"size":8135,"mtime":1631333927818,"results":"80","hashOfConfig":"43"},{"size":5748,"mtime":1632168234281,"results":"81","hashOfConfig":"43"},{"size":6570,"mtime":1631333927816,"results":"82","hashOfConfig":"43"},{"size":1772,"mtime":1631333927823,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"1ar9dkx",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"86"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"86"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"86"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"86"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\index.js",[],["182","183"],"C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\store.js",[],"C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\reportWebVitals.js",[],"C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\App.js",["184"],"C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Reducers\\Product_reducer.js",[],"C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Reducers\\Cart_reducer.js",[],"C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Reducers\\Order_reducer.js",["185"],"\r\n\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_RESET,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n    ORDER_ALL_MY_REQUEST,\r\n    ORDER_ALL_MY_SUCCESS,\r\n    ORDER_ALL_MY_FAIL,\r\n    ORDER_ALL_MY_RESET,\r\n    ORDERS_REQUEST,\r\n    ORDERS_SUCCESS,\r\n    ORDERS_FAIL,\r\n    ORDERS_RESET,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../Constants/Order_constant.js';\r\n\r\n\r\n\r\nexport const orderCreate_reducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                Order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const OrderDetails_Full_reducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return { loading: true }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                Order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const OrderPay_reducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return { loading: true }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const myAllOrders_reducer = (state = { allMyOrders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_ALL_MY_REQUEST:\r\n            return { loading: true }\r\n\r\n        case ORDER_ALL_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                allMyOrders: action.payload\r\n            }\r\n\r\n        case ORDER_ALL_MY_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case ORDER_ALL_MY_RESET:\r\n            return { allMyOrders: [] }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n// ------------      For th4 order list       -------------\r\nexport const ORDER_All_reducer = (state = { Order_All: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDERS_REQUEST:\r\n            return { loading: true }\r\n\r\n        case ORDERS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                Order_All: action.payload\r\n            }\r\n\r\n        case ORDERS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n// For deliver materials to the customer -----------    admin can handle the delivery option\r\nexport const OrderDeliver_reducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return { loading: true }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Reducers\\User_reducer.js",[],"C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\Introscreen.js",["186","187","188","189","190","191","192"],"import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col, Container, Carousel, } from \"react-bootstrap\";\r\nimport \"../STYLES/intro_style.css\";\r\n\r\n// Import css files for Carousal\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Slider from \"react-slick\";\r\n\r\n// Images\r\nimport pic from \"./choco.jpg\";\r\nimport cday from \"../Pics/img2.jfif\";\r\nimport gifts from \"../Pics/gifts.jfif\";\r\nimport party from \"../Pics/party.jfif\";\r\n\r\nimport choco1 from '../images/choco1.png';\r\nimport choco2 from '../images/choco2.png';\r\nimport choco3 from '../images/choco3.png';\r\nimport choco4 from '../images/choco4.png';\r\nimport bg1 from '../images/bg1.png';\r\nimport heart from '../images/download-removebg-preview.png';\r\nimport img from '../images/image.png';\r\n\r\n\r\n\r\n\r\nconst Introscreen = () => {\r\n\r\n    var settings;\r\n    const [slider, setslider] = useState(settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 3,\r\n        slidesToScroll: 1,\r\n    })\r\n\r\n    var width = window.innerWidth;\r\n\r\n    useEffect(() => {\r\n        console.log(width);\r\n        if (width < 780) {     // <----- Responsive for VIEWPORT\r\n            console.log(\"if cond working\");\r\n            setslider(settings = {\r\n                dots: true,\r\n                infinite: true,\r\n                speed: 500,\r\n                slidesToShow: 2,\r\n                slidesToScroll: 1,\r\n            })\r\n        }\r\n    }, [width]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"main-cls\">\r\n\r\n            {/* -----------  CAROUSEL  --------- */}\r\n            <Carousel interval={2000}>\r\n                <Carousel.Item className=\"mycarou\">\r\n                    <div className=\"overlay-image\">\r\n                        {\" \"}\r\n                        {/* hazy in the background using OPACITY */}\r\n                        <img\r\n                            className=\"d-block w-100 image\"\r\n                            src=\"https://images.unsplash.com/photo-1526081715791-7c538f86060e?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NHx8Y2hvY29sYXRlJTIwZ2lmdCUyMGJveHxlbnwwfHwwfA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60\"\r\n                            alt=\"Third slide\"\r\n                        />\r\n                    </div>\r\n                    <Carousel.Caption className=\"carou_center\">\r\n                        <h3 className=\"title\">Chocolatey</h3>\r\n                        <p className=\"subtitle\">\r\n                            <i className=\"fas fa-quote-left\" style={{ paddingRight: \".4rem\" }} ></i>   A day without chocolate is a day without sunshine.   <i className=\"fas fa-quote-right\" style={{ paddingleft: \".4rem\" }}></i>\r\n                        </p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n\r\n                <Carousel.Item className=\"mycarou\">\r\n                    <div className=\"overlay-image\">\r\n                        <img className=\"d-block w-100 image\" src={cday} alt=\"Second slide\" />\r\n                    </div>\r\n                    <Carousel.Caption className=\"carou_center\">\r\n                        {/* <h3 className=\"subtitle\">DARK CHOCOLATES</h3>\r\n                        <p className=\"subtitle\">\r\n                            ------- A healthy alternatives for Chocolate Lovers -------{\" \"}\r\n                        </p> */}\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n\r\n                <Carousel.Item className=\"mycarou\">\r\n                    <div className=\"overlay-image\">{\" \"}\r\n                        <img\r\n                            className=\"d-block w-100 image \"\r\n                            src=\"https://images.unsplash.com/photo-1568702846914-96b305d2aaeb?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8YXBwbGV8ZW58MHx8MHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\r\n                            alt=\"First slide\"\r\n                        />\r\n                    </div>\r\n\r\n                    <Carousel.Caption className=\"carou_center\">\r\n                        {/*  <h3 className=\"subtitle\">DARK CHOCOLATES</h3>\r\n                        <p className=\"subtitle\">\r\n                            ------- A healthy alternatives for Chocolate Lovers -------{\" \"}\r\n                        </p> */}\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n            </Carousel>\r\n\r\n\r\n            <Container className=\"container_self\" style={{ paddingTop: \"3rem\" }}>\r\n                <div className=\"minihead\">\r\n                    {/* <h2 className=\"subheading\">\r\n                        {\" \"}\r\n                        <span>Trending Chocolates</span>{\" \"}\r\n                    </h2> */}\r\n                    <h1 id=\"trendSize\" > <img src={img} alt=\"aa\" id=\"png1\" /> Trending Chocolates</h1>\r\n                </div>\r\n\r\n                <Row className=\"HOVER\" >\r\n                    <Col md={3} sm={6} xs={6} className=\"choco\" >\r\n                        <img className=\"choco_img\" src={choco4} alt=\"lost\" />\r\n                        <div className=\"choco_name\" > <h4>Choco Vanilla Truffle</h4></div>\r\n                    </Col>\r\n\r\n                    <Col md={3} sm={6} xs={6} className=\"choco\" >\r\n                        <img className=\"choco_img\" src={choco3} alt=\"lost\" />\r\n                        <div className=\"choco_name\" > <h4>Ferrero Rocher</h4></div>\r\n                    </Col>\r\n\r\n                    <Col md={3} sm={6} xs={6} className=\"choco\" >\r\n                        <img className=\"choco_img\" src={choco2} alt=\"lost\" />\r\n                        <div className=\"choco_name\" > <h4>Almond Dark Chocolate</h4></div>\r\n                    </Col>\r\n\r\n                    <Col md={3} sm={6} xs={6} className=\"choco\" >\r\n                        <img className=\"choco_img\" src={choco1} alt=\"lost\" />\r\n                        <div className=\"choco_name\" > <h4>Dark Chocolate</h4></div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                {/* <Row>\r\n                    <section className=\"my-3 Button\" style={{ marginLeft: \"3rem\" }}>\r\n                        <a className=\"Button-btn\" href=\"/home\"> SHOP NOW </a>\r\n                    </section>\r\n                </Row> */}\r\n            </Container>\r\n\r\n\r\n            <section id=\"parallax\" className=\"parallax\">\r\n                <div className=\"container\" data-aos=\"zoom-in\">\r\n                    <div className=\"text-center\">\r\n                        <h2><img src={heart} alt=\"aa\" id=\"png\" /> Valentines Day  <img src={heart} alt=\"aa\" id=\"png\" />  </h2>\r\n                        <p>A brand new Valentines Day's Collection on your way ....</p>\r\n                        <a className=\"parallax-btn\" href=\"/home\">\r\n                            SHOP NOW\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n\r\n            <Container>\r\n                {/* <div class=\"d-flex justify-content-around\"> */}\r\n                <Row>\r\n                    <Col md={8} sm={12} lg={8} xs={12}>\r\n                        <img\r\n                            src={bg1}\r\n                            alt=\"First slide\"\r\n                            id=\"intoImg\"\r\n                        />\r\n                    </Col>\r\n\r\n                    <Col md={4} sm={12} lg={4} xs={12}>\r\n                        <div id=\"item\">\r\n                            <h5 className=\"itemhead\"><i class=\"fab fa-pagelines icoo\"></i> Natural Organic Products</h5>\r\n                            <p className=\"item_subhead\">\r\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div id=\"item\">\r\n                            <h5 className=\"itemhead\"> <i class=\"fas fa-gift icoo\"></i>Designing</h5>\r\n                            <p className=\"item_subhead\">\r\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div id=\"item\">\r\n                            <h5 className=\"itemhead\"><i class=\"fas fa-candy-cane icoo\"></i>Best Quality Cocoa</h5>\r\n                            <p className=\"item_subhead\">\r\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit.Duis aute irure dolor in reprehenderit\r\n                            </p>\r\n                        </div>\r\n\r\n                    </Col>\r\n                </Row>\r\n                {/* </div> */}\r\n            </Container>\r\n\r\n\r\n\r\n            {/* ----------  SLIDER PART DONE WITH REACT SLIDER  ----------- */}\r\n            {/* <Container className=\"container_self\">\r\n                <div className=\"minihead\">\r\n                    <h2 className=\"subheading\">\r\n                        {\" \"}\r\n                        <span> Free Shipping</span>{\" \"}\r\n                    </h2>\r\n                </div>\r\n\r\n               <div>\r\n                    <Slider {...slider}>\r\n                        <div className=\"minislider\">\r\n                            <img\r\n                                className=\"d-block w-100 htset \"\r\n                                src=\"http://design.dev.drcsystems.ooo:8084/themeforest/chocolate/assets/images/offer-img/img10.jpg\"\r\n                                alt=\"First slide\"\r\n                            />\r\n                            <div className=\"minisli_box\">\r\n                                <h4>Birthday Day</h4>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"minislider\">\r\n                            <img className=\"d-block w-100 htset\" src={pic} alt=\"First slide\" />\r\n                            <div className=\"minisli_box\">\r\n                                <h4>Valentine's Day</h4>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"minislider\">\r\n                            <img\r\n                                className=\"d-block w-100 htset\"\r\n                                src={gifts}\r\n                                alt=\"First slide\"\r\n                            />\r\n                            <div className=\"minisli_box\">\r\n                                <h4>Gifts</h4>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"minislider\">\r\n                            <img className=\"d-block w-100 htset\" src={party} alt=\"First slide\" />\r\n                            <div className=\"minisli_box\">\r\n                                <h4>Party</h4>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"minislider\">\r\n                            <img\r\n                                className=\"d-block w-100 htset\"\r\n                                src=\"https://images.unsplash.com/photo-1548741487-18d363dc4469?ixid=MXwxMjA3fDB8MHxzZWFyY2h8Mjd8fGNob2NvbGF0ZXxlbnwwfHwwfA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60\"\r\n                                alt=\"First slide\"\r\n                            />\r\n                            <div className=\"minisli_box\">\r\n                                <h4>chocolatey</h4>\r\n                            </div>\r\n                        </div>\r\n                    </Slider>\r\n                </div>\r\n            </Container> */}\r\n\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default Introscreen;\r\n","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\Productscreen.js",["193","194","195","196"],"C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\Cartscreen.js",["197","198","199"],"C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\Homescreen.js",["200"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col, Dropdown } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Mess from '../Components/Message.js';\r\nimport Load from '../Components/Loading.js';\r\nimport PROD from '../Components/Prod.js';\r\nimport { Listproducts } from '../Actions/product_action.js';\r\nimport { clone } from 'ramda';\r\n\r\n\r\n\r\nconst Homescreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const product_list = useSelector(state => state.product_list)// <--- Allows to extract data from the Reducer fn frm Store\r\n\r\n    const { loading, error, products } = product_list; // destructuring the product list\r\n\r\n    useEffect(() => {\r\n        dispatch(Listproducts());\r\n    }, [dispatch])\r\n\r\n    // const products = [];\r\n\r\n\r\n\r\n    // ---------------------------------           FILTER AND SORTING METHODS      -------------------------------\r\n    const [currCartItems, setcurrCartItems] = useState([]);   // data from redux\r\n    const [activee, setActivee] = useState(\"\");\r\n\r\n\r\n    const reset = () => {\r\n        setcurrCartItems(products);\r\n    }\r\n\r\n    const sort = (topic) => {\r\n        if (!topic) {\r\n            setcurrCartItems(products);\r\n            setActivee(\"\");\r\n        }\r\n        else {\r\n            let arr = clone(products);\r\n            setActivee(topic);\r\n            console.log(arr)\r\n            arr = arr.filter((obj) => obj.topic === topic);\r\n            setcurrCartItems(arr);\r\n        }\r\n    }\r\n\r\n    const sortBestSelling = (bestSelling) => {\r\n        if (!bestSelling) {\r\n            setcurrCartItems(products);\r\n            setActivee(\"\");\r\n        }\r\n        else {\r\n            let arr = clone(products);\r\n            setActivee(bestSelling);\r\n            console.log(arr)\r\n            arr = arr.filter((obj) => obj.bestSelling === bestSelling);\r\n            setcurrCartItems(arr);\r\n        }\r\n    }\r\n\r\n\r\n    const sortAscending = () => {\r\n        const productsClone = [...products];\r\n        productsClone.sort(function (a, b) {\r\n            return a[\"name\"].localeCompare(b[\"name\"]);\r\n        });\r\n        setcurrCartItems(productsClone);\r\n        console.log(productsClone)\r\n    }\r\n\r\n\r\n    const sortLess100 = () => {\r\n        const result = products.filter(item => item.price < 100);\r\n        setcurrCartItems(result);\r\n    }\r\n\r\n\r\n    const sortMore250 = () => {\r\n        const result = products.filter(item => item.price > 250);\r\n        setcurrCartItems(result);\r\n    }\r\n\r\n\r\n    const sortLowToHigh = () => {\r\n        const productsClone = [...products];\r\n        productsClone.sort((a, b) => {\r\n            return (a.price - b.price);\r\n        });\r\n        setcurrCartItems(productsClone);\r\n        console.log(productsClone)\r\n    }\r\n\r\n\r\n    const sortHIghToLow = () => {\r\n        const productsClone = [...products];\r\n        productsClone.sort((a, b) => {\r\n            return (b.price - a.price);\r\n        });\r\n        setcurrCartItems(productsClone);\r\n        console.log(productsClone)\r\n    }\r\n\r\n    console.log(currCartItems)\r\n\r\n    useEffect(() => {\r\n        setcurrCartItems(products);\r\n    }, [products])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <section id=\"parallax2\" className=\"parallax2\">\r\n                <div className=\"container\" data-aos=\"zoom-in\">\r\n                    <div className=\"text-center\">\r\n                        <h2>Featured Chocolates Products</h2>\r\n                        <p><i className=\"fas fa-candy-cane px-2\"></i>Delight in Every Bite. Lets Chocolate makes your day ........  </p>\r\n                        <a className=\"parallax2-btn\" href=\"/cart\">\r\n                            SHOP\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n\r\n            <div className=\"d-flex bd-highlight\">\r\n                <div className=\"p-2 flex-grow-1 bd-highlight\">\r\n                    <Link to=\"/\"> <i className=\"arrow left\"></i></Link>\r\n                </div>\r\n\r\n                {/* <div className=\"p-2 bd-highlight sorttitle\" ><h5>Sort By :</h5></div> */}\r\n\r\n                <div className=\"p-2 bd-highlight py-3\">\r\n                    <Dropdown>\r\n                        <Dropdown.Toggle id=\"dropdown-basic\" style={{ color: \"#621708\", fontWeight: \"500\", backgroundColor: \"#fff1e6\", fontSize: \"1.18rem\", padding: \".4rem .7rem\", borderRadius: \".6rem\" }} >\r\n                            Filter <i className=\"fas fa-filter\"></i>\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu style={{ backgroundColor: \"#474448\" }} >\r\n                            <Dropdown.Item onClick={() => reset()}> <Link to=\"/home\" >All </Link> </Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => sortLowToHigh()}> <Link to=\"/home\">Low to High</Link></Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => sortHIghToLow()}> <Link to=\"/home\">High to Low</Link></Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => sortAscending()}><Link to=\"/home\">A - Z</Link></Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => sortLess100()}><Link to=\"/home\">Price less than 100</Link></Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => sortMore250()}><Link to=\"/home\">Price more than 250</Link></Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => sortBestSelling(\"Best Selling\")}><Link to=\"/home\">Best Selling</Link></Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => sort(\"Mother's Day\")}><Link to=\"/home\">Mother's Day</Link> </Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => sort(\"Valentines Day\")}><Link to=\"/home\">Valentines Day</Link></Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => sort(\"Christmas Special\")}><Link to=\"/home\">Christmas Special</Link></Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => sort(\"Gift Boxes\")}><Link to=\"/home\">Gift Boxes</Link></Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => sort(\"Brownies\")}><Link to=\"/home\">Brownies</Link></Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => sort(\"Cup Cakes\")}><Link to=\"/home\">Cup Cakes</Link></Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {loading ? < Load /> :                                       // <h2>Loading...</h2>\r\n                error ? < Mess variant=\"danger\" > {error}</Mess> :       //<h3>{error}</h3> \r\n                    <Row style={{ paddingBottom: \"2rem\" }} >\r\n                        {currCartItems && currCartItems.map(product => (\r\n                            <Col key={product._id} xs={12} sm={12} md={6} lg={4} xl={3} style={{ padding: \"1rem\" }} >\r\n                                {/* <h3>{product.name}</h3> */}\r\n                                <PROD\r\n                                    pro={product}\r\n                                />\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Homescreen;\r\n","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\LoginScreen.js",["201"],"\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Button, Form } from 'react-bootstrap';\r\nimport '../index.css';\r\nimport '../STYLES/Loginform.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LogIN } from '../Actions/User_action.js';\r\nimport Loginform_Container from \"../Components/Loginform_Container.js\";\r\nimport Mess from '../Components/Message.js';\r\nimport Load from '../Components/Loading.js';\r\n\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/home';// email ( returns the querystring part of a URL)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const user_Login = useSelector(state => state.user_Login);  //user_Login -> from the store\r\n    const { loading, error, UserInfo } = user_Login;\r\n\r\n\r\n    useEffect(() => {\r\n        if (UserInfo)\r\n            history.push(redirect)\r\n    }, [history, UserInfo, redirect])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();                 //It'll NOT SUBMIT unless dispatch() calls ACTION & PW,EMAIL are get verified\r\n        dispatch(LogIN(email, password)) //DISPATCH LOGIN\r\n    }\r\n\r\n\r\n    return (\r\n        <Loginform_Container>\r\n            <h1 className=\"cartHead\" style={{ paddingBottom: \"2.3rem\" }} >Login</h1>\r\n\r\n            {error && <Mess variant='danger'>{error}</Mess>}\r\n            {loading && <Load />}\r\n\r\n            <Form onSubmit={submitHandler} id=\"login_form\" >\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label><i className=\"fas fa-envelope profileIcon\"  ></i><b>Email Address</b></Form.Label>\r\n                    <Form.Control\r\n                        className=\"form_box\"\r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label> <i className=\"fas fa-lock profileIcon\"></i> <b>Password</b></Form.Label>\r\n                    <Form.Control\r\n                        className=\"form_box\"\r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Button type='submit' variant='danger' style={{ marginTop: \"1.6rem\", marginBottom: \"1rem\", borderRadius: \".3rem\" }} >\r\n                    <b style={{ fontSize: \"16px\" }}>Sign In</b>\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col style={{ color: \"rgba(255, 255, 255, 0.959)\" }}>\r\n                    New Customer?{' '}\r\n                    <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        <b> Register</b>\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Loginform_Container>\r\n    )\r\n}\r\n\r\nexport default LoginScreen;\r\n","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\RegisterScreen.js",["202","203","204","205"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap';\r\nimport '../index.css';\r\nimport '../STYLES/Loginform.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Register } from '../Actions/User_action.js';\r\nimport Loginform_Container from \"../Components/Loginform_Container.js\";\r\nimport Mess from '../Components/Message.js';\r\nimport Load from '../Components/Loading.js';\r\n\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmpass, setConfirmpass] = useState('');\r\n    const [msg, setMsg] = useState(null);\r\n\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/home';// email ( returns the querystring part of a URL)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const user_Register = useSelector(state => state.user_Register);  //user_Register -> from the store\r\n    const { loading, error, UserInfo } = user_Register;\r\n\r\n\r\n    useEffect(() => {\r\n        if (UserInfo)\r\n            history.push(redirect)\r\n    }, [history, UserInfo, redirect])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (password !== confirmpass)\r\n            setMsg(\"Password doesn't match!\");\r\n        else\r\n            dispatch(Register(name, email, password));\r\n    }\r\n\r\n\r\n    return (\r\n        <Loginform_Container>\r\n            <h1 className=\"cartHead\" style={{ paddingBottom: \"2.1rem\" }} >Sign Up</h1>\r\n\r\n            {msg && <Mess variant='danger'>{msg}</Mess>}\r\n            {error && <Mess variant='danger'>{error}</Mess>}\r\n            {loading && <Load />}\r\n\r\n\r\n            <Form onSubmit={submitHandler} id=\"login_form\">\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label> <i className=\"far fa-user profileIcon\"></i> <b>Name</b></Form.Label>\r\n                    <Form.Control\r\n                        className=\"form_box\"\r\n                        type='name'\r\n                        placeholder='name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label> <i className=\"fas fa-envelope profileIcon\"  ></i> <b>Email Address</b></Form.Label>\r\n                    <Form.Control\r\n                        className=\"form_box\"\r\n                        type='email'\r\n                        placeholder='email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label> <i className=\"fas fa-lock profileIcon\"></i> <b>Password</b></Form.Label>\r\n                    <Form.Control\r\n                        className=\"form_box\"\r\n                        type='password'\r\n                        placeholder='password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmpassword'>\r\n                    <Form.Label><b>Confirm Password</b></Form.Label>\r\n                    <Form.Control\r\n                        className=\"form_box\"\r\n                        type='password'\r\n                        placeholder='confirm password'\r\n                        value={confirmpass}\r\n                        onChange={(e) => setConfirmpass(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='danger' style={{ marginTop: \"1.6rem\", marginBottom: \"1rem\", borderRadius: \".3rem\" }} >\r\n                    <b style={{ fontSize: \"16px\" }}> Register </b>\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col style={{ color: \"rgba(255, 255, 255, 0.959)\" }}>\r\n                    Already have an Account ?{' '}\r\n                    <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        <b> Login</b>\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Loginform_Container>\r\n    )\r\n}\r\n\r\n\r\nexport default LoginScreen;\r\n","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\ProfileScreen.js",["206","207"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Row, Col, Container, Button, Table, Form } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport '../index.css';\r\nimport '../STYLES/Loginform.scss';\r\nimport '../STYLES/profile.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getUserDetails, UserUpdateProfile } from '../Actions/User_action.js';\r\nimport { OrderMyAll_Action } from '../Actions/Order_action.js';\r\nimport Mess from '../Components/Message.js';\r\nimport Load from '../Components/Loading.js';\r\n\r\n\r\nconst LoginScreen = ({ history }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmpass, setConfirmpass] = useState('');\r\n    const [msg, setMsg] = useState(null);\r\n\r\n\r\n\r\n\r\n    const user_Details = useSelector(state => state.user_Details);\r\n    const { loading, error, USER } = user_Details;\r\n\r\n    const user_Login = useSelector(state => state.user_Login); //user_Login -> from the store\r\n    const { UserInfo } = user_Login;\r\n\r\n    const user_UpdateProfileDetails = useSelector(state => state.user_UpdateProfileDetails);\r\n    const { success } = user_UpdateProfileDetails;\r\n\r\n    // LOOK AT THE REDUX DEV TOOLS \r\n    const listOfAllMyOrders = useSelector(state => state.listOfAllMyOrders);\r\n    const { loading: loadingAllMyOrders, error: errorOfMyOrders, allMyOrders } = listOfAllMyOrders;\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!UserInfo)\r\n            history.push('/login');\r\n        else {\r\n            if (!USER.name) {\r\n                dispatch(getUserDetails('profile'));\r\n                dispatch(OrderMyAll_Action())\r\n            }\r\n            else {\r\n                console.log(USER.name)\r\n                setName(USER.name);\r\n                setEmail(USER.email);\r\n            }\r\n        }\r\n    }, [dispatch, history, UserInfo, USER]) //useEffect will be fired off when there is any change in these attributes.\r\n\r\n\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (password != confirmpass)\r\n            setMsg(\"Password doesn't match!\");\r\n        else {\r\n            //DISPATCH Updated PROFILE\r\n            dispatch(UserUpdateProfile({ id: USER._id, name, email, password }))\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={4} xs={12} sm={11} >\r\n                <h1 className=\"cartHead headingGap\" >Profile</h1>\r\n\r\n                {msg && <Mess variant='danger'>{msg}</Mess>}\r\n                {error && <Mess variant='danger'>{error}</Mess>}\r\n                {success && <Mess variant='success'>Profile Updated</Mess>}\r\n                {loading && <Load />}\r\n\r\n\r\n                <Form onSubmit={submitHandler} id=\"login_form\" style={{ paddingBottom: \"2rem\" }}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label><i className=\"far fa-user profileIcon\"></i> <b>Name</b></Form.Label>\r\n                        <Form.Control\r\n                            className=\"form_box boxLength\"\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label><i className=\"fas fa-envelope profileIcon\"  ></i> <b>Email Address</b></Form.Label>\r\n                        <Form.Control\r\n                            className=\"form_box boxLength\"\r\n                            type='email'\r\n                            placeholder='Enter email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label> <i className=\"fas fa-lock profileIcon\"></i> <b>Password</b></Form.Label>\r\n                        <Form.Control\r\n                            className=\"form_box boxLength \"\r\n                            type='password'\r\n                            placeholder='Enter password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='confirmpassword'>\r\n                        <Form.Label><b>Confirm Password</b></Form.Label>\r\n                        <Form.Control\r\n                            className=\"form_box boxLength\"\r\n                            type='password'\r\n                            placeholder='confirm password'\r\n                            value={confirmpass}\r\n                            onChange={(e) => setConfirmpass(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n\r\n                    <Button type='submit' variant='success' style={{ marginTop: \"1.6rem\", marginBottom: \"1rem\", borderRadius: \".3rem\" }} >\r\n                        <b style={{ fontSize: \"16px\" }}>Update</b>\r\n                    </Button>\r\n\r\n                </Form>\r\n            </Col>\r\n\r\n\r\n\r\n            <Col md={8} xs={12} sm={11}>\r\n                <h1 className=\"cartHead headingGap\" >My Orders</h1>\r\n                {loadingAllMyOrders ? (\r\n                    <Load />\r\n                ) : errorOfMyOrders ? (\r\n                    <Mess variant='danger'>{errorOfMyOrders}</Mess>\r\n                ) : (\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>DATE</th>\r\n                                <th>TOTAL</th>\r\n                                <th>PAID</th>\r\n                                <th>DELIVERED</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {/*        allMyOrders --------->   [{} , {},  {} ] array of objects    */}\r\n                            {allMyOrders.map((odr) => (\r\n                                <tr key={odr._id}>\r\n                                    <td>{odr._id}</td>\r\n                                    <td>{odr.createdAt.substring(0, 10)}</td>\r\n                                    <td>₹ {odr.total_price}</td>\r\n                                    <td>\r\n                                        {odr.isPaid ? (\r\n                                            odr.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                            <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                        )}\r\n                                    </td>\r\n                                    <td>\r\n                                        {odr.isDelivered ? (\r\n                                            odr.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                            <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                        )}\r\n                                    </td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${odr._id}`}>\r\n                                            <Button className='btn-sm' variant='success'>\r\n                                                Details\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default LoginScreen;\r\n","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\ShippingScreen.js",["208","209","210"],"C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\PlaceOrderScreen.js",["211","212","213","214"],"C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\PaymentScreen.js",["215"],"\r\nimport React, { useState } from 'react';\r\nimport { Button, Form, Col } from 'react-bootstrap';\r\nimport '../index.css';\r\nimport '../STYLES/Loginform.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SavePaymentMethod } from '../Actions/Cart_action.js';\r\nimport Loginform_Container from \"../Components/Loginform_Container.js\";\r\nimport CheckoutSteps from \"../Components/CheckoutSteps.js\";\r\n\r\n\r\n\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n\r\n\r\n    const CART = useSelector(state => state.CART);\r\n    const { shippingAddress } = CART;\r\n\r\n    if (!shippingAddress)\r\n        history.push('/shipping');\r\n\r\n    const [paymentmethod, setPaymentMethod] = useState(\"PayPal\");\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"submit\");\r\n        dispatch(SavePaymentMethod(paymentmethod));\r\n        history.push('/placeorder');   // redirect to payment page\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Loginform_Container>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <h1 className=\"cartHead\" style={{ paddingBottom: \"1.5rem\" }} >Payment Method</h1>\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='h2' className=\"paymentSub\" >Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            className=\"paymentSub1\"\r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='PayPal'\r\n                            name='paymentMethod'\r\n                            value='PayPal'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n                        </Form.Check>\r\n\r\n                        <Form.Check\r\n                            className=\"paymentSub1\"\r\n                            type='radio'\r\n                            label='Stripe'\r\n                            id='Stripe'\r\n                            name='paymentMethod'\r\n                            value='Stripe'\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        ></Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='success' style={{ marginTop: \"1.6rem\", marginBottom: \"2rem\", borderRadius: \".3rem\" }} >\r\n                    <b style={{ fontSize: \"16px\" }}>Continue</b>\r\n                </Button>\r\n            </Form>\r\n        </Loginform_Container>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen;\r\n","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\UsersListScreen.js",["216"],"\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Mess from '../Components/Message.js';\r\nimport Load from '../Components/Loading.js';\r\nimport { UserAll_ListAction, userDeleteAction } from '../Actions/User_action.js'\r\n\r\n\r\n\r\n\r\nconst UsersListScreen = ({ history }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const users_List = useSelector(state => state.users_List);\r\n    const { loading, error, allUsers } = users_List;\r\n\r\n    const user_Login = useSelector(state => state.user_Login);  //user_Login -> from the store\r\n    const { UserInfo } = user_Login;\r\n\r\n    const user_Delete = useSelector(state => state.user_Delete);  //user_Delete -> from the store\r\n    const { success: seccessDeleteUser } = user_Delete;\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (UserInfo && UserInfo.isAdmin)\r\n            dispatch(UserAll_ListAction())\r\n        else\r\n            history.push('/login');\r\n    }, [dispatch, history, seccessDeleteUser])\r\n\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure you want to delete this User?')) {\r\n            dispatch(userDeleteAction(id));\r\n            console.log(\"User Deleted Successfully\")\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"cartHead\" style={{ paddingBottom: \"2rem\" }} >Users</h1>\r\n            {\r\n                loading ? (<Load />) :\r\n                    error ? (<Mess variant='danger'>{error}</Mess>) :\r\n                        (\r\n                            <Table striped bordered hover responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>NAME</th>\r\n                                        <th>EMAIL</th>\r\n                                        <th>ADMIN</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {allUsers.map((user) => (\r\n                                        <tr key={user._id}>\r\n                                            <td>{user._id}</td>\r\n                                            <td>{user.name}</td>\r\n                                            <td>  <a href={`mailto:${user.email}`}>{user.email}</a>  </td>\r\n                                            <td>\r\n                                                {user.isAdmin ? (\r\n                                                    <i className='fas fa-check' style={{ color: 'green', fontSize: \"1.5rem\" }}></i>\r\n                                                ) : (\r\n                                                    <i className='fas fa-times' style={{ color: 'red', fontSize: \"1.5rem\" }}></i>\r\n                                                )}\r\n                                            </td>\r\n                                            <td>\r\n                                                <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                    <Button variant='light' className='btn-sm'>\r\n                                                        <i className='fas fa-edit'></i>\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n                                                <Button\r\n                                                    variant='danger'\r\n                                                    className='btn-sm'\r\n                                                    onClick={() => deleteHandler(user._id)}\r\n                                                >\r\n                                                    <i className='fas fa-trash'></i>\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        )\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default UsersListScreen;\r\n","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\OrderScreen.js",["217","218","219","220"],"\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport CheckoutSteps from \"../Components/CheckoutSteps.js\";\r\nimport { GetOrderDetails_ByID, OrderPay_Action, OrderDeliver_Action } from '../Actions/Order_action.js';\r\nimport Mess from '../Components/Message.js';\r\nimport Load from '../Components/Loading.js';\r\nimport \"../STYLES/placeOrderScreen.css\";\r\nimport backend_URL from '../backend_URL.js';\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from \"../Constants/Order_constant.js\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n\r\n    const [sdkReady, setsdkReady] = useState(false)\r\n    const ORDER_ID = match.params.id;\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    // USER LOGIN ---- User authentication \r\n    const user_Login = useSelector(state => state.user_Login);  //user_Login -> from the store\r\n    const { UserInfo } = user_Login;\r\n\r\n    // ORDER DETAILS\r\n    const order_Details = useSelector(state => state.order_Details);\r\n    const { Order, success, loading, error } = order_Details;\r\n    console.log(order_Details);                                      // {loading,succes,Order}\r\n\r\n\r\n    // ORDER PAYMENT \r\n    const order_Pay = useSelector(state => state.order_Pay);\r\n    const { success: successPay, loading: loadingPay } = order_Pay;\r\n\r\n\r\n    // ORDER DELIVER \r\n    const order_Deliver = useSelector(state => state.order_Deliver);\r\n    const { success: successDeliver, loading: loadingDeliver } = order_Deliver;\r\n\r\n\r\n\r\n    //   Calculatint Items Price                \r\n    if (!loading) {\r\n        const Till_2_Decimals = (num) => {\r\n            return (Math.round(num * 100) / 100).toFixed(2)\r\n        }\r\n        Order.itemsPrice = Till_2_Decimals(\r\n            Order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n        )\r\n    }\r\n\r\n\r\n\r\n    // -----  SCRIPT FOR PAYPAL INTEGRATION USING SANDBOX  -------\r\n    useEffect(() => {\r\n        if (!UserInfo)\r\n            history.push('/login');\r\n\r\n        else {\r\n            const addPayPalScript = async () => {\r\n                const { data: clientID } = await axios.get(`${backend_URL}/api/config/paypal`);\r\n                console.log(\"CLIENT-ID = \", clientID);\r\n                const script = document.createElement('script');\r\n                script.type = 'text/javascript';\r\n                // https://developer.paypal.com/docs/checkout/reference/customize-sdk/\r\n                script.src = `https://www.paypal.com/sdk/js?client-id=${clientID}`;\r\n                script.async = true\r\n                script.onload = () => {\r\n                    setsdkReady(true)\r\n                }\r\n                document.body.appendChild(script)\r\n            }\r\n            // addPayPalScript();\r\n\r\n\r\n            if (!Order || successPay || successDeliver) {\r\n                dispatch({ type: ORDER_PAY_RESET });\r\n                dispatch({ type: ORDER_DELIVER_RESET });\r\n                dispatch(GetOrderDetails_ByID(ORDER_ID));\r\n            }\r\n            else if (!Order.isPaid)   // Not Paid === (!false) === true\r\n            {\r\n                if (!window.paypal) {\r\n                    addPayPalScript();\r\n                    console.log(window.paypal)\r\n                }\r\n                else\r\n                    setsdkReady(true);\r\n            }\r\n        }\r\n\r\n    }, [dispatch, ORDER_ID, successPay, successDeliver, Order])\r\n\r\n\r\n\r\n\r\n    const PaymentSucces_Handler = (paymentResult) => {\r\n        console.log(paymentResult)\r\n        dispatch(OrderPay_Action(ORDER_ID, paymentResult));\r\n    }\r\n\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(OrderDeliver_Action(Order))\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {loading ? <Load /> :\r\n                error ? <Mess variant=\"danger\"> {error} </Mess> :\r\n                    <>\r\n                        <h1 id=\"orderNum\" >ORDER {Order._id}</h1>\r\n                        <Row>\r\n                            <Col md={7} className=\"Orderbkgrnd\"  >\r\n                                <ListGroup variant='flush' className=\"Orderbkgrnd\" >\r\n                                    <ListGroup.Item style={{ backgroundColor: \"#141314\" }} >\r\n                                        <h2 className=\"orderHead\" >Shipping</h2>\r\n                                        <p style={{ margin: \"0 0 3px 0\" }} ><strong style={{ fontSize: \"1.05rem \" }}>Name : </strong> <span id=\"Ordersubhead\">{Order.user.name}</span></p>\r\n                                        <p style={{ margin: \"0 0 3px 0\" }}><strong style={{ fontSize: \"1.05rem \" }}>Email : </strong> <span id=\"Ordersubhead\">{Order.user.email}</span></p>\r\n                                        {/* <p><a href={`mailto: ${Order.user.email}`} > <span>{Order.user.email}</span></a></p> */}\r\n                                        <p >\r\n                                            <strong style={{ fontSize: \"1.05rem \" }}>Address: </strong>\r\n                                            <span id=\"Ordersubhead\">\r\n                                                {Order.shippingAddress.address},\r\n                                                {Order.shippingAddress.city}{' '}\r\n                                                {Order.shippingAddress.postalCode},{' '}\r\n                                                {Order.shippingAddress.country}\r\n                                            </span>\r\n                                        </p>\r\n                                        {Order.isDelivered ? <Mess variant=\"success\" >Delivered At {Order.Delivered_at} </Mess>\r\n                                            :\r\n                                            <Mess variant=\"danger\">Not Delivered</Mess>}\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item style={{ backgroundColor: \"#141314\" }}>\r\n                                        <h2 className=\"orderHead\">Payment Method</h2>\r\n                                        <p style={{ margin: \"0 0 1.2rem 0\" }}>\r\n                                            <strong>Method: </strong>\r\n                                            <span id=\"Ordersubhead\" >\r\n                                                {Order.paymentMethod}\r\n                                            </span>\r\n                                        </p>\r\n\r\n\r\n                                        {Order.isPaid ? <Mess variant=\"success\" > Paid on {Order.paid_at} </Mess>\r\n                                            :\r\n                                            <Mess variant=\"danger\">Not Paid</Mess>}\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item style={{ backgroundColor: \"#141314\" }}>\r\n                                        <h2 className=\"orderHead\">Ordered Items</h2>\r\n                                        {Order.orderItems.length === 0 ? (\r\n                                            <Mess>Your cart is empty</Mess>\r\n                                        ) : (\r\n                                            <ListGroup variant='flush' style={{ border: \"1px solid #f4f1de\" }}>\r\n                                                {Order.orderItems.map((item, index) => (\r\n                                                    <ListGroup.Item key={index}>\r\n                                                        <Row>\r\n                                                            <Col md={2} sm={3} xs={3} >\r\n                                                                <Image\r\n                                                                    src={item.image}\r\n                                                                    alt={item.name}\r\n                                                                    fluid\r\n                                                                    rounded\r\n                                                                />\r\n                                                            </Col>\r\n                                                            <Col sm={4} xs={4} >\r\n                                                                <Link to={`/product/${item.product}`} className=\"itemDet fontWt7_4\" >\r\n                                                                    {item.name}\r\n                                                                </Link>\r\n                                                            </Col>\r\n                                                            <Col md={4} sm={5} xs={5} className=\"itemDet fontWt7_4\" >\r\n                                                                {item.qty} x ₹{item.price} = ₹{item.qty * item.price}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                ))}\r\n                                            </ListGroup>\r\n                                        )}\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col>\r\n\r\n                            <Col md={1}></Col>\r\n\r\n                            <Col md={4}>\r\n                                <div className=\"Orderbox\">\r\n                                    <ListGroup variant='flush' >\r\n                                        <ListGroup.Item>\r\n                                            <h2 className=\"orderHead\" style={{ textAlign: \"center\" }} >Order Summary</h2>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item id=\"boxsubitem\" >\r\n                                            <Row>\r\n                                                <Col>Items</Col>\r\n                                                <Col>₹{Order.itemsPrice}</Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item id=\"boxsubitem\">\r\n                                            <Row>\r\n                                                <Col>Shipping</Col>\r\n                                                <Col>₹{Order.shipping_price}</Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item id=\"boxsubitem\">\r\n                                            <Row>\r\n                                                <Col>Tax</Col>\r\n                                                <Col>₹{Order.taxPrice}</Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item id=\"boxsubitem\">\r\n                                            <Row>\r\n                                                <Col>Total</Col>\r\n                                                <Col>₹{Order.total_price}</Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n\r\n\r\n                                        {/* ------------------   IF NOT PAID THEN BUTTON VISIBLE   ---------------*/}\r\n                                        {!Order.isPaid && (\r\n                                            <ListGroup.Item>\r\n                                                {loadingPay && <Load />}\r\n                                                {!sdkReady ? <Load />\r\n                                                    :\r\n                                                    (\r\n                                                        <PayPalButton\r\n                                                            amount={Order.total_price}\r\n                                                            onSuccess={PaymentSucces_Handler}\r\n                                                        />\r\n                                                    )}\r\n                                            </ListGroup.Item>\r\n                                        )}\r\n\r\n\r\n\r\n                                        {loadingDeliver && <Load />}\r\n                                        {\r\n                                            UserInfo && UserInfo.isAdmin && Order.isPaid && !Order.isDelivered && (\r\n                                                <ListGroup.Item>\r\n                                                    <Button\r\n                                                        type=\"button\"\r\n                                                        onClick={deliverHandler}\r\n                                                        className=\"btn btn-block\"\r\n                                                    >\r\n                                                        Mark As Delivered\r\n                                                    </Button>\r\n                                                </ListGroup.Item>\r\n                                            )\r\n                                        }\r\n\r\n                                    </ListGroup>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderScreen;\r\n","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\UserEditScreen.js",["221","222","223"],"\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Button, Form } from 'react-bootstrap';\r\nimport '../index.css';\r\nimport '../STYLES/Loginform.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getUserDetails, userUpdateAction } from '../Actions/User_action.js';\r\nimport Loginform_Container from \"../Components/Loginform_Container.js\";\r\nimport Mess from '../Components/Message.js';\r\nimport Load from '../Components/Loading.js';\r\nimport { USER_UPDATE_RESET } from '../Constants/User_constant.js';\r\n\r\n\r\n\r\nconst UserEditScreen = ({ history, match }) => {\r\n\r\n    // Id of the specific USER\r\n    const urlID = match.params.id;\r\n    console.log(urlID)\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [isadmin, setIsAdmin] = useState(false);\r\n\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const user_Details = useSelector(state => state.user_Details);  //user_Details -> from the store\r\n    const { loading, error, USER } = user_Details;\r\n    console.log(user_Details)\r\n\r\n    const user_Update = useSelector(state => state.user_Update);\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = user_Update;\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET });\r\n            history.push(\"/admin/usersList\");\r\n        }\r\n\r\n        else {\r\n            if (!USER.name || urlID !== USER._id)           // if the user details is not set\r\n                dispatch(getUserDetails(urlID));\r\n            else {\r\n                setName(USER.name);\r\n                setEmail(USER.email);\r\n                setIsAdmin(USER.isAdmin);\r\n            }\r\n        }\r\n    }, [USER, dispatch, urlID, successUpdate, history])\r\n\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const Obj = {\r\n            _id: USER._id,\r\n            name: name,\r\n            email: email,\r\n            isAdmin: isadmin\r\n        }\r\n        console.log(Obj)\r\n        dispatch(userUpdateAction(Obj));\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Link to=\"/admin/usersList\" style={{ fontSize: \"1.05rem\", color: \"white\" }}> <i className=\"arrow left\"></i> GO BACK </Link>\r\n\r\n            <Loginform_Container>\r\n                <h1 className=\"cartHead\" style={{ paddingBottom: \"2.1rem\" }} >Edit User</h1>\r\n\r\n\r\n                {errorUpdate && <Mess variant='danger'>{errorUpdate}</Mess>}\r\n                {/* {successUpdate && <Mess variant='success'>Profile Updated</Mess>} */}\r\n                {loadingUpdate && <Load />}\r\n\r\n                {\r\n                    loading ? <Load /> :\r\n                        error ? <Mess variant='danger'>{error}</Mess> :\r\n                            (\r\n                                <Form onSubmit={submitHandler} id=\"login_form\">\r\n                                    <Form.Group controlId='name'>\r\n                                        <Form.Label><b>Name</b></Form.Label>\r\n                                        <Form.Control\r\n                                            className=\"form_box\"\r\n                                            type='name'\r\n                                            placeholder='name'\r\n                                            value={name}\r\n                                            onChange={(e) => setName(e.target.value)}\r\n                                        ></Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='email'>\r\n                                        <Form.Label><b>Email Address</b></Form.Label>\r\n                                        <Form.Control\r\n                                            className=\"form_box\"\r\n                                            type='email'\r\n                                            placeholder='email'\r\n                                            value={email}\r\n                                            onChange={(e) => setEmail(e.target.value)}\r\n                                        ></Form.Control>\r\n                                    </Form.Group>\r\n\r\n\r\n                                    <Form.Group controlId='isAdmin'>\r\n                                        <Form.Check\r\n                                            type='checkbox'\r\n                                            label=\"Is Admin\"\r\n                                            checked={isadmin}\r\n                                            onChange={(e) => setIsAdmin(e.target.checked)}\r\n                                        ></Form.Check>\r\n                                    </Form.Group>\r\n\r\n\r\n                                    <Button type='submit' variant='success'>\r\n                                        <b style={{ fontSize: \"16px\" }}>Edit</b>\r\n                                    </Button>\r\n                                </Form>\r\n                            )\r\n                }\r\n            </Loginform_Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen;\r\n","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\ProductsListScreen.js",[],"C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\ProductEditScreen.js",["224","225","226","227"],"\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Button, Form } from 'react-bootstrap';\r\nimport '../index.css';\r\nimport '../STYLES/Loginform.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Detailsproducts, updateProductAction } from '../Actions/product_action.js';\r\nimport Loginform_Container from \"../Components/Loginform_Container.js\";\r\nimport Mess from '../Components/Message.js';\r\nimport Load from '../Components/Loading.js';\r\nimport { PRODUCT_UPDATE_RESET } from '../Constants/Product_constant.js';\r\nimport backend_URL from '../backend_URL.js';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst UserEditScreen = ({ history, match }) => {\r\n\r\n    // Id of the specific USER\r\n    const urlProductID = match.params.id;\r\n    console.log(urlProductID)\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [image, setImage] = useState('');\r\n    const [topic, setTopic] = useState('');\r\n    const [brand, setBrand] = useState('');\r\n    const [catagory, setCatagory] = useState('');\r\n    const [countInStock, setCountInStock] = useState(0);\r\n    const [description, setDescription] = useState('');\r\n    const [imgUploading, setImgUploading] = useState(false);\r\n\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const product_details = useSelector(state => state.product_details);  //product_details -> from the store\r\n    const { loading, error, product } = product_details;\r\n    console.log(product_details)\r\n\r\n\r\n    const product_Update = useSelector(state => state.product_Update);  //product_Update -> from the store\r\n    const { loading: loadingUpdate, error: errorUpdate, product: updatedProduct, success: successUpdate } = product_Update;\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // true\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET });\r\n            history.push('/admin/productsList');\r\n        }\r\n        else {\r\n            if (!product.name || urlProductID !== product._id)           // if the user details is not set\r\n                dispatch(Detailsproducts(urlProductID));\r\n            else {\r\n                setName(product.name);\r\n                setPrice(product.price);\r\n                setImage(product.image);\r\n                setTopic(product.topic);\r\n                setBrand(product.brand);\r\n                setCatagory(product.catagory);\r\n                setCountInStock(product.countInStock);\r\n                setDescription(product.description);\r\n            }\r\n        }\r\n    }, [product, dispatch, urlProductID, history, successUpdate])\r\n\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        // updated obj\r\n        const prod = {\r\n            _id: urlProductID,\r\n            name,\r\n            price,\r\n            image,\r\n            topic,\r\n            brand,\r\n            catagory,\r\n            countInStock,\r\n            description\r\n        }\r\n        dispatch(updateProductAction(prod));\r\n    }\r\n\r\n\r\n\r\n    const fileUploadHandler = async (e) => {\r\n        console.log(\"Image upload Success!\");\r\n        const file = e.target.files[0];\r\n        console.log(\"File : \", file);\r\n        const formData = new FormData();\r\n        formData.append('image', file);           //  add a form field with the given IMAGE and FILE,\r\n        console.log(\"FormData : \", formData);\r\n        setImgUploading(true);\r\n\r\n        try {\r\n            const config = {\r\n                headers: { 'Content-Type': 'multipart/form-data' }\r\n            }\r\n\r\n            const { data } = await axios.post(`${backend_URL}/api/upload`, formData, config);\r\n            console.log(\"DATA : \", `${backend_URL}` + data);\r\n            setImage(`${backend_URL}` + data);\r\n            setImgUploading(false);\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n            setImgUploading(false);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Link to=\"/admin/productsList\" style={{ fontSize: \"1.05rem\", color: \"white\" }}> <i className=\"arrow left\"></i> GO BACK </Link>\r\n\r\n            <Loginform_Container>\r\n                <h1 className=\"cartHead\" style={{ paddingBottom: \"2.1rem\" }} >Edit Product</h1>\r\n\r\n\r\n                {errorUpdate && <Mess variant='danger'>{errorUpdate}</Mess>}\r\n                {loadingUpdate && <Load />}\r\n\r\n                {\r\n                    loading ? <Load /> :\r\n                        error ? <Mess variant='danger'>{error}</Mess> :\r\n                            (\r\n                                <Form onSubmit={submitHandler} id=\"login_form\">\r\n                                    <Form.Group controlId='name'>\r\n                                        <Form.Label><b>Name</b></Form.Label>\r\n                                        <Form.Control\r\n                                            className=\"form_box\"\r\n                                            type='name'\r\n                                            placeholder='name'\r\n                                            value={name}\r\n                                            onChange={(e) => setName(e.target.value)}\r\n                                        ></Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='price'>\r\n                                        <Form.Label><b>Price </b></Form.Label>\r\n                                        <Form.Control\r\n                                            className=\"form_box\"\r\n                                            type='text'\r\n                                            placeholder='price'\r\n                                            value={price}\r\n                                            onChange={(e) => setPrice(e.target.value)}\r\n                                        ></Form.Control>\r\n                                    </Form.Group>\r\n\r\n\r\n                                    {imgUploading && <Load />}\r\n                                    <Form.Group controlId='image'>\r\n                                        <Form.Label><b>Image </b></Form.Label>\r\n                                        <Form.Control\r\n                                            className=\"form_box\"\r\n                                            type='text'\r\n                                            placeholder='enter image Url'\r\n                                            value={image}\r\n                                            // accept=\".png, .jpg, .jpeg\"\r\n                                            onChange={(e) => setImage(e.target.value)}\r\n                                        ></Form.Control>\r\n                                        <Form.File\r\n                                            id=\"image-file\"\r\n                                            label=\"Choose File\"\r\n                                            custom\r\n                                            onChange={fileUploadHandler}\r\n                                        >\r\n                                        </Form.File>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='topic'>\r\n                                        <Form.Label><b>Topic </b></Form.Label>\r\n                                        <Form.Control\r\n                                            className=\"form_box\"\r\n                                            type='text'\r\n                                            placeholder='topic'\r\n                                            value={topic}\r\n                                            onChange={(e) => setTopic(e.target.value)}\r\n                                        ></Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='description'>\r\n                                        <Form.Label><b>description </b></Form.Label>\r\n                                        <Form.Control\r\n                                            className=\"form_box\"\r\n                                            type='text'\r\n                                            placeholder='description'\r\n                                            value={description}\r\n                                            onChange={(e) => setDescription(e.target.value)}\r\n                                        ></Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='brand'>\r\n                                        <Form.Label><b>Brand </b></Form.Label>\r\n                                        <Form.Control\r\n                                            className=\"form_box\"\r\n                                            type='text'\r\n                                            placeholder='brand'\r\n                                            value={brand}\r\n                                            onChange={(e) => setBrand(e.target.value)}\r\n                                        ></Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='catagory'>\r\n                                        <Form.Label><b>Catagory </b></Form.Label>\r\n                                        <Form.Control\r\n                                            className=\"form_box\"\r\n                                            type='text'\r\n                                            placeholder='catagory'\r\n                                            value={catagory}\r\n                                            onChange={(e) => setCatagory(e.target.value)}\r\n                                        ></Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='CountInStock'>\r\n                                        <Form.Label><b>CountInStock </b></Form.Label>\r\n                                        <Form.Control\r\n                                            className=\"form_box\"\r\n                                            type='text'\r\n                                            placeholder='CountInStock'\r\n                                            value={countInStock}\r\n                                            onChange={(e) => setCountInStock(e.target.value)}\r\n                                        ></Form.Control>\r\n                                    </Form.Group>\r\n\r\n\r\n\r\n\r\n\r\n                                    <Button type='submit' variant='success'>\r\n                                        <b style={{ fontSize: \"16px\" }}>Edit</b>\r\n                                    </Button>\r\n                                </Form>\r\n                            )\r\n                }\r\n            </Loginform_Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen;\r\n","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\Orders_ListScreen.jsx",[],"C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Footer.js",["228","229","230"],"import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            {/* <Container> */}\r\n            {/* <Row> */}\r\n            {/* <Col className=\"text-center py-3 mx-2\"> */}\r\n            <div style={{ textAlign: \"center\", margin: \"0rem 0\", padding: \"2rem 0 .6rem 0\" }}  >\r\n                <p style={{ color: \"#e5e5e5\" }} >  Developed By Niharika Dutta</p>\r\n            </div>\r\n\r\n            {/* </Col> */}\r\n            {/* </Row> */}\r\n            {/* </Container> */}\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Header.js",["231","232","233"],"\r\nimport React from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Container, Nav, Navbar, Button, Form, FormControl, NavDropdown } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { LogOUT } from '../Actions/User_action.js';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst Header = () => {\r\n\r\n    const user_Login = useSelector(state => state.user_Login);\r\n    const { UserInfo } = user_Login;\r\n\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const Logout_Handler = () => {\r\n        console.log(\"LOGOUT\");\r\n        dispatch(LogOUT());\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" style={{ padding: \"10px\", marginbottom: \"40px\" }} >\r\n                <Container style={{ margin: \"0 2rem\" }} >\r\n                    <LinkContainer to=\"/\"><Navbar.Brand id=\"heading_nav\">Chocolatey</Navbar.Brand></LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"ml-auto\">\r\n\r\n                            {/*CREATED LATER AFTER THE LOGIN PART(frontend + backend)*/}\r\n                            {UserInfo ? (\r\n                                <NavDropdown title={UserInfo.name} id=\"username\" className=\"navBig\">\r\n                                    <LinkContainer to='/profile' >\r\n                                        <NavDropdown.Item > Profile </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <NavDropdown.Item onClick={Logout_Handler} >Logout</NavDropdown.Item>\r\n                                </NavDropdown>)\r\n                                :\r\n                                (<LinkContainer to=\"/login\" style={{ paddingRight: \"1rem\" }}>\r\n                                    <Nav.Link className=\"navBig\" >  Sign In<i className=\"far fa-user\"></i>\r\n                                    </Nav.Link>\r\n                                </LinkContainer>)\r\n                            }\r\n\r\n\r\n                            {/* THIS DROPDOWN IS ONLY VISIBLE WHEN THE USER IS AN ADMIN */}\r\n                            {\r\n                                UserInfo && UserInfo.isAdmin && (\r\n                                    <NavDropdown title=\"Admin\" id=\"adminMenu\" className=\"navBig\">\r\n                                        <LinkContainer to='/admin/usersList' >\r\n                                            <NavDropdown.Item > Users </NavDropdown.Item>\r\n                                        </LinkContainer>\r\n\r\n                                        <LinkContainer to='/admin/productsList' >\r\n                                            <NavDropdown.Item > Products </NavDropdown.Item>\r\n                                        </LinkContainer>\r\n\r\n                                        <LinkContainer to='/admin/ordersList' >\r\n                                            <NavDropdown.Item > Orders </NavDropdown.Item>\r\n                                        </LinkContainer>\r\n                                    </NavDropdown>\r\n                                )\r\n                            }\r\n\r\n\r\n                            <div\r\n                                onClick={() => history.push('/cart')}\r\n                                style={{\r\n                                    color: \"white\",\r\n                                    fontSize: \"1.2rem\",\r\n                                    marginTop: \".5rem\",\r\n                                    fontWeight: \"500\"\r\n                                }}\r\n                            >\r\n                                Cart{''}\r\n                                <i class=\"fas fa-cart-arrow-down\"></i>\r\n                            </div>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header >\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Constants\\Cart_constant.js",[],"C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Constants\\Product_constant.js",[],"C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Constants\\User_constant.js",[],"C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Constants\\Order_constant.js",[],"C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Message.js",[],"C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\backend_URL.js",[],"C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Rating.js",[],"C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Loading.js",[],"C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Prod.js",[],"C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Loginform_Container.js",[],"C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Actions\\Cart_action.js",[],"C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Actions\\User_action.js",["234","235"],"\r\nimport axios from \"axios\";\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_RESET,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET\r\n} from \"../Constants/User_constant.js\";\r\nimport { ORDER_ALL_MY_RESET } from \"../Constants/Order_constant.js\";\r\nimport backend_URL from \"../backend_URL.js\";\r\n\r\n\r\n\r\n\r\n\r\n// LOGIN -- ACTION (already registered)\r\nexport const LogIN = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: USER_LOGIN_REQUEST });\r\n\r\n        const config = {\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n        };\r\n\r\n        // data ----> res.json full object{} that is passed from the user_controller\r\n        const { data } = await axios.post(`${backend_URL}/api/users/login`, { email, password }, config); // from user_controller backend\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        });\r\n        // console.log(data)\r\n        localStorage.setItem(\"UserInfo\", JSON.stringify(data)); // UserInfo frm reducer.js\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n// LOGOUT -- ACTION\r\nexport const LogOUT = () => (dispatch) => {\r\n    localStorage.removeItem('UserInfo');   // ERASED the info of particular user\r\n    dispatch({ type: USER_LOGOUT });\r\n    dispatch({ type: USER_DETAILS_RESET });\r\n    dispatch({ type: ORDER_ALL_MY_RESET });\r\n    dispatch({ type: USER_LIST_RESET });\r\n}\r\n\r\n\r\n\r\n\r\n// REGISTER -- ACTION\r\nexport const Register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: USER_REGISTER_REQUEST });\r\n\r\n        const config = {\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n        };\r\n\r\n        const { data } = await axios.post(`${backend_URL}/api/users`, { name, email, password }, config); // from user_controller backend\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data,\r\n        });\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        });\r\n\r\n        localStorage.setItem(\"UserInfo\", JSON.stringify(data)); // UserInfo frm reducer.js\r\n    }\r\n\r\n    catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n//  GETUSER DETAILS TO DISPLAY IN PROFILE  ---- ACTION\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_DETAILS_REQUEST });\r\n\r\n        const { user_Login: { UserInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: ` Bearer ${UserInfo.token}`\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.get(`${backend_URL}/api/users/${id}`, config); // from user_controller backend\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        });\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n//  UPDATE IN PROFILE  ---- ACTION\r\nexport const UserUpdateProfile = (USER) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_UPDATE_PROFILE_REQUEST });\r\n        const { user_Login: { UserInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: ` Bearer ${UserInfo.token}`\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.put(`${backend_URL}/api/users/profile`, USER, config); // from user_controller backend\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data,     // updated data stored into the database\r\n        });\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n//  ALL USERS LIST  ---- ACTION (Admin Access)\r\nexport const UserAll_ListAction = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_LIST_REQUEST });\r\n\r\n        const { user_Login: { UserInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: ` Bearer ${UserInfo.token}`\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.get(`${backend_URL}/api/users`, config); // from user_controller backend\r\n        console.log(data);                                                 // data gets into  allUsers: []  in the Reducer\r\n\r\n        //  allUsers: []   <-----  action.payload(REDUCER)   <-------- payload(ACTION)   <--------- DATA\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data,\r\n        });\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport const userDeleteAction = (ID) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_DELETE_REQUEST });\r\n\r\n        const { user_Login: { UserInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: ` Bearer ${UserInfo.token}`\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.delete(`${backend_URL}/api/users/${ID}`, config); // from user_controller backend\r\n\r\n        dispatch({ type: USER_DELETE_SUCCESS });\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport const userUpdateAction = (userObj) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_UPDATE_REQUEST });\r\n\r\n        const { user_Login: { UserInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: ` Bearer ${UserInfo.token}`\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.put(`${backend_URL}/api/users/${userObj._id}`, userObj, config); // from user_controller backend\r\n\r\n        dispatch({ type: USER_UPDATE_SUCCESS })\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        });\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Actions\\product_action.js",["236","237"],"C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Actions\\Order_action.js",["238","239","240"],"\r\n\r\n\r\nimport axios from 'axios';\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_ALL_MY_REQUEST,\r\n    ORDER_ALL_MY_SUCCESS,\r\n    ORDER_ALL_MY_FAIL,\r\n    ORDERS_REQUEST,\r\n    ORDERS_SUCCESS,\r\n    ORDERS_FAIL,\r\n    ORDERS_RESET,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../Constants/Order_constant.js';\r\nimport backend_URL from '../backend_URL.js';\r\n\r\n\r\n\r\n\r\n\r\nexport const Create_OrderAction = (Order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_CREATE_REQUEST });\r\n        const { user_Login: { UserInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",   // data will be send in the form of json\r\n                Authorization: ` Bearer ${UserInfo.token}`\r\n            },\r\n        };\r\n\r\n        console.log(Order)\r\n\r\n        // axios.post(URL , DATA that we want to send back to the server , config)\r\n        const { data } = await axios.post(`${backend_URL}/api/orders`, Order, config); // from user_controller backend\r\n        console.log(data);\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data,\r\n        });\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport const GetOrderDetails_ByID = (ID) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_DETAILS_REQUEST });\r\n        const { user_Login: { UserInfo } } = getState();\r\n        const config = {\r\n            headers: {\r\n                Authorization: ` Bearer ${UserInfo.token}`\r\n            },\r\n        };\r\n\r\n        // axios.post(URL , DATA that we want to send back to the server , config)\r\n        const { data } = await axios.get(`${backend_URL}/api/orders/${ID}`, config); // from user_controller backend\r\n        console.log(data);           // Payload Object Printing \r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        });\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n// For payment handling Action\r\nexport const OrderPay_Action = (ORDER_ID, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_PAY_REQUEST });\r\n        const { user_Login: { UserInfo } } = getState();\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",   // data will be send in the form of json\r\n                Authorization: ` Bearer ${UserInfo.token}`\r\n            },\r\n        };\r\n\r\n\r\n        const { data } = await axios.put(`${backend_URL}/api/orders/${ORDER_ID}/pay`, paymentResult, config); // from user_controller backend\r\n        console.log(data);\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data,\r\n        });\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n// For Delivery Products handling Action  ---  by the ADMIN \r\nexport const OrderDeliver_Action = (ORDER) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_DELIVER_REQUEST });\r\n        const { user_Login: { UserInfo } } = getState();\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",   // data will be send in the form of json\r\n                Authorization: ` Bearer ${UserInfo.token}`\r\n            },\r\n        };\r\n\r\n\r\n        const { data } = await axios.put(`${backend_URL}/api/orders/${ORDER._id}/deliver`, {}, config); // from user_controller backend\r\n        console.log(data);\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data,\r\n        });\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const OrderMyAll_Action = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_ALL_MY_REQUEST });\r\n        const { user_Login: { UserInfo } } = getState();\r\n        const config = {\r\n            headers: { Authorization: ` Bearer ${UserInfo.token}` },\r\n        };\r\n\r\n\r\n        const { data } = await axios.get(`${backend_URL}/api/orders/myorders`, config); // from user_controller backend\r\n        console.log(data);    //  [{} {} {} {}]\r\n\r\n        dispatch({\r\n            type: ORDER_ALL_MY_SUCCESS,\r\n            payload: data,\r\n        });\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: ORDER_ALL_MY_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport const Order_All_Action = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDERS_REQUEST });\r\n        const { user_Login: { UserInfo } } = getState();\r\n        const config = {\r\n            headers: { Authorization: ` Bearer ${UserInfo.token}` },\r\n        };\r\n\r\n\r\n        const { data } = await axios.get(`${backend_URL}/api/orders`, config); // from user_controller backend\r\n        console.log(data);    //  [{} {} {} {}]\r\n\r\n        dispatch({\r\n            type: ORDERS_SUCCESS,\r\n            payload: data,\r\n        });\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: ORDERS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n","C:\\LOCAL_DRIVE_Niharika\\React_Projects\\Ecommerce\\frontend\\src\\Components\\CheckoutSteps.js",[],{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","severity":1,"message":"246","line":4,"column":10,"nodeType":"247","messageId":"248","endLine":4,"endColumn":19},{"ruleId":"245","severity":1,"message":"249","line":22,"column":5,"nodeType":"247","messageId":"248","endLine":22,"endColumn":17},{"ruleId":"245","severity":1,"message":"250","line":8,"column":8,"nodeType":"247","messageId":"248","endLine":8,"endColumn":14},{"ruleId":"245","severity":1,"message":"251","line":11,"column":8,"nodeType":"247","messageId":"248","endLine":11,"endColumn":11},{"ruleId":"245","severity":1,"message":"252","line":13,"column":8,"nodeType":"247","messageId":"248","endLine":13,"endColumn":13},{"ruleId":"245","severity":1,"message":"253","line":14,"column":8,"nodeType":"247","messageId":"248","endLine":14,"endColumn":13},{"ruleId":"245","severity":1,"message":"254","line":30,"column":12,"nodeType":"247","messageId":"248","endLine":30,"endColumn":18},{"ruleId":"245","severity":1,"message":"255","line":44,"column":23,"nodeType":"247","messageId":"248","endLine":44,"endColumn":31},{"ruleId":"256","severity":1,"message":"257","line":44,"column":34,"nodeType":"258","endLine":50,"endColumn":14},{"ruleId":"245","severity":1,"message":"259","line":4,"column":20,"nodeType":"247","messageId":"248","endLine":4,"endColumn":25},{"ruleId":"245","severity":1,"message":"260","line":4,"column":58,"nodeType":"247","messageId":"248","endLine":4,"endColumn":66},{"ruleId":"245","severity":1,"message":"261","line":4,"column":68,"nodeType":"247","messageId":"248","endLine":4,"endColumn":82},{"ruleId":"262","severity":1,"message":"263","line":85,"column":37,"nodeType":"264","endLine":85,"endColumn":70},{"ruleId":"245","severity":1,"message":"265","line":2,"column":28,"nodeType":"247","messageId":"248","endLine":2,"endColumn":36},{"ruleId":"245","severity":1,"message":"266","line":9,"column":8,"nodeType":"247","messageId":"248","endLine":9,"endColumn":12},{"ruleId":"245","severity":1,"message":"267","line":10,"column":8,"nodeType":"247","messageId":"248","endLine":10,"endColumn":19},{"ruleId":"245","severity":1,"message":"268","line":31,"column":12,"nodeType":"247","messageId":"248","endLine":31,"endColumn":19},{"ruleId":"269","severity":1,"message":"270","line":41,"column":9,"nodeType":"264","endLine":41,"endColumn":30},{"ruleId":"245","severity":1,"message":"259","line":4,"column":20,"nodeType":"247","messageId":"248","endLine":4,"endColumn":25},{"ruleId":"245","severity":1,"message":"271","line":4,"column":27,"nodeType":"247","messageId":"248","endLine":4,"endColumn":36},{"ruleId":"245","severity":1,"message":"272","line":4,"column":38,"nodeType":"247","messageId":"248","endLine":4,"endColumn":42},{"ruleId":"269","severity":1,"message":"270","line":47,"column":9,"nodeType":"264","endLine":47,"endColumn":30},{"ruleId":"245","severity":1,"message":"246","line":3,"column":20,"nodeType":"247","messageId":"248","endLine":3,"endColumn":29},{"ruleId":"273","severity":1,"message":"274","line":65,"column":22,"nodeType":"275","messageId":"276","endLine":65,"endColumn":24},{"ruleId":"245","severity":1,"message":"277","line":10,"column":8,"nodeType":"247","messageId":"248","endLine":10,"endColumn":12},{"ruleId":"245","severity":1,"message":"266","line":11,"column":8,"nodeType":"247","messageId":"248","endLine":11,"endColumn":12},{"ruleId":"269","severity":1,"message":"270","line":41,"column":13,"nodeType":"264","endLine":41,"endColumn":34},{"ruleId":"245","severity":1,"message":"272","line":4,"column":46,"nodeType":"247","messageId":"248","endLine":4,"endColumn":50},{"ruleId":"245","severity":1,"message":"266","line":9,"column":8,"nodeType":"247","messageId":"248","endLine":9,"endColumn":12},{"ruleId":"245","severity":1,"message":"278","line":19,"column":13,"nodeType":"247","messageId":"248","endLine":19,"endColumn":28},{"ruleId":"256","severity":1,"message":"279","line":54,"column":8,"nodeType":"280","endLine":54,"endColumn":26,"suggestions":"281"},{"ruleId":"269","severity":1,"message":"270","line":38,"column":9,"nodeType":"264","endLine":38,"endColumn":30},{"ruleId":"256","severity":1,"message":"282","line":33,"column":8,"nodeType":"280","endLine":33,"endColumn":46,"suggestions":"283"},{"ruleId":"245","severity":1,"message":"272","line":5,"column":46,"nodeType":"247","messageId":"248","endLine":5,"endColumn":50},{"ruleId":"245","severity":1,"message":"284","line":7,"column":8,"nodeType":"247","messageId":"248","endLine":7,"endColumn":21},{"ruleId":"245","severity":1,"message":"285","line":34,"column":20,"nodeType":"247","messageId":"248","endLine":34,"endColumn":27},{"ruleId":"256","severity":1,"message":"286","line":99,"column":8,"nodeType":"280","endLine":99,"endColumn":63,"suggestions":"287"},{"ruleId":"245","severity":1,"message":"288","line":6,"column":10,"nodeType":"247","messageId":"248","endLine":6,"endColumn":13},{"ruleId":"245","severity":1,"message":"289","line":6,"column":15,"nodeType":"247","messageId":"248","endLine":6,"endColumn":18},{"ruleId":"269","severity":1,"message":"270","line":82,"column":13,"nodeType":"264","endLine":82,"endColumn":34},{"ruleId":"245","severity":1,"message":"288","line":5,"column":10,"nodeType":"247","messageId":"248","endLine":5,"endColumn":13},{"ruleId":"245","severity":1,"message":"289","line":5,"column":15,"nodeType":"247","messageId":"248","endLine":5,"endColumn":18},{"ruleId":"245","severity":1,"message":"290","line":45,"column":66,"nodeType":"247","messageId":"248","endLine":45,"endColumn":80},{"ruleId":"269","severity":1,"message":"270","line":127,"column":13,"nodeType":"264","endLine":127,"endColumn":34},{"ruleId":"245","severity":1,"message":"246","line":2,"column":10,"nodeType":"247","messageId":"248","endLine":2,"endColumn":19},{"ruleId":"245","severity":1,"message":"288","line":2,"column":21,"nodeType":"247","messageId":"248","endLine":2,"endColumn":24},{"ruleId":"245","severity":1,"message":"289","line":2,"column":26,"nodeType":"247","messageId":"248","endLine":2,"endColumn":29},{"ruleId":"245","severity":1,"message":"291","line":4,"column":34,"nodeType":"247","messageId":"248","endLine":4,"endColumn":40},{"ruleId":"245","severity":1,"message":"292","line":4,"column":42,"nodeType":"247","messageId":"248","endLine":4,"endColumn":46},{"ruleId":"245","severity":1,"message":"293","line":4,"column":48,"nodeType":"247","messageId":"248","endLine":4,"endColumn":59},{"ruleId":"245","severity":1,"message":"294","line":28,"column":5,"nodeType":"247","messageId":"248","endLine":28,"endColumn":22},{"ruleId":"245","severity":1,"message":"295","line":239,"column":17,"nodeType":"247","messageId":"248","endLine":239,"endColumn":21},{"ruleId":"245","severity":1,"message":"296","line":19,"column":5,"nodeType":"247","messageId":"248","endLine":19,"endColumn":25},{"ruleId":"245","severity":1,"message":"297","line":23,"column":5,"nodeType":"247","messageId":"248","endLine":23,"endColumn":32},{"ruleId":"245","severity":1,"message":"249","line":18,"column":5,"nodeType":"247","messageId":"248","endLine":18,"endColumn":17},{"ruleId":"245","severity":1,"message":"298","line":22,"column":5,"nodeType":"247","messageId":"248","endLine":22,"endColumn":20},{"ruleId":"245","severity":1,"message":"299","line":26,"column":5,"nodeType":"247","messageId":"248","endLine":26,"endColumn":24},"no-native-reassign",["300"],"no-negated-in-lhs",["301"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'ORDERS_RESET' is defined but never used.","'Slider' is defined but never used.","'pic' is defined but never used.","'gifts' is defined but never used.","'party' is defined but never used.","'slider' is assigned a value but never used.","'settings' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'settings' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ObjectExpression","'Image' is defined but never used.","'Dropdown' is defined but never used.","'DropdownButton' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'Load' is defined but never used.","'backend_URL' is defined but never used.","'activee' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Loginform_Container must be in PascalCase or SCREAMING_SNAKE_CASE","'ListGroup' is defined but never used.","'Card' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Mess' is defined but never used.","'shippingAddress' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Order._id'. Either include it or remove the dependency array.","ArrayExpression",["302"],"React Hook useEffect has a missing dependency: 'UserInfo'. Either include it or remove the dependency array.",["303"],"'CheckoutSteps' is defined but never used.","'success' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'UserInfo' and 'history'. Either include them or remove the dependency array.",["304"],"'Row' is defined but never used.","'Col' is defined but never used.","'updatedProduct' is assigned a value but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'USER_UPDATE_RESET' is defined but never used.","'data' is assigned a value but never used.","'PRODUCT_UPDATE_RESET' is defined but never used.","'PRODUCT_CREATE_REVIEW_RESET' is defined but never used.","'ORDER_PAY_RESET' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},"Update the dependencies array to be: [Order._id, history, success]",{"range":"311","text":"312"},"Update the dependencies array to be: [UserInfo, dispatch, history, seccessDeleteUser]",{"range":"313","text":"314"},"Update the dependencies array to be: [dispatch, ORDER_ID, successPay, successDeliver, Order, UserInfo, history]",{"range":"315","text":"316"},[1688,1706],"[Order._id, history, success]",[1062,1100],"[UserInfo, dispatch, history, seccessDeleteUser]",[3534,3589],"[dispatch, ORDER_ID, successPay, successDeliver, Order, UserInfo, history]"]