[{"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\index.js":"1","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\App.js":"2","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\reportWebVitals.js":"3","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Footer.js":"4","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Header.js":"5","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\Homescreen.js":"6","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\products.js":"7","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Prod.js":"8","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Rating.js":"9","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\Productscreen.js":"10","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\backend_URL.js":"11","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\store.js":"12","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Reducers\\Product_reducer.js":"13","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Constants\\Product_constant.js":"14","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Actions\\product_action.js":"15","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Message.js":"16","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Loading.js":"17","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\Cartscreen.js":"18","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Reducers\\Cart_reducer.js":"19","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Constants\\Cart_constant.js":"20","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Actions\\Cart_action.js":"21","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\Introscreen.js":"22","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Reducers\\User_reducer.js":"23","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Constants\\User_constant.js":"24","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\LoginScreen.js":"25","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Actions\\User_action.js":"26","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Loginform_Container.js":"27","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\RegisterScreen.js":"28","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\ProfileScreen.js":"29","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\ShippingScreen.js":"30","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\CheckoutSteps.js":"31","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\PaymentScreen.js":"32","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\PlaceOrderScreen.js":"33","D:\\React_Projects\\Ecommerce\\frontend\\src\\index.js":"34","D:\\React_Projects\\Ecommerce\\frontend\\src\\store.js":"35","D:\\React_Projects\\Ecommerce\\frontend\\src\\App.js":"36","D:\\React_Projects\\Ecommerce\\frontend\\src\\reportWebVitals.js":"37","D:\\React_Projects\\Ecommerce\\frontend\\src\\Reducers\\Product_reducer.js":"38","D:\\React_Projects\\Ecommerce\\frontend\\src\\Reducers\\Cart_reducer.js":"39","D:\\React_Projects\\Ecommerce\\frontend\\src\\Reducers\\User_reducer.js":"40","D:\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Footer.js":"41","D:\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Header.js":"42","D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\Introscreen.js":"43","D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\Homescreen.js":"44","D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\Cartscreen.js":"45","D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\Productscreen.js":"46","D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\LoginScreen.js":"47","D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\ProfileScreen.js":"48","D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\RegisterScreen.js":"49","D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\ShippingScreen.js":"50","D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\PaymentScreen.js":"51","D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\PlaceOrderScreen.js":"52","D:\\React_Projects\\Ecommerce\\frontend\\src\\Constants\\Product_constant.js":"53","D:\\React_Projects\\Ecommerce\\frontend\\src\\Constants\\User_constant.js":"54","D:\\React_Projects\\Ecommerce\\frontend\\src\\Constants\\Cart_constant.js":"55","D:\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Message.js":"56","D:\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Loading.js":"57","D:\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Prod.js":"58","D:\\React_Projects\\Ecommerce\\frontend\\src\\backend_URL.js":"59","D:\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Rating.js":"60","D:\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Loginform_Container.js":"61","D:\\React_Projects\\Ecommerce\\frontend\\src\\Components\\CheckoutSteps.js":"62","D:\\React_Projects\\Ecommerce\\frontend\\src\\Actions\\User_action.js":"63","D:\\React_Projects\\Ecommerce\\frontend\\src\\Actions\\Cart_action.js":"64","D:\\React_Projects\\Ecommerce\\frontend\\src\\Actions\\product_action.js":"65","D:\\React_Projects\\Ecommerce\\frontend\\src\\Reducers\\Order_reducer.js":"66","D:\\React_Projects\\Ecommerce\\frontend\\src\\Constants\\Order_constant.js":"67","D:\\React_Projects\\Ecommerce\\frontend\\src\\Actions\\Order_action.js":"68","D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\OrderScreen.js":"69"},{"size":715,"mtime":1616531793444,"results":"70","hashOfConfig":"71"},{"size":1854,"mtime":1617285470218,"results":"72","hashOfConfig":"71"},{"size":362,"mtime":499162500000,"results":"73","hashOfConfig":"71"},{"size":440,"mtime":1611411991764,"results":"74","hashOfConfig":"71"},{"size":2769,"mtime":1616936893994,"results":"75","hashOfConfig":"71"},{"size":2927,"mtime":1616919975444,"results":"76","hashOfConfig":"71"},{"size":2490,"mtime":1613826245217,"results":"77","hashOfConfig":"71"},{"size":1779,"mtime":1616847122325,"results":"78","hashOfConfig":"71"},{"size":2004,"mtime":1616846788902,"results":"79","hashOfConfig":"71"},{"size":6298,"mtime":1617288713918,"results":"80","hashOfConfig":"71"},{"size":80,"mtime":1613887620885,"results":"81","hashOfConfig":"71"},{"size":1661,"mtime":1617266326312,"results":"82","hashOfConfig":"71"},{"size":1391,"mtime":1616092221784,"results":"83","hashOfConfig":"71"},{"size":380,"mtime":1613809861086,"results":"84","hashOfConfig":"71"},{"size":1702,"mtime":1613927677108,"results":"85","hashOfConfig":"71"},{"size":299,"mtime":1613800954645,"results":"86","hashOfConfig":"71"},{"size":402,"mtime":1613993721894,"results":"87","hashOfConfig":"71"},{"size":6417,"mtime":1616941385888,"results":"88","hashOfConfig":"71"},{"size":1854,"mtime":1617266852660,"results":"89","hashOfConfig":"71"},{"size":242,"mtime":1617262445945,"results":"90","hashOfConfig":"71"},{"size":1833,"mtime":1617266880987,"results":"91","hashOfConfig":"71"},{"size":11528,"mtime":1617203285236,"results":"92","hashOfConfig":"71"},{"size":2294,"mtime":1617204188502,"results":"93","hashOfConfig":"71"},{"size":876,"mtime":1616504435563,"results":"94","hashOfConfig":"71"},{"size":3105,"mtime":1616943074539,"results":"95","hashOfConfig":"71"},{"size":4438,"mtime":1616510690229,"results":"96","hashOfConfig":"71"},{"size":519,"mtime":1616400492822,"results":"97","hashOfConfig":"71"},{"size":4289,"mtime":1616943588940,"results":"98","hashOfConfig":"71"},{"size":5706,"mtime":1617023995514,"results":"99","hashOfConfig":"71"},{"size":3927,"mtime":1617205573239,"results":"100","hashOfConfig":"71"},{"size":1772,"mtime":1617207771035,"results":"101","hashOfConfig":"71"},{"size":2404,"mtime":1617282291167,"results":"102","hashOfConfig":"71"},{"size":7530,"mtime":1617350624436,"results":"103","hashOfConfig":"71"},{"size":740,"mtime":1622134317196,"results":"104","hashOfConfig":"105"},{"size":1963,"mtime":1622646245923,"results":"106","hashOfConfig":"105"},{"size":2640,"mtime":1622837070727,"results":"107","hashOfConfig":"105"},{"size":375,"mtime":1622134317196,"results":"108","hashOfConfig":"105"},{"size":1397,"mtime":1622373493329,"results":"109","hashOfConfig":"105"},{"size":1982,"mtime":1622465990238,"results":"110","hashOfConfig":"105"},{"size":2409,"mtime":1622701196730,"results":"111","hashOfConfig":"105"},{"size":440,"mtime":1622134316996,"results":"112","hashOfConfig":"105"},{"size":2769,"mtime":1622134316996,"results":"113","hashOfConfig":"105"},{"size":11528,"mtime":1622906525947,"results":"114","hashOfConfig":"105"},{"size":6658,"mtime":1622922971699,"results":"115","hashOfConfig":"105"},{"size":6705,"mtime":1622839837916,"results":"116","hashOfConfig":"105"},{"size":8946,"mtime":1622836975260,"results":"117","hashOfConfig":"105"},{"size":3149,"mtime":1622806669264,"results":"118","hashOfConfig":"105"},{"size":8691,"mtime":1622660248367,"results":"119","hashOfConfig":"105"},{"size":4324,"mtime":1622806736940,"results":"120","hashOfConfig":"105"},{"size":4057,"mtime":1622806648619,"results":"121","hashOfConfig":"105"},{"size":2569,"mtime":1622743248581,"results":"122","hashOfConfig":"105"},{"size":8515,"mtime":1622920818522,"results":"123","hashOfConfig":"105"},{"size":380,"mtime":1622134317000,"results":"124","hashOfConfig":"105"},{"size":935,"mtime":1622701158514,"results":"125","hashOfConfig":"105"},{"size":242,"mtime":1622134317000,"results":"126","hashOfConfig":"105"},{"size":299,"mtime":1622134316998,"results":"127","hashOfConfig":"105"},{"size":402,"mtime":1622134316997,"results":"128","hashOfConfig":"105"},{"size":1779,"mtime":1622731865531,"results":"129","hashOfConfig":"105"},{"size":79,"mtime":1622139180491,"results":"130","hashOfConfig":"105"},{"size":2004,"mtime":1622134316999,"results":"131","hashOfConfig":"105"},{"size":519,"mtime":1622134316997,"results":"132","hashOfConfig":"105"},{"size":1772,"mtime":1622134316995,"results":"133","hashOfConfig":"105"},{"size":4790,"mtime":1622806078883,"results":"134","hashOfConfig":"105"},{"size":2164,"mtime":1622837297598,"results":"135","hashOfConfig":"105"},{"size":1708,"mtime":1622375042709,"results":"136","hashOfConfig":"105"},{"size":2674,"mtime":1622921096097,"results":"137","hashOfConfig":"105"},{"size":885,"mtime":1622921125205,"results":"138","hashOfConfig":"105"},{"size":4359,"mtime":1622921265162,"results":"139","hashOfConfig":"105"},{"size":11669,"mtime":1622805892984,"results":"140","hashOfConfig":"105"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},"1e4carg",{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"143"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"143"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"143"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"143"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"143"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"143"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"143"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"143"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},"1ongqcw",{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"219"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"219"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"219"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"219"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"219"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"219"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"219"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"219"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"219"},"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\index.js",[],["299","300"],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\App.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\reportWebVitals.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Footer.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Header.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\Homescreen.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\products.js",[],["301","302"],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Prod.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Rating.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\Productscreen.js",["303","304","305"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap';\r\nimport Rating from '../Components/Rating.js';\r\nimport '../index.css';\r\nimport \"../STYLES/product_style.css\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Detailsproducts } from '../Actions/product_action.js';\r\nimport Mess from '../Components/Message.js';\r\nimport Load from '../Components/Loading.js';\r\n\r\n\r\n\r\nconst Productscreen = ({ history, match }) => {\r\n\r\n    // < ------  Shopping Cart ------>\r\n    const [qty, setqty] = useState(1);\r\n\r\n    // < ------  Fetcing data from the Backend using REDUX  ------>\r\n    const dispatch = useDispatch();\r\n\r\n    const product_details = useSelector(state => state.product_details);\r\n    const { loading, error, product } = product_details;\r\n\r\n    useEffect(() => {\r\n        dispatch(Detailsproducts(match.params.id));\r\n    }, [dispatch, match])\r\n\r\n    // const product = [];  \r\n    const addToCart_Handler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* { product.name} */}\r\n            <section className=\"Button\">\r\n                <a className=\"Button-btn\" href=\"/home\"> Back </a>\r\n            </section>\r\n\r\n\r\n            {loading ? < Load /> :\r\n                error ? < Mess variant=\"danger\" > {error}</Mess> :\r\n                    product ?\r\n                        (<Row>\r\n                            <Col md={5} id=\"proimg\">\r\n                                <img src={product.image} fluid />\r\n                            </Col>\r\n\r\n                            <Col md={4}>\r\n                                <ListGroup variant=\"flush\" >\r\n                                    <ListGroup.Item  ><h3 id=\"prohead\"> {product.name} </h3></ListGroup.Item>\r\n\r\n                                    <ListGroup.Item className='listy1'>\r\n                                        <Rating\r\n                                            value={product.rating}\r\n                                            text={` ${product.numReviews} reviews`}\r\n                                            color='crimson'\r\n                                        />\r\n                                    </ListGroup.Item >\r\n\r\n                                    <ListGroup.Item className='listy1' style={{ fontSize: \"1.8rem\" }}><b> Price : </b>₹{product.price}  </ListGroup.Item>\r\n                                    <ListGroup.Item className='listy1'><b> Description :  {' '}</b>{product.description}  </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col>\r\n\r\n                            <Col md={3} >\r\n                                <Card>\r\n                                    <ListGroup variant=\"flush\" >\r\n                                        <ListGroup.Item className=\"boxsm\" style={{ backgroundColor: \"#edf2f4\", padding: \".8rem 2rem\", color: 'black' }} >\r\n                                            <Row>\r\n                                                <Col> <b> PRICE -:</b> </Col>\r\n                                                <Col><strong>₹{product.price}</strong></Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item className=\"boxsm\" style={{ backgroundColor: \"#edf2f4\", padding: \".8rem 2rem\", color: 'black' }} >\r\n                                            <Row>\r\n                                                <Col> <b>STATUS -: </b> </Col>\r\n                                                <Col> {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"} </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n\r\n                                        {/* QUantity of the product */}\r\n                                        {product.countInStock > 0 && (\r\n                                            <ListGroup.Item className=\"boxsm\" style={{ backgroundColor: \"#edf2f4\", padding: \".8rem 2rem \", color: 'black' }} >\r\n                                                <Row>\r\n                                                    <Col><strong>Quantity -: </strong> </Col>\r\n                                                    <Col>\r\n                                                        <Form.Control as='select' value={qty} onChange={(e) => { setqty(e.target.value) }}>\r\n                                                            {[...Array(product.countInStock).keys()].map((x) => (\r\n                                                                <option key={x + 1} value={x + 1} >\r\n                                                                    {x + 1}\r\n                                                                </option>\r\n                                                            ))}\r\n                                                        </Form.Control>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        )}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Button\r\n                                                onClick={addToCart_Handler}\r\n                                                variant=\"danger\"\r\n                                                className='btn-block '\r\n                                                type='button'\r\n                                                disabled={product.countInStock === 0}\r\n                                            >\r\n                                                <strong><i class=\"fas fa-cart-arrow-down\"></i> ADD TO CART</strong>\r\n                                            </Button>\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>)\r\n\r\n                        : <h3>Cant fetch product obj</h3>\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Productscreen;\r\n","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\backend_URL.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\store.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Reducers\\Product_reducer.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Constants\\Product_constant.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Actions\\product_action.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Message.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Loading.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\Cartscreen.js",["306","307","308"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addToCart, removefromCart } from '../Actions/Cart_action.js';\r\nimport '../STYLES/cart_style.css';\r\nimport Mess from '../Components/Message.js';\r\nimport Load from '../Components/Loading.js';\r\nimport backend_URL from '../backend_URL.js';\r\n\r\nconst Cartscreen = ({ match, location, history }) => {\r\n\r\n    const productID = match.params.id;\r\n    const qTY = location.search;\r\n    console.log(qTY);  // ?qTY=4               \r\n\r\n    //  ?qTY=4  is stored in an array so a[0] = ?qty  and a[1] = 4.\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const CART = useSelector(state => state.CART);\r\n    // console.log(\"cart :: \", CART);\r\n    const { cartItems } = CART;\r\n    console.log(\"{ cartItems } from cartscreen : \", cartItems); // Array of OBJECTS -- [{}, {}, {}] present in the CART\r\n\r\n    useEffect(() => {\r\n        if (productID)\r\n            dispatch(addToCart(productID, qty));\r\n    }, [qty, productID, dispatch]);\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        console.log('remove')\r\n        dispatch(removefromCart(id));\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        // console.log(\"ccheckout\")\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col md={8} sm={5} >\r\n                    <div class=\"p-2 \">\r\n                        <Link to=\"/home\"> <i className=\"arrow left\"></i></Link>\r\n                        <span>  <h1 id=\"prohead\">Shopping Cart</h1></span>\r\n                    </div>\r\n\r\n\r\n                    {cartItems.length === 0 ?\r\n\r\n                        (<Mess>Your Cart id Empty <Link to=\"/home\">Go Back</Link></Mess>) :\r\n\r\n                        (<ListGroup variant=\"flush\" className=\"procart\">\r\n                            {/* item  ----> each product */}\r\n                            {cartItems.map(item => (\r\n                                <ListGroup.Item key={item.product} className=\"boxsm\">\r\n                                    <Row >\r\n                                        <Col md={2}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded />\r\n                                        </Col>\r\n\r\n                                        <Col md={3}>\r\n                                            {/* {item.product} ------->  is the ID */}\r\n                                            <Link to={`/product/${item.product}`} id=\"link_css\" style={{ fontSize: \"1.2rem\" }} ><b>{item.name}</b></Link>\r\n                                        </Col>\r\n\r\n                                        <Col md={2} id=\"link_css\">₹{item.price}</Col>\r\n\r\n                                        <Col md={2}>\r\n                                            <Form.Control\r\n                                                className=\"cartitem_num\"\r\n                                                as='select'\r\n                                                value={item.QTY} // update in the redux devtools \r\n                                                onChange={(e) =>\r\n                                                    dispatch(\r\n                                                        addToCart(item.product, Number(e.target.value))\r\n                                                    )}\r\n                                            >\r\n                                                {[...Array(item.countInStock).keys()].map((x) => (\r\n                                                    <option key={x + 1} value={x + 1}>\r\n                                                        {x + 1}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Form.Control>\r\n                                        </Col>\r\n\r\n                                        <Col md={2}>\r\n                                            <Button\r\n                                                type='button'\r\n                                                variant='light'\r\n                                                onClick={() => removeFromCartHandler(item.product)}\r\n                                            >\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                        )}\r\n                </Col>\r\n\r\n\r\n                <Col md={4} sm={7} style={{ padding: '.5rem' }} >\r\n                    <Card>\r\n                        <ListGroup variant='flush' >\r\n                            <ListGroup.Item className=\"cartbox_rgt\" >\r\n                                <h2>\r\n                                    <b>  Subtotal ({cartItems.reduce((acc, item) => acc + item.QTY, 0)}) items</b>\r\n                                </h2>\r\n                                <p> ₹ {cartItems\r\n                                    .reduce((acc, item) => acc + item.QTY * item.price, 0)\r\n                                    .toFixed(2)}  {/* fixed to 2 decimal places */}</p>\r\n\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    variant='success'\r\n                                    className='btn-block'\r\n                                    disabled={cartItems.length === 0}\r\n                                    onClick={checkoutHandler}\r\n                                >\r\n                                    <b> PROCEED TO CHECKOUT</b>\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cartscreen;\r\n\r\n\r\n\r\n\r\n// Syntax :    array.reduce(function(total, currentValue, currentIndex, arr), initialValue)","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Reducers\\Cart_reducer.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Constants\\Cart_constant.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Actions\\Cart_action.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\Introscreen.js",["309","310"],"import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col, Container, Carousel, } from \"react-bootstrap\";\r\nimport \"../STYLES/intro_style.css\";\r\n\r\n// Import css files for Carousal\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Slider from \"react-slick\";\r\n\r\n// Images\r\nimport pic from \"./choco.jpg\";\r\nimport cday from \"../Pics/img2.jfif\";\r\nimport gifts from \"../Pics/gifts.jfif\";\r\nimport party from \"../Pics/party.jfif\";\r\n\r\n\r\n\r\nconst Introscreen = () => {\r\n\r\n    var settings;\r\n    const [slider, setslider] = useState(settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 3,\r\n        slidesToScroll: 1,\r\n    })\r\n\r\n    var width = window.innerWidth;\r\n\r\n    useEffect(() => {\r\n        console.log(width);\r\n        if (width < 780) {     // <----- Responsive for VIEWPORT\r\n            console.log(\"if cond working\");\r\n            setslider(settings = {\r\n                dots: true,\r\n                infinite: true,\r\n                speed: 500,\r\n                slidesToShow: 2,\r\n                slidesToScroll: 1,\r\n            })\r\n        }\r\n    }, [width]);\r\n\r\n    return (\r\n        <div className=\"main-cls\">\r\n            {/*   <Container >   border around\r\n            <Link className=\"btn btn-danger my-3\" to=\"/home\" >  GO BACK  </Link>\r\n            {{<div className=\"bubble\" >\r\n                    <img src={bubble} />\r\n                    <img src={bubble} />\r\n                    <img src={bubble} />\r\n                    <img src={bubble} />\r\n                    <img src={bubble} />\r\n                    <img src={bubble} />\r\n                    <img src={bubble} />\r\n                </div>}}\r\n            </Container> */}\r\n\r\n            {/*  <Link className=\"btn btn-danger my-3\" to=\"/home\">\r\n                GO BACK{\" \"}\r\n            </Link> */}\r\n\r\n            {/* -----------  CAROUSEL  --------- */}\r\n            <Carousel fade>\r\n                <Carousel.Item className=\"mycarou\">\r\n                    <div className=\"overlay-image\">\r\n                        {\" \"}\r\n                        {/* hazy in the background using OPACITY */}\r\n                        <img\r\n                            className=\"d-block w-100\"\r\n                            src=\"https://images.unsplash.com/photo-1526081715791-7c538f86060e?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NHx8Y2hvY29sYXRlJTIwZ2lmdCUyMGJveHxlbnwwfHwwfA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60\"\r\n                            alt=\"Third slide\"\r\n                        />\r\n                    </div>\r\n                    <Carousel.Caption className=\"carou_center\">\r\n                        <h3 className=\"title\">Chocolatey</h3>\r\n                        <p className=\"subtitle\">\r\n                            ------- Made with Love Unique Chocolates for gourmet -------\r\n                    </p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n\r\n                <Carousel.Item className=\"mycarou\">\r\n                    <div className=\"overlay-image\">\r\n                        <img className=\"d-block w-100\" src={cday} alt=\"Second slide\" />\r\n                    </div>\r\n                    <Carousel.Caption className=\"carou_center\">\r\n                        <h3 className=\"subtitle\">DARK CHOCOLATES</h3>\r\n                        <p className=\"subtitle\">\r\n                            ------- A healthy alternatives for Chocolate Lovers -------{\" \"}\r\n                        </p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n\r\n                <Carousel.Item className=\"mycarou\">\r\n                    <div className=\"overlay-image\">{\" \"}\r\n                        <img\r\n                            className=\"d-block w-100 \"\r\n                            src=\"https://images.unsplash.com/photo-1526823127573-0fda76b6c24f?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxzZWFyY2h8MjR8fGNob2NvbGF0ZXxlbnwwfHwwfA%3D%3D&auto=format&fit=crop&w=600&q=60\"\r\n                            alt=\"First slide\"\r\n                        />\r\n                    </div>\r\n\r\n                    <Carousel.Caption className=\"carou_center\">\r\n                        <h3 className=\"subtitle\">DARK CHOCOLATES</h3>\r\n                        <p className=\"subtitle\">\r\n                            ------- A healthy alternatives for Chocolate Lovers -------{\" \"}\r\n                        </p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n            </Carousel>\r\n\r\n\r\n            <Container className=\"container_self\">\r\n                <div className=\"minihead\">\r\n                    <h2 className=\"subheading\">\r\n                        {\" \"}\r\n                        <span> Free Shipping</span>{\" \"}\r\n                    </h2>\r\n                </div>\r\n\r\n                {/* -----------  CARD - SLIDDER   --------- */}\r\n                <div>\r\n                    <Slider {...slider}>\r\n                        <div className=\"minislider\">\r\n                            <img\r\n                                className=\"d-block w-100 htset \"\r\n                                src=\"http://design.dev.drcsystems.ooo:8084/themeforest/chocolate/assets/images/offer-img/img10.jpg\"\r\n                                alt=\"First slide\"\r\n                            />\r\n                            <div className=\"minisli_box\">\r\n                                <h4>Birthday Day</h4>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"minislider\">\r\n                            <img className=\"d-block w-100 htset\" src={pic} alt=\"First slide\" />\r\n                            <div className=\"minisli_box\">\r\n                                <h4>Valentine's Day</h4>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"minislider\">\r\n                            <img\r\n                                className=\"d-block w-100 htset\"\r\n                                src={gifts}\r\n                                alt=\"First slide\"\r\n                            />\r\n                            <div className=\"minisli_box\">\r\n                                <h4>Gifts</h4>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"minislider\">\r\n                            <img className=\"d-block w-100 htset\" src={party} alt=\"First slide\" />\r\n                            <div className=\"minisli_box\">\r\n                                <h4>Party</h4>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"minislider\">\r\n                            <img\r\n                                className=\"d-block w-100 htset\"\r\n                                src=\"https://images.unsplash.com/photo-1548741487-18d363dc4469?ixid=MXwxMjA3fDB8MHxzZWFyY2h8Mjd8fGNob2NvbGF0ZXxlbnwwfHwwfA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60\"\r\n                                alt=\"First slide\"\r\n                            />\r\n                            <div className=\"minisli_box\">\r\n                                <h4>chocolatey</h4>\r\n                            </div>\r\n                        </div>\r\n                    </Slider>\r\n                </div>\r\n            </Container>\r\n\r\n\r\n            <section id=\"parallax\" className=\"parallax\">\r\n                <div className=\"container\" data-aos=\"zoom-in\">\r\n                    <div className=\"text-center\">\r\n                        <h2>Valentines Day</h2>\r\n                        <p>A brand new Valentines Day's Collection on your way ....</p>\r\n                        <a className=\"parallax-btn\" href=\"/home\">\r\n                            SHOP NOW\r\n                         </a>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n\r\n            <Container>\r\n                {/* <div class=\"d-flex justify-content-around\"> */}\r\n                <Row>\r\n                    <Col md={8} >\r\n                        <img\r\n                            src=\"http://crems.like-themes.com/wp-content/uploads/2020/07/section-about-bg.png\"\r\n                            alt=\"First slide\"\r\n                        />\r\n                    </Col>\r\n\r\n                    <Col md={4} >\r\n                        <div id=\"item\">\r\n                            <h5 className=\"itemhead\"><i class=\"fab fa-pagelines icoo\"></i> Natural Organic Products</h5>\r\n                            <p className=\"item_subhead\">\r\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div id=\"item\">\r\n                            <h5 className=\"itemhead\"> <i class=\"fas fa-gift icoo\"></i>Designing</h5>\r\n                            <p className=\"item_subhead\">\r\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div id=\"item\">\r\n                            <h5 className=\"itemhead\"><i class=\"fas fa-candy-cane icoo\"></i>Best Quality Cocoa</h5>\r\n                            <p className=\"item_subhead\">\r\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit.Duis aute irure dolor in reprehenderit\r\n                            </p>\r\n                        </div>\r\n\r\n                    </Col>\r\n                </Row>\r\n                {/* </div> */}\r\n            </Container>\r\n\r\n\r\n            <Container className=\"container_self\">\r\n                <div className=\"minihead\">\r\n                    <h2 className=\"subheading\">\r\n                        {\" \"}\r\n                        <span>Trending Chocolates</span>{\" \"}\r\n                    </h2>\r\n                </div>\r\n                <Row className=\"HOVER\" >\r\n                    <Col md={3} sm={6} xs={6} className=\"choco\" >\r\n                        <img className=\"choco_img\" src=\"http://crems.like-themes.com/wp-content/uploads/2019/06/shop-04-800x800.png\" alt=\"lost\" />\r\n                        <div className=\"choco_name\" > <h4>Choco Vanilla Truffle</h4></div>\r\n                    </Col>\r\n\r\n                    <Col md={3} sm={6} xs={6} className=\"choco\" >\r\n                        <img className=\"choco_img\" src=\"http://crems.like-themes.com/wp-content/uploads/2019/06/candies_prod.png\" alt=\"lost\" />\r\n                        <div className=\"choco_name\" > <h4>Ferrero Rocher</h4></div>\r\n                    </Col>\r\n\r\n                    <Col md={3} sm={6} xs={6} className=\"choco\" >\r\n                        <img className=\"choco_img\" src=\"http://crems.like-themes.com/wp-content/uploads/2019/06/shop-05-768x768.png\" alt=\"lost\" />\r\n                        <div className=\"choco_name\" > <h4>Almond Dark Chocolate</h4></div>\r\n                    </Col>\r\n\r\n                    <Col md={3} sm={6} xs={6} className=\"choco\" >\r\n                        <img className=\"choco_img\" src=\"http://crems.like-themes.com/wp-content/uploads/2019/06/choco_prod.png\" alt=\"lost\" />\r\n                        <div className=\"choco_name\" > <h4>Dark Chocolate</h4></div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <section className=\"my-3 Button\" style={{ marginLeft: \"3rem\" }}>\r\n                        <a className=\"Button-btn\" href=\"/home\"> SHOP NOW </a>\r\n                    </section>\r\n                </Row>\r\n\r\n            </Container>\r\n\r\n\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default Introscreen;\r\n","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Reducers\\User_reducer.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Constants\\User_constant.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\LoginScreen.js",["311"],"\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Button, Form } from 'react-bootstrap';\r\nimport '../index.css';\r\nimport '../STYLES/Loginform.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LogIN } from '../Actions/User_action.js';\r\nimport Loginform_Container from \"../Components/Loginform_Container.js\";\r\nimport Mess from '../Components/Message.js';\r\nimport Load from '../Components/Loading.js';\r\n\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/home';// email ( returns the querystring part of a URL)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const user_Login = useSelector(state => state.user_Login);  //user_Login -> from the store\r\n    const { loading, error, UserInfo } = user_Login;\r\n\r\n\r\n    useEffect(() => {\r\n        if (UserInfo)\r\n            history.push(redirect)\r\n    }, [history, UserInfo, redirect])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault() //It'll NOT SUBMIT unless dispatch() calls ACTION & PW,EMAIL are get verified\r\n        dispatch(LogIN(email, password)) //DISPATCH LOGIN\r\n    }\r\n\r\n\r\n    return (\r\n        <Loginform_Container>\r\n            <h1 className=\"loginhead\"><b>Sign In</b></h1>\r\n\r\n            {error && <Mess variant='danger'>{error}</Mess>}\r\n            {loading && <Load />}\r\n\r\n            <Form onSubmit={submitHandler} id=\"login_form\" >\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label><b>Email Address</b></Form.Label>\r\n                    <Form.Control\r\n                        className=\"form_box\"\r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label><b>Password</b></Form.Label>\r\n                    <Form.Control\r\n                        className=\"form_box\"\r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='danger'>\r\n                    <b style={{ fontSize: \"18px\" }}>Sign In</b>\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col style={{ color: \"rgba(255, 255, 255, 0.959)\" }}>\r\n                    New Customer?{' '}\r\n                    <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Loginform_Container>\r\n    )\r\n}\r\n\r\nexport default LoginScreen;\r\n","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Actions\\User_action.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Loginform_Container.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\RegisterScreen.js",["312","313","314","315"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap';\r\nimport '../index.css';\r\nimport '../STYLES/Loginform.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Register } from '../Actions/User_action.js';\r\nimport Loginform_Container from \"../Components/Loginform_Container.js\";\r\nimport Mess from '../Components/Message.js';\r\nimport Load from '../Components/Loading.js';\r\n\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmpass, setConfirmpass] = useState('');\r\n    const [msg, setMsg] = useState(null);\r\n\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/home';// email ( returns the querystring part of a URL)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const user_Register = useSelector(state => state.user_Register);  //user_Register -> from the store\r\n    const { loading, error, UserInfo } = user_Register;\r\n\r\n\r\n    useEffect(() => {\r\n        if (UserInfo)\r\n            history.push(redirect)\r\n    }, [history, UserInfo, redirect])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (password !== confirmpass)\r\n            setMsg(\"Password doesn't match!\");\r\n        else\r\n            dispatch(Register(name, email, password));\r\n    }\r\n\r\n\r\n    return (\r\n        <Loginform_Container>\r\n            <h1 className=\"loginhead\" >Sign Up</h1>\r\n\r\n            {msg && <Mess variant='danger'>{msg}</Mess>}\r\n            {error && <Mess variant='danger'>{error}</Mess>}\r\n            {loading && <Load />}\r\n\r\n\r\n            <Form onSubmit={submitHandler} id=\"login_form\">\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label><b>Name</b></Form.Label>\r\n                    <Form.Control\r\n                        className=\"form_box\"\r\n                        type='name'\r\n                        placeholder='name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label><b>Email Address</b></Form.Label>\r\n                    <Form.Control\r\n                        className=\"form_box\"\r\n                        type='email'\r\n                        placeholder='email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label><b>Password</b></Form.Label>\r\n                    <Form.Control\r\n                        className=\"form_box\"\r\n                        type='password'\r\n                        placeholder='password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmpassword'>\r\n                    <Form.Label><b>Confirm Password</b></Form.Label>\r\n                    <Form.Control\r\n                        className=\"form_box\"\r\n                        type='password'\r\n                        placeholder='confirm password'\r\n                        value={confirmpass}\r\n                        onChange={(e) => setConfirmpass(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='danger'>\r\n                    <b style={{ fontSize: \"18px\" }}>Register</b>\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col style={{ color: \"rgba(255, 255, 255, 0.959)\" }}>\r\n                    Have an Account ?{' '}\r\n                    <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Register\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Loginform_Container>\r\n    )\r\n}\r\n\r\n\r\nexport default LoginScreen;\r\n","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\ProfileScreen.js",["316"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Row, Col, Container, Button, Form } from 'react-bootstrap';\r\nimport '../index.css';\r\nimport '../STYLES/Loginform.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getUserDetails, UserUpdateProfile } from '../Actions/User_action.js';\r\nimport Mess from '../Components/Message.js';\r\nimport Load from '../Components/Loading.js';\r\n\r\n\r\nconst LoginScreen = ({ history }) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmpass, setConfirmpass] = useState('');\r\n    const [msg, setMsg] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const user_Details = useSelector(state => state.user_Details);\r\n    const { loading, error, USER } = user_Details;\r\n\r\n    const user_Login = useSelector(state => state.user_Login); //user_Login -> from the store\r\n    const { UserInfo } = user_Login;\r\n\r\n    const user_UpdateProfileDetails = useSelector(state => state.user_UpdateProfileDetails);\r\n    const { success } = user_UpdateProfileDetails;\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!UserInfo)\r\n            history.push('/login');\r\n        else {\r\n            if (!USER.name)\r\n                dispatch(getUserDetails('profile'));\r\n            else {\r\n                console.log(USER.name)\r\n                setName(USER.name);\r\n                setEmail(USER.email);\r\n            }\r\n        }\r\n    }, [dispatch, history, UserInfo, USER]) //useEffect will be fired off when there is any change in these attributes.\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (password != confirmpass)\r\n            setMsg(\"Password doesn't match!\");\r\n        else {\r\n            //DISPATCH Updated PROFILE\r\n            dispatch(UserUpdateProfile({ id: USER._id, name, email, password }))\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={5} >\r\n                <Container>\r\n                    <Row className=\"justify-content-md-center\" >\r\n                        <Col md={6} xs={12} >\r\n                            {/* <Loginform_Container> */}\r\n                            <h2 className=\"loginhead\" >PROFILE</h2>\r\n\r\n                            {msg && <Mess variant='danger'>{msg}</Mess>}\r\n                            {error && <Mess variant='danger'>{error}</Mess>}\r\n                            {success && <Mess variant='success'>Profile Updated</Mess>}\r\n                            {loading && <Load />}\r\n\r\n\r\n                            <Form onSubmit={submitHandler} id=\"login_form\">\r\n                                <Form.Group controlId='name'>\r\n                                    <Form.Label><b>Name</b></Form.Label>\r\n                                    <Form.Control\r\n                                        className=\"form_box\"\r\n                                        type='name'\r\n                                        placeholder='Enter name'\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='email'>\r\n                                    <Form.Label><b>Email Address</b></Form.Label>\r\n                                    <Form.Control\r\n                                        className=\"form_box\"\r\n                                        type='email'\r\n                                        placeholder='Enter email'\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='password'>\r\n                                    <Form.Label><b>Password</b></Form.Label>\r\n                                    <Form.Control\r\n                                        className=\"form_box\"\r\n                                        type='password'\r\n                                        placeholder='Enter password'\r\n                                        value={password}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='confirmpassword'>\r\n                                    <Form.Label><b>Confirm Password</b></Form.Label>\r\n                                    <Form.Control\r\n                                        className=\"form_box\"\r\n                                        type='password'\r\n                                        placeholder='confirm password'\r\n                                        value={confirmpass}\r\n                                        onChange={(e) => setConfirmpass(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Button type='submit' variant='warning'>\r\n                                    <b style={{ fontSize: \"18px\" }}>Update</b>\r\n                                </Button>\r\n                            </Form>\r\n                            {/* </Loginform_Container> */}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Col>\r\n\r\n            <Col md={7} >\r\n                <h2>My Orders</h2>\r\n            </Col>\r\n        </Row>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default LoginScreen;\r\n","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\ShippingScreen.js",["317","318","319"],"\r\nimport React, { useState } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport '../index.css';\r\nimport '../STYLES/Loginform.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SaveShippingAddress } from '../Actions/Cart_action.js';\r\nimport Loginform_Container from \"../Components/Loginform_Container.js\";\r\nimport CheckoutSteps from \"../Components/CheckoutSteps.js\";\r\nimport Mess from '../Components/Message.js';\r\nimport Load from '../Components/Loading.js';\r\n\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n\r\n    const CART = useSelector(state => state.CART);\r\n    const { shippingAddress } = CART;\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address);\r\n    const [city, setCity] = useState(shippingAddress.city);\r\n    const [postalcode, setPostalCode] = useState(shippingAddress.postalcode);\r\n    const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"submit\");\r\n        dispatch(SaveShippingAddress({ address, city, postalcode, country }));\r\n        history.push('/payment');   // redirect to payment page\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Loginform_Container>\r\n                <CheckoutSteps step1 step2 />\r\n                <h1 className=\"loginhead\" >Shipping</h1>\r\n\r\n                {/*  {msg && <Mess variant='danger'>{msg}</Mess>}\r\n                {error && <Mess variant='danger'>{error}</Mess>}\r\n                {loading && <Load />} */}\r\n\r\n\r\n                <Form onSubmit={submitHandler} id=\"login_form\">\r\n                    <Form.Group controlId='address'>\r\n                        <Form.Label><b>Address</b></Form.Label>\r\n                        <Form.Control\r\n                            className=\"form_box\"\r\n                            type='name'\r\n                            placeholder='address'\r\n                            value={address}\r\n                            onChange={(e) => setAddress(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='city'>\r\n                        <Form.Label><b>City</b></Form.Label>\r\n                        <Form.Control\r\n                            className=\"form_box\"\r\n                            type='city'\r\n                            placeholder='city'\r\n                            value={city}\r\n                            onChange={(e) => setCity(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='postalcode'>\r\n                        <Form.Label><b>Postal Code</b></Form.Label>\r\n                        <Form.Control\r\n                            className=\"form_box\"\r\n                            type='postalcode'\r\n                            placeholder='postalcode'\r\n                            value={postalcode}\r\n                            onChange={(e) => setPostalCode(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='country'>\r\n                        <Form.Label><b>Country</b></Form.Label>\r\n                        <Form.Control\r\n                            className=\"form_box\"\r\n                            type='text'\r\n                            placeholder='country'\r\n                            value={country}\r\n                            onChange={(e) => setCountry(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='success'>\r\n                        <b style={{ fontSize: \"18px\" }}>Continue</b>\r\n                    </Button>\r\n                </Form>\r\n\r\n            </Loginform_Container>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ShippingScreen;\r\n","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\CheckoutSteps.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\PaymentScreen.js",["320"],"\r\nimport React, { useState } from 'react';\r\nimport { Button, Form, Col } from 'react-bootstrap';\r\nimport '../index.css';\r\nimport '../STYLES/Loginform.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SavePaymentMethod } from '../Actions/Cart_action.js';\r\nimport Loginform_Container from \"../Components/Loginform_Container.js\";\r\nimport CheckoutSteps from \"../Components/CheckoutSteps.js\";\r\n\r\n\r\n\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n\r\n\r\n    const CART = useSelector(state => state.CART);\r\n    const { shippingAddress } = CART;\r\n\r\n    if (!shippingAddress)\r\n        history.push('/shipping');\r\n\r\n    const [paymentmethod, setPaymentMethod] = useState(\"PayPal\");\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"submit\");\r\n        dispatch(SavePaymentMethod(paymentmethod));\r\n        history.push('/placeorder');   // redirect to payment page\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Loginform_Container>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <h1 className=\"loginhead\" >Payment Method</h1>\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='PayPal'\r\n                            name='paymentMethod'\r\n                            value='PayPal'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n                        </Form.Check>\r\n\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='Stripe'\r\n                            id='Stripe'\r\n                            name='paymentMethod'\r\n                            value='Stripe'\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        ></Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </Loginform_Container>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen;\r\n","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\PlaceOrderScreen.js",["321","322","323","324"],"D:\\React_Projects\\Ecommerce\\frontend\\src\\index.js",[],["325","326"],"D:\\React_Projects\\Ecommerce\\frontend\\src\\store.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\App.js",["327"],"\r\nimport React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { Container } from 'react-bootstrap';\r\nimport './index.css';\r\nimport NAVIGATION_BAR from './Components/Header.js';\r\nimport FOOT from './Components/Footer.js';\r\nimport INTROSCREEN from './Screens/Introscreen.js';\r\nimport HOMESCREEN from './Screens/Homescreen.js';\r\nimport PRODUCTSCREEN from './Screens/Productscreen.js';\r\nimport CARTSCREEN from './Screens/Cartscreen.js';\r\nimport LOGINSCREEN from './Screens/LoginScreen.js';\r\nimport REGISTERSCREEN from './Screens/RegisterScreen.js';\r\nimport PROFILESCREEN from './Screens/ProfileScreen.js';\r\nimport SHIPPINGSCREEN from './Screens/ShippingScreen.js';\r\nimport PAYMENTSCREEN from './Screens/PaymentScreen.js';\r\nimport PLACEORDERSCREEN from './Screens/PlaceOrderScreen.js';\r\nimport ORDER_SCREEN from './Screens/OrderScreen.js';\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const [filling, setFilling] = useState(\"None\");\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\" style={{ backgroundColor: \"#222022ef\"  /*  \"#0a9396\" */ }}>\r\n        <NAVIGATION_BAR />\r\n\r\n        <main >\r\n          <div className=\"self_containerFull\">\r\n            {/* <Route path='/intro' component={INTROSCREEN} exact /> */}\r\n            <Route path='/order/:id' component={ORDER_SCREEN} />\r\n            <Route path='/placeorder' component={PLACEORDERSCREEN} />\r\n            <Route path='/payment' component={PAYMENTSCREEN} />\r\n            <Route path='/shipping' component={SHIPPINGSCREEN} />\r\n            <Route path='/profile' component={PROFILESCREEN} />\r\n            {/* <Route path='/cart/:id?' component={CARTSCREEN} /> */}\r\n            {/* <Route path='/product/:id' component={PRODUCTSCREEN} /> */}\r\n\r\n            <Route path='/cart/:id?'\r\n              render={(props) => (\r\n                <CARTSCREEN {...props}\r\n                  filling={filling}\r\n                />\r\n              )}\r\n            />\r\n\r\n            <Route path='/product/:id'\r\n              render={(props) => (\r\n                <PRODUCTSCREEN {...props}\r\n                  filling={filling}\r\n                  setFilling={setFilling}\r\n                />\r\n              )}\r\n            />\r\n\r\n            <Route path='/register' component={REGISTERSCREEN} />\r\n            <Route path='/login' component={LOGINSCREEN} />\r\n            <Route path='/home' component={HOMESCREEN} exact />\r\n          </div>\r\n\r\n          <Route path='/' component={INTROSCREEN} exact />\r\n        </main>\r\n\r\n\r\n\r\n        <FOOT />\r\n      </div>\r\n    </Router>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n// Container tag helps to add a broad margin around ","D:\\React_Projects\\Ecommerce\\frontend\\src\\reportWebVitals.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Reducers\\Product_reducer.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Reducers\\Cart_reducer.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Reducers\\User_reducer.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Footer.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Header.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\Introscreen.js",["328","329"],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\Homescreen.js",["330"],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\Cartscreen.js",["331","332","333"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addToCart, removefromCart } from '../Actions/Cart_action.js';\r\nimport '../STYLES/cart_style.css';\r\nimport Mess from '../Components/Message.js';\r\nimport Load from '../Components/Loading.js';\r\nimport backend_URL from '../backend_URL.js';\r\n\r\n\r\n\r\nconst Cartscreen = ({ match, location, history, filling }) => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const productID = match.params.id;\r\n    const qTY = location.search;\r\n    console.log(qTY);  // ?qTY=4               \r\n\r\n    //  ?qTY=4  is stored in an array so a[0] = ?qty  and a[1] = 4.\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n\r\n\r\n\r\n    const CART = useSelector(state => state.CART);\r\n    // console.log(\"cart :: \", CART);\r\n    const { cartItems } = CART;\r\n    console.log(\"{ cartItems } in CART from cartscreen : \", cartItems); // Array of OBJECTS -- [{}, {}, {}] present in the CART\r\n\r\n\r\n    useEffect(() => {\r\n        if (productID)\r\n            dispatch(addToCart(productID, qty, filling));\r\n    }, [qty, productID, filling, dispatch]);\r\n\r\n\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        console.log('remove')\r\n        dispatch(removefromCart(id));\r\n    }\r\n\r\n\r\n\r\n    const checkoutHandler = () => {\r\n        // console.log(\"ccheckout\")\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div class=\"p-2 \">\r\n                <Link to=\"/home\"> <i className=\"arrow left\"></i></Link>\r\n                <span>  <h1 className=\"cartHead\"  >Shopping Cart</h1></span>\r\n            </div>\r\n\r\n            <Row>\r\n                <Col md={8} sm={12} xs={12} className=\"procart\">\r\n\r\n                    {cartItems.length === 0 ?\r\n                        (<Mess>Your Cart id Empty <Link to=\"/home\">Go Back</Link></Mess>)\r\n                        :\r\n                        (<ListGroup variant=\"flush\" >\r\n                            {/* item  ----> each product */}\r\n                            {cartItems.map(item => (\r\n                                <ListGroup.Item key={item.product} className=\"boxsm\">\r\n                                    <Row >\r\n                                        <Col md={2} sm={3} xs={3}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded id=\"cartImg\" />\r\n                                        </Col>\r\n\r\n                                        <Col md={4} sm={2} xs={2}  >\r\n                                            {/* {item.product} ------->  is the ID */}\r\n                                            <Link to={`/product/${item.product}`} className=\"cart_subHead\" ><b>{item.name} | ({item.filling})</b></Link>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={2} sm={2} xs={2} className=\"cart_subHead\">₹{item.price}</Col>\r\n\r\n                                        <Col md={2} sm={3} xs={3} >\r\n                                            <Form.Control\r\n                                                className=\"cartitem_num\"\r\n                                                as='select'\r\n                                                value={item.qty} // update in the redux devtools \r\n                                                onChange={(e) =>\r\n                                                    dispatch(\r\n                                                        addToCart(item.product, Number(e.target.value))\r\n                                                    )}\r\n                                            >\r\n                                                {[...Array(item.countInStock).keys()].map((x) => (\r\n                                                    <option key={x + 1} value={x + 1}>\r\n                                                        {x + 1}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Form.Control>\r\n                                        </Col>\r\n\r\n                                        <Col md={2} sm={1} xs={1} >\r\n                                            <Button\r\n                                                type='button'\r\n                                                variant='light'\r\n                                                onClick={() => removeFromCartHandler(item.product)}\r\n                                            >\r\n                                                <i className='fas fa-trash'></i>\r\n                                                {/* <i className=\"far fa-trash-alt\"></i> */}\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                        )}\r\n                </Col>\r\n\r\n\r\n                <Col md={4} sm={12} xs={12} className=\"procart\" style={{ paddingTop: \"1.7rem\" }}>\r\n                    <Card>\r\n                        <ListGroup variant='flush' >\r\n                            <ListGroup.Item className=\"cartbox_rgt\" >\r\n                                <h2>\r\n                                    <b>  Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</b>\r\n                                </h2>\r\n                                <p> ₹ {cartItems\r\n                                    .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                                    .toFixed(2)}  {/* fixed to 2 decimal places */}</p>\r\n\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    variant='success'\r\n                                    className='btn-block'\r\n                                    disabled={cartItems.length === 0}\r\n                                    onClick={checkoutHandler}\r\n                                >\r\n                                    <b> PROCEED TO CHECKOUT</b>\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cartscreen;\r\n\r\n\r\n\r\n\r\n// Syntax :    array.reduce(function(total, currentValue, currentIndex, arr), initialValue)","D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\Productscreen.js",["334","335","336","337","338"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form, Dropdown, DropdownButton } from 'react-bootstrap';\r\nimport Rating from '../Components/Rating.js';\r\nimport '../index.css';\r\nimport \"../STYLES/product_style.css\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Detailsproducts } from '../Actions/product_action.js';\r\nimport Mess from '../Components/Message.js';\r\nimport Load from '../Components/Loading.js';\r\n\r\n\r\n\r\nconst Productscreen = ({ history, match, filling, setFilling }) => {\r\n\r\n    // < ------  Fetcing data from the Backend using REDUX  ------>\r\n    const dispatch = useDispatch();\r\n\r\n    // < ------  Shopping Cart ------>\r\n    const [qty, setqty] = useState(1);\r\n\r\n    console.log(filling)\r\n\r\n\r\n\r\n    // OBJECT \r\n    const product_details = useSelector(state => state.product_details); // <--- Allows to extract data from the Reducer fn frm Store\r\n    const { loading, error, product } = product_details;                 // product --> product {} that comes from BACKEND find by ID from params\r\n    console.log(product_details)\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(Detailsproducts(match.params.id));\r\n    }, [dispatch, match])\r\n\r\n\r\n\r\n    // const product = [];  \r\n    const addToCart_Handler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* { product.name} */}\r\n            <section className=\"Button\">\r\n                <a className=\"Button-btn\" href=\"/home\"> Back </a>\r\n            </section>\r\n\r\n\r\n            {loading ? < Load /> :\r\n                error ? < Mess variant=\"danger\" > {error}</Mess> :\r\n                    product ?\r\n\r\n                        (<Row>\r\n                            <Col md={4} id=\"proimg\" sm={12} >\r\n                                <img src={product.image} fluid />\r\n                            </Col>\r\n\r\n                            <Col md={5} sm={12} xs={12} className='colGap' >\r\n                                <ListGroup variant=\"flush\" >\r\n                                    <ListGroup.Item  ><h3 id=\"prohead\"> {product.name} </h3></ListGroup.Item>\r\n\r\n                                    <ListGroup.Item className='listy1'>\r\n                                        <Rating\r\n                                            value={product.rating}\r\n                                            text={` ${product.numReviews} reviews`}\r\n                                            color='crimson'\r\n                                        />\r\n                                    </ListGroup.Item >\r\n\r\n                                    <ListGroup.Item className='listy1'><b> Brand :  {' '}</b>{product.brand}  </ListGroup.Item>\r\n                                    <ListGroup.Item className='listy1' style={{ fontSize: \"1.6rem\" }}><b> Price : </b>₹{product.price}  </ListGroup.Item>\r\n                                    <ListGroup.Item className='listy1'><b> Description :  {' '}</b>{product.description}  </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item className='listy1'><b> Filling :  {' '}</b>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <Form>\r\n                                                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                                        <Form.Control\r\n                                                            as=\"select\"\r\n                                                            className=\"filling\" onChange={(e) => setFilling(e.target.value)}\r\n                                                            variant=\"success\"\r\n                                                            value={filling}\r\n                                                        >\r\n                                                            <option>None</option>\r\n                                                            <option>Nuts</option>\r\n                                                            <option>Fudge </option>\r\n                                                            <option>Choco Chips </option>\r\n                                                            <option>Caramel </option>\r\n                                                            <option>50% Dark </option>\r\n                                                            <option>75% Dark</option>\r\n                                                            <option> 99% Dark</option>\r\n                                                            <option>White Chocolate </option>\r\n                                                            <option>Truffle </option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n                                                </Form>\r\n                                            </Col>\r\n\r\n                                            <Col>   <p>{filling}</p></Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                </ListGroup>\r\n                            </Col>\r\n\r\n\r\n\r\n                            <Col md={3} sm={12} xs={12} className='colGap'>\r\n                                <Card>\r\n                                    <ListGroup variant=\"flush\" >\r\n                                        <ListGroup.Item className=\"boxsm\" style={{ backgroundColor: \"#edf2f4\", padding: \".8rem 2rem\", color: 'black' }} >\r\n                                            <Row>\r\n                                                <Col> <b> PRICE -:</b> </Col>\r\n                                                <Col><strong>₹{product.price}</strong></Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item className=\"boxsm\" style={{ backgroundColor: \"#edf2f4\", padding: \".8rem 2rem\", color: 'black' }} >\r\n                                            <Row>\r\n                                                <Col> <b>STATUS -: </b> </Col>\r\n                                                <Col> {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"} </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n\r\n                                        {/* QUantity of the product */}\r\n                                        {product.countInStock > 0 && (\r\n                                            <ListGroup.Item className=\"boxsm\" style={{ backgroundColor: \"#edf2f4\", padding: \".8rem 2rem \", color: 'black' }} >\r\n                                                <Row>\r\n                                                    <Col><strong>Quantity -: </strong> </Col>\r\n                                                    <Col>\r\n                                                        <Form.Control as='select' value={qty} onChange={(e) => { setqty(e.target.value) }}>\r\n                                                            {[...Array(product.countInStock).keys()].map((x) => (\r\n                                                                <option key={x + 1} value={x + 1} >\r\n                                                                    {x + 1}\r\n                                                                </option>\r\n                                                            ))}\r\n                                                        </Form.Control>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        )}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Button\r\n                                                onClick={addToCart_Handler}\r\n                                                variant=\"danger\"\r\n                                                className='btn-block '\r\n                                                type='button'\r\n                                                disabled={product.countInStock === 0}\r\n                                            >\r\n                                                <strong><i class=\"fas fa-cart-arrow-down\"></i> ADD TO CART</strong>\r\n                                            </Button>\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>)\r\n\r\n                        : <h3>Cant fetch product obj</h3>\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Productscreen;\r\n","D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\LoginScreen.js",["339"],"\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Button, Form } from 'react-bootstrap';\r\nimport '../index.css';\r\nimport '../STYLES/Loginform.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LogIN } from '../Actions/User_action.js';\r\nimport Loginform_Container from \"../Components/Loginform_Container.js\";\r\nimport Mess from '../Components/Message.js';\r\nimport Load from '../Components/Loading.js';\r\n\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/home';// email ( returns the querystring part of a URL)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const user_Login = useSelector(state => state.user_Login);  //user_Login -> from the store\r\n    const { loading, error, UserInfo } = user_Login;\r\n\r\n\r\n    useEffect(() => {\r\n        if (UserInfo)\r\n            history.push(redirect)\r\n    }, [history, UserInfo, redirect])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();                 //It'll NOT SUBMIT unless dispatch() calls ACTION & PW,EMAIL are get verified\r\n        dispatch(LogIN(email, password)) //DISPATCH LOGIN\r\n    }\r\n\r\n\r\n    return (\r\n        <Loginform_Container>\r\n            <h1 className=\"cartHead\" style={{ paddingBottom: \"2.3rem\" }} >Login</h1>\r\n\r\n            {error && <Mess variant='danger'>{error}</Mess>}\r\n            {loading && <Load />}\r\n\r\n            <Form onSubmit={submitHandler} id=\"login_form\" >\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label><b>Email Address</b></Form.Label>\r\n                    <Form.Control\r\n                        className=\"form_box\"\r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label><b>Password</b></Form.Label>\r\n                    <Form.Control\r\n                        className=\"form_box\"\r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='danger'>\r\n                    <b style={{ fontSize: \"18px\" }}>Sign In</b>\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col style={{ color: \"rgba(255, 255, 255, 0.959)\" }}>\r\n                    New Customer?{' '}\r\n                    <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Loginform_Container>\r\n    )\r\n}\r\n\r\nexport default LoginScreen;\r\n","D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\ProfileScreen.js",["340"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Row, Col, Container, Button, Table, Form } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport '../index.css';\r\nimport '../STYLES/Loginform.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getUserDetails, UserUpdateProfile } from '../Actions/User_action.js';\r\nimport { OrderMyAll_Action } from '../Actions/Order_action.js';\r\nimport Mess from '../Components/Message.js';\r\nimport Load from '../Components/Loading.js';\r\n\r\n\r\nconst LoginScreen = ({ history }) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmpass, setConfirmpass] = useState('');\r\n    const [msg, setMsg] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const user_Details = useSelector(state => state.user_Details);\r\n    const { loading, error, USER } = user_Details;\r\n\r\n    const user_Login = useSelector(state => state.user_Login); //user_Login -> from the store\r\n    const { UserInfo } = user_Login;\r\n\r\n    const user_UpdateProfileDetails = useSelector(state => state.user_UpdateProfileDetails);\r\n    const { success } = user_UpdateProfileDetails;\r\n\r\n    // LOOK AT THE REDUX DEV TOOLS \r\n    const listOfAllMyOrders = useSelector(state => state.listOfAllMyOrders);\r\n    const { loading: loadingAllMyOrders, error: errorOfMyOrders, allMyOrders } = listOfAllMyOrders;\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!UserInfo)\r\n            history.push('/login');\r\n        else {\r\n            if (!USER.name) {\r\n                dispatch(getUserDetails('profile'));\r\n                dispatch(OrderMyAll_Action())\r\n            }\r\n            else {\r\n                console.log(USER.name)\r\n                setName(USER.name);\r\n                setEmail(USER.email);\r\n            }\r\n        }\r\n    }, [dispatch, history, UserInfo, USER]) //useEffect will be fired off when there is any change in these attributes.\r\n\r\n\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (password != confirmpass)\r\n            setMsg(\"Password doesn't match!\");\r\n        else {\r\n            //DISPATCH Updated PROFILE\r\n            dispatch(UserUpdateProfile({ id: USER._id, name, email, password }))\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={5} >\r\n                <Container>\r\n                    <Row className=\"justify-content-md-center\" >\r\n                        <Col md={6} xs={12} >\r\n                            {/* <Loginform_Container> */}\r\n                            <h2 className=\"loginhead\" >PROFILE</h2>\r\n\r\n                            {msg && <Mess variant='danger'>{msg}</Mess>}\r\n                            {error && <Mess variant='danger'>{error}</Mess>}\r\n                            {success && <Mess variant='success'>Profile Updated</Mess>}\r\n                            {loading && <Load />}\r\n\r\n\r\n                            <Form onSubmit={submitHandler} id=\"login_form\">\r\n                                <Form.Group controlId='name'>\r\n                                    <Form.Label><b>Name</b></Form.Label>\r\n                                    <Form.Control\r\n                                        className=\"form_box\"\r\n                                        type='name'\r\n                                        placeholder='Enter name'\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='email'>\r\n                                    <Form.Label><b>Email Address</b></Form.Label>\r\n                                    <Form.Control\r\n                                        className=\"form_box\"\r\n                                        type='email'\r\n                                        placeholder='Enter email'\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='password'>\r\n                                    <Form.Label><b>Password</b></Form.Label>\r\n                                    <Form.Control\r\n                                        className=\"form_box\"\r\n                                        type='password'\r\n                                        placeholder='Enter password'\r\n                                        value={password}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='confirmpassword'>\r\n                                    <Form.Label><b>Confirm Password</b></Form.Label>\r\n                                    <Form.Control\r\n                                        className=\"form_box\"\r\n                                        type='password'\r\n                                        placeholder='confirm password'\r\n                                        value={confirmpass}\r\n                                        onChange={(e) => setConfirmpass(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Button type='submit' variant='warning'>\r\n                                    <b style={{ fontSize: \"18px\" }}>Update</b>\r\n                                </Button>\r\n                            </Form>\r\n                            {/* </Loginform_Container> */}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Col>\r\n\r\n\r\n\r\n            <Col md={7} >\r\n                <h2>My Orders</h2>\r\n                {loadingAllMyOrders ? (\r\n                    <Load />\r\n                ) : errorOfMyOrders ? (\r\n                    <Mess variant='danger'>{errorOfMyOrders}</Mess>\r\n                ) : (\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>DATE</th>\r\n                                <th>TOTAL</th>\r\n                                <th>PAID</th>\r\n                                <th>DELIVERED</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {/*        allMyOrders --------->   [{} , {},  {} ] array of objects    */}\r\n                            {allMyOrders.map((odr) => (\r\n                                <tr key={odr._id}>\r\n                                    <td>{odr._id}</td>\r\n                                    <td>{odr.createdAt.substring(0, 10)}</td>\r\n                                    <td>₹ {odr.total_price}</td>\r\n                                    <td>\r\n                                        {odr.isPaid ? (\r\n                                            odr.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                            <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                        )}\r\n                                    </td>\r\n                                    <td>\r\n                                        {odr.isDelivered ? (\r\n                                            odr.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                            <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                        )}\r\n                                    </td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${odr._id}`}>\r\n                                            <Button className='btn-sm' variant='light'>\r\n                                                Details\r\n                                             </Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default LoginScreen;\r\n","D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\RegisterScreen.js",["341","342","343","344"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap';\r\nimport '../index.css';\r\nimport '../STYLES/Loginform.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Register } from '../Actions/User_action.js';\r\nimport Loginform_Container from \"../Components/Loginform_Container.js\";\r\nimport Mess from '../Components/Message.js';\r\nimport Load from '../Components/Loading.js';\r\n\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmpass, setConfirmpass] = useState('');\r\n    const [msg, setMsg] = useState(null);\r\n\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/home';// email ( returns the querystring part of a URL)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const user_Register = useSelector(state => state.user_Register);  //user_Register -> from the store\r\n    const { loading, error, UserInfo } = user_Register;\r\n\r\n\r\n    useEffect(() => {\r\n        if (UserInfo)\r\n            history.push(redirect)\r\n    }, [history, UserInfo, redirect])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (password !== confirmpass)\r\n            setMsg(\"Password doesn't match!\");\r\n        else\r\n            dispatch(Register(name, email, password));\r\n    }\r\n\r\n\r\n    return (\r\n        <Loginform_Container>\r\n            <h1 className=\"cartHead\" style={{ paddingBottom: \"2.1rem\" }} >Sign Up</h1>\r\n\r\n            {msg && <Mess variant='danger'>{msg}</Mess>}\r\n            {error && <Mess variant='danger'>{error}</Mess>}\r\n            {loading && <Load />}\r\n\r\n\r\n            <Form onSubmit={submitHandler} id=\"login_form\">\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label><b>Name</b></Form.Label>\r\n                    <Form.Control\r\n                        className=\"form_box\"\r\n                        type='name'\r\n                        placeholder='name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label><b>Email Address</b></Form.Label>\r\n                    <Form.Control\r\n                        className=\"form_box\"\r\n                        type='email'\r\n                        placeholder='email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label><b>Password</b></Form.Label>\r\n                    <Form.Control\r\n                        className=\"form_box\"\r\n                        type='password'\r\n                        placeholder='password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmpassword'>\r\n                    <Form.Label><b>Confirm Password</b></Form.Label>\r\n                    <Form.Control\r\n                        className=\"form_box\"\r\n                        type='password'\r\n                        placeholder='confirm password'\r\n                        value={confirmpass}\r\n                        onChange={(e) => setConfirmpass(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='danger'>\r\n                    <b style={{ fontSize: \"18px\" }}>Register</b>\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col style={{ color: \"rgba(255, 255, 255, 0.959)\" }}>\r\n                    Have an Account ?{' '}\r\n                    <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Register\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Loginform_Container>\r\n    )\r\n}\r\n\r\n\r\nexport default LoginScreen;\r\n","D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\ShippingScreen.js",["345","346","347"],"\r\nimport React, { useState } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport '../index.css';\r\nimport '../STYLES/Loginform.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SaveShippingAddress } from '../Actions/Cart_action.js';\r\nimport Loginform_Container from \"../Components/Loginform_Container.js\";\r\nimport CheckoutSteps from \"../Components/CheckoutSteps.js\";\r\nimport Mess from '../Components/Message.js';\r\nimport Load from '../Components/Loading.js';\r\n\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n\r\n    const CART = useSelector(state => state.CART);\r\n    const { shippingAddress } = CART;\r\n\r\n    // NAME SHOULD BE GIVEN ACCOEDING TO THE MODEL\r\n    const [address, setAddress] = useState(shippingAddress.address);\r\n    const [city, setCity] = useState(shippingAddress.city);\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n    const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"submit\");\r\n        dispatch(SaveShippingAddress({ address, city, postalCode, country }));   // PASS VALUES ACCOEDING TO THE MODEL\r\n        history.push('/payment');   // redirect to payment page\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Loginform_Container>\r\n                <CheckoutSteps step1 step2 />\r\n                <h1 className=\"cartHead\" style={{ paddingBottom: \"1.8rem\" }}>Shipping</h1>\r\n\r\n                {/*  {msg && <Mess variant='danger'>{msg}</Mess>}\r\n                {error && <Mess variant='danger'>{error}</Mess>}\r\n                {loading && <Load />} */}\r\n\r\n\r\n                <Form onSubmit={submitHandler} id=\"login_form\">\r\n                    <Form.Group controlId='address'>\r\n                        <Form.Label><b>Address</b></Form.Label>\r\n                        <Form.Control\r\n                            className=\"form_box\"\r\n                            type='name'\r\n                            placeholder='address'\r\n                            value={address}\r\n                            onChange={(e) => setAddress(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='city'>\r\n                        <Form.Label><b>City</b></Form.Label>\r\n                        <Form.Control\r\n                            className=\"form_box\"\r\n                            type='city'\r\n                            placeholder='city'\r\n                            value={city}\r\n                            onChange={(e) => setCity(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='postalcode'>\r\n                        <Form.Label><b>Postal Code</b></Form.Label>\r\n                        <Form.Control\r\n                            className=\"form_box\"\r\n                            type='postalcode'\r\n                            placeholder='postalcode'\r\n                            value={postalCode}\r\n                            onChange={(e) => setPostalCode(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='country'>\r\n                        <Form.Label><b>Country</b></Form.Label>\r\n                        <Form.Control\r\n                            className=\"form_box\"\r\n                            type='text'\r\n                            placeholder='country'\r\n                            value={country}\r\n                            onChange={(e) => setCountry(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='success'>\r\n                        <b style={{ fontSize: \"18px\" }}>Continue</b>\r\n                    </Button>\r\n                </Form>\r\n\r\n            </Loginform_Container>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ShippingScreen;\r\n","D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\PaymentScreen.js",["348"],"\r\nimport React, { useState } from 'react';\r\nimport { Button, Form, Col } from 'react-bootstrap';\r\nimport '../index.css';\r\nimport '../STYLES/Loginform.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SavePaymentMethod } from '../Actions/Cart_action.js';\r\nimport Loginform_Container from \"../Components/Loginform_Container.js\";\r\nimport CheckoutSteps from \"../Components/CheckoutSteps.js\";\r\n\r\n\r\n\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n\r\n\r\n    const CART = useSelector(state => state.CART);\r\n    const { shippingAddress } = CART;\r\n\r\n    if (!shippingAddress)\r\n        history.push('/shipping');\r\n\r\n    const [paymentmethod, setPaymentMethod] = useState(\"PayPal\");\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"submit\");\r\n        dispatch(SavePaymentMethod(paymentmethod));\r\n        history.push('/placeorder');   // redirect to payment page\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Loginform_Container>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <h1 className=\"cartHead\" style={{ paddingBottom: \"1.5rem\" }} >Payment Method</h1>\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend' className=\"paymentSub\" >Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            className=\"paymentSub1\"\r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='PayPal'\r\n                            name='paymentMethod'\r\n                            value='PayPal'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n                        </Form.Check>\r\n\r\n                        <Form.Check\r\n                            className=\"paymentSub1\"\r\n                            type='radio'\r\n                            label='Stripe'\r\n                            id='Stripe'\r\n                            name='paymentMethod'\r\n                            value='Stripe'\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        ></Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </Loginform_Container>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen;\r\n","D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\PlaceOrderScreen.js",["349","350","351","352"],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Constants\\Product_constant.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Constants\\User_constant.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Constants\\Cart_constant.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Message.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Loading.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Prod.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\backend_URL.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Rating.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Loginform_Container.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Components\\CheckoutSteps.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Actions\\User_action.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Actions\\Cart_action.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Actions\\product_action.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Reducers\\Order_reducer.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Constants\\Order_constant.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Actions\\Order_action.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\OrderScreen.js",["353","354","355","356"],"\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport CheckoutSteps from \"../Components/CheckoutSteps.js\";\r\nimport { GetOrderDetails_ByID, OrderPay_Action } from '../Actions/Order_action.js';\r\nimport Mess from '../Components/Message.js';\r\nimport Load from '../Components/Loading.js';\r\nimport \"../STYLES/placeOrderScreen.css\";\r\nimport backend_URL from '../backend_URL.js';\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport { ORDER_PAY_RESET } from \"../Constants/Order_constant.js\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst OrderScreen = ({ match }) => {\r\n\r\n    const [sdkReady, setsdkReady] = useState(false)\r\n    const ORDER_ID = match.params.id;\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const order_Details = useSelector(state => state.order_Details);\r\n    const { Order, success, loading, error } = order_Details;\r\n    console.log(order_Details);                                      // {loading,succes,Order}\r\n\r\n\r\n\r\n    const order_Pay = useSelector(state => state.order_Pay);\r\n    const { success: successPay, loading: loadingPay } = order_Pay;\r\n\r\n\r\n\r\n    //   Calculatint Items Price\r\n    if (!loading) {\r\n        const Till_2_Decimals = (num) => {\r\n            return (Math.round(num * 100) / 100).toFixed(2)\r\n        }\r\n        Order.itemsPrice = Till_2_Decimals(\r\n            Order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n        )\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const addPayPalScript = async () => {\r\n            const { data: clientID } = await axios.get(`${backend_URL}/api/config/paypal`);\r\n            console.log(\"CLIENT-ID = \", clientID);\r\n            const script = document.createElement('script');\r\n            script.type = 'text/javascript';\r\n            // https://developer.paypal.com/docs/checkout/reference/customize-sdk/\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientID}`;\r\n            script.async = true\r\n            script.onload = () => {\r\n                setsdkReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n        }\r\n        // addPayPalScript();\r\n\r\n\r\n        if (!Order || successPay) {\r\n            dispatch({ type: ORDER_PAY_RESET });\r\n            dispatch(GetOrderDetails_ByID(ORDER_ID));\r\n        }\r\n        else if (!Order.isPaid)   // Not Paid === (!false) === true\r\n        {\r\n            if (!window.paypal) {\r\n                addPayPalScript();\r\n                console.log(window.paypal)\r\n            }\r\n            else\r\n                setsdkReady(true);\r\n        }\r\n    }, [dispatch, ORDER_ID, successPay, Order])\r\n\r\n\r\n\r\n\r\n    const PaymentSucces_Handler = (paymentResult) => {\r\n        console.log(paymentResult)\r\n        dispatch(OrderPay_Action(ORDER_ID, paymentResult));\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {loading ? <Load /> :\r\n                error ? <Mess variant=\"danger\"> {error} </Mess> :\r\n                    <>\r\n                        <h1 id=\"orderNum\" >ORDER {Order._id}</h1>\r\n                        <Row>\r\n                            <Col md={7} className=\"Orderbkgrnd\"  >\r\n                                <ListGroup variant='flush' className=\"Orderbkgrnd\" >\r\n                                    <ListGroup.Item style={{ backgroundColor: \"#141314\" }} >\r\n                                        <h2 className=\"orderHead\" >Shipping</h2>\r\n                                        <p style={{ margin: \"0 0 3px 0\" }} ><strong style={{ fontSize: \"1.05rem \" }}>Name : </strong> <span id=\"Ordersubhead\">{Order.user.name}</span></p>\r\n                                        <p style={{ margin: \"0 0 3px 0\" }}><strong style={{ fontSize: \"1.05rem \" }}>Email : </strong> <span id=\"Ordersubhead\">{Order.user.email}</span></p>\r\n                                        {/* <p><a href={`mailto: ${Order.user.email}`} > <span>{Order.user.email}</span></a></p> */}\r\n                                        <p >\r\n                                            <strong style={{ fontSize: \"1.05rem \" }}>Address: </strong>\r\n                                            <span id=\"Ordersubhead\">\r\n                                                {Order.shippingAddress.address},\r\n                                                {Order.shippingAddress.city}{' '}\r\n                                                {Order.shippingAddress.postalCode},{' '}\r\n                                                {Order.shippingAddress.country}\r\n                                            </span>\r\n                                        </p>\r\n                                        {Order.isDelivered ? <Mess variant=\"success\" >Delivered At {Order.Delivered_at} </Mess>\r\n                                            :\r\n                                            <Mess variant=\"danger\">Not Delivered</Mess>}\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item style={{ backgroundColor: \"#141314\" }}>\r\n                                        <h2 className=\"orderHead\">Payment Method</h2>\r\n                                        <p style={{ margin: \"0 0 1.2rem 0\" }}>\r\n                                            <strong>Method: </strong>\r\n                                            <span id=\"Ordersubhead\" >\r\n                                                {Order.paymentMethod}\r\n                                            </span>\r\n                                        </p>\r\n\r\n\r\n                                        {Order.isPaid ? <Mess variant=\"success\" > Paid on {Order.paid_at} </Mess>\r\n                                            :\r\n                                            <Mess variant=\"danger\">Not Paid</Mess>}\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item style={{ backgroundColor: \"#141314\" }}>\r\n                                        <h2 className=\"orderHead\">Ordered Items</h2>\r\n                                        {Order.orderItems.length === 0 ? (\r\n                                            <Mess>Your cart is empty</Mess>\r\n                                        ) : (\r\n                                            <ListGroup variant='flush' style={{ border: \"1px solid #f4f1de\" }}>\r\n                                                {Order.orderItems.map((item, index) => (\r\n                                                    <ListGroup.Item key={index}>\r\n                                                        <Row>\r\n                                                            <Col md={2} sm={3} xs={3} >\r\n                                                                <Image\r\n                                                                    src={item.image}\r\n                                                                    alt={item.name}\r\n                                                                    fluid\r\n                                                                    rounded\r\n                                                                />\r\n                                                            </Col>\r\n                                                            <Col sm={4} xs={4} >\r\n                                                                <Link to={`/product/${item.product}`} className=\"itemDet fontWt7_4\" >\r\n                                                                    {item.name}\r\n                                                                </Link>\r\n                                                            </Col>\r\n                                                            <Col md={4} sm={5} xs={5} className=\"itemDet fontWt7_4\" >\r\n                                                                {item.qty} x ₹{item.price} = ₹{item.qty * item.price}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                ))}\r\n                                            </ListGroup>\r\n                                        )}\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col>\r\n\r\n                            <Col md={1}></Col>\r\n\r\n                            <Col md={4}>\r\n                                <div className=\"Orderbox\">\r\n                                    <ListGroup variant='flush' >\r\n                                        <ListGroup.Item>\r\n                                            <h2 className=\"orderHead\" style={{ textAlign: \"center\" }} >Order Summary</h2>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item id=\"boxsubitem\" >\r\n                                            <Row>\r\n                                                <Col>Items</Col>\r\n                                                <Col>₹{Order.itemsPrice}</Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item id=\"boxsubitem\">\r\n                                            <Row>\r\n                                                <Col>Shipping</Col>\r\n                                                <Col>₹{Order.shipping_price}</Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item id=\"boxsubitem\">\r\n                                            <Row>\r\n                                                <Col>Tax</Col>\r\n                                                <Col>₹{Order.taxPrice}</Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item id=\"boxsubitem\">\r\n                                            <Row>\r\n                                                <Col>Total</Col>\r\n                                                <Col>₹{Order.total_price}</Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n\r\n\r\n                                        {/* ------------------   IF NOT PAID THEN BUTTON VISIBLE   ---------------*/}\r\n                                        {!Order.isPaid && (\r\n                                            <ListGroup.Item>\r\n                                                {loadingPay && <Load />}\r\n                                                {!sdkReady ? <Load />\r\n                                                    :\r\n                                                    (\r\n                                                        <PayPalButton\r\n                                                            amount={Order.total_price}\r\n                                                            onSuccess={PaymentSucces_Handler}\r\n                                                        />\r\n                                                    )}\r\n                                            </ListGroup.Item>\r\n                                        )}\r\n\r\n                                    </ListGroup>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderScreen;\r\n",{"ruleId":"357","replacedBy":"358"},{"ruleId":"359","replacedBy":"360"},{"ruleId":"357","replacedBy":"361"},{"ruleId":"359","replacedBy":"362"},{"ruleId":"363","severity":1,"message":"364","line":3,"column":10,"nodeType":"365","messageId":"366","endLine":3,"endColumn":14},{"ruleId":"363","severity":1,"message":"367","line":4,"column":20,"nodeType":"365","messageId":"366","endLine":4,"endColumn":25},{"ruleId":"368","severity":1,"message":"369","line":50,"column":33,"nodeType":"370","endLine":50,"endColumn":66},{"ruleId":"363","severity":1,"message":"371","line":2,"column":28,"nodeType":"365","messageId":"366","endLine":2,"endColumn":36},{"ruleId":"363","severity":1,"message":"372","line":9,"column":8,"nodeType":"365","messageId":"366","endLine":9,"endColumn":12},{"ruleId":"363","severity":1,"message":"373","line":10,"column":8,"nodeType":"365","messageId":"366","endLine":10,"endColumn":19},{"ruleId":"363","severity":1,"message":"374","line":35,"column":23,"nodeType":"365","messageId":"366","endLine":35,"endColumn":31},{"ruleId":"375","severity":1,"message":"376","line":35,"column":34,"nodeType":"377","endLine":41,"endColumn":14},{"ruleId":"378","severity":1,"message":"379","line":41,"column":9,"nodeType":"370","endLine":41,"endColumn":30},{"ruleId":"363","severity":1,"message":"367","line":4,"column":20,"nodeType":"365","messageId":"366","endLine":4,"endColumn":25},{"ruleId":"363","severity":1,"message":"380","line":4,"column":27,"nodeType":"365","messageId":"366","endLine":4,"endColumn":36},{"ruleId":"363","severity":1,"message":"381","line":4,"column":38,"nodeType":"365","messageId":"366","endLine":4,"endColumn":42},{"ruleId":"378","severity":1,"message":"379","line":47,"column":9,"nodeType":"370","endLine":47,"endColumn":30},{"ruleId":"382","severity":1,"message":"383","line":50,"column":22,"nodeType":"384","messageId":"385","endLine":50,"endColumn":24},{"ruleId":"363","severity":1,"message":"386","line":10,"column":8,"nodeType":"365","messageId":"366","endLine":10,"endColumn":12},{"ruleId":"363","severity":1,"message":"372","line":11,"column":8,"nodeType":"365","messageId":"366","endLine":11,"endColumn":12},{"ruleId":"378","severity":1,"message":"379","line":38,"column":13,"nodeType":"370","endLine":38,"endColumn":34},{"ruleId":"378","severity":1,"message":"379","line":38,"column":9,"nodeType":"370","endLine":38,"endColumn":30},{"ruleId":"363","severity":1,"message":"387","line":2,"column":17,"nodeType":"365","messageId":"366","endLine":2,"endColumn":26},{"ruleId":"363","severity":1,"message":"372","line":11,"column":8,"nodeType":"365","messageId":"366","endLine":11,"endColumn":12},{"ruleId":"363","severity":1,"message":"388","line":18,"column":11,"nodeType":"365","messageId":"366","endLine":18,"endColumn":19},{"ruleId":"363","severity":1,"message":"389","line":21,"column":13,"nodeType":"365","messageId":"366","endLine":21,"endColumn":28},{"ruleId":"357","replacedBy":"390"},{"ruleId":"359","replacedBy":"391"},{"ruleId":"363","severity":1,"message":"392","line":4,"column":10,"nodeType":"365","messageId":"366","endLine":4,"endColumn":19},{"ruleId":"363","severity":1,"message":"374","line":35,"column":23,"nodeType":"365","messageId":"366","endLine":35,"endColumn":31},{"ruleId":"375","severity":1,"message":"376","line":35,"column":34,"nodeType":"377","endLine":41,"endColumn":14},{"ruleId":"363","severity":1,"message":"393","line":31,"column":12,"nodeType":"365","messageId":"366","endLine":31,"endColumn":19},{"ruleId":"363","severity":1,"message":"371","line":2,"column":28,"nodeType":"365","messageId":"366","endLine":2,"endColumn":36},{"ruleId":"363","severity":1,"message":"372","line":9,"column":8,"nodeType":"365","messageId":"366","endLine":9,"endColumn":12},{"ruleId":"363","severity":1,"message":"373","line":10,"column":8,"nodeType":"365","messageId":"366","endLine":10,"endColumn":19},{"ruleId":"363","severity":1,"message":"364","line":3,"column":10,"nodeType":"365","messageId":"366","endLine":3,"endColumn":14},{"ruleId":"363","severity":1,"message":"367","line":4,"column":20,"nodeType":"365","messageId":"366","endLine":4,"endColumn":25},{"ruleId":"363","severity":1,"message":"394","line":4,"column":58,"nodeType":"365","messageId":"366","endLine":4,"endColumn":66},{"ruleId":"363","severity":1,"message":"395","line":4,"column":68,"nodeType":"365","messageId":"366","endLine":4,"endColumn":82},{"ruleId":"368","severity":1,"message":"369","line":60,"column":33,"nodeType":"370","endLine":60,"endColumn":66},{"ruleId":"378","severity":1,"message":"379","line":41,"column":9,"nodeType":"370","endLine":41,"endColumn":30},{"ruleId":"382","severity":1,"message":"383","line":60,"column":22,"nodeType":"384","messageId":"385","endLine":60,"endColumn":24},{"ruleId":"363","severity":1,"message":"367","line":4,"column":20,"nodeType":"365","messageId":"366","endLine":4,"endColumn":25},{"ruleId":"363","severity":1,"message":"380","line":4,"column":27,"nodeType":"365","messageId":"366","endLine":4,"endColumn":36},{"ruleId":"363","severity":1,"message":"381","line":4,"column":38,"nodeType":"365","messageId":"366","endLine":4,"endColumn":42},{"ruleId":"378","severity":1,"message":"379","line":47,"column":9,"nodeType":"370","endLine":47,"endColumn":30},{"ruleId":"363","severity":1,"message":"386","line":10,"column":8,"nodeType":"365","messageId":"366","endLine":10,"endColumn":12},{"ruleId":"363","severity":1,"message":"372","line":11,"column":8,"nodeType":"365","messageId":"366","endLine":11,"endColumn":12},{"ruleId":"378","severity":1,"message":"379","line":41,"column":13,"nodeType":"370","endLine":41,"endColumn":34},{"ruleId":"378","severity":1,"message":"379","line":38,"column":9,"nodeType":"370","endLine":38,"endColumn":30},{"ruleId":"363","severity":1,"message":"381","line":4,"column":46,"nodeType":"365","messageId":"366","endLine":4,"endColumn":50},{"ruleId":"363","severity":1,"message":"372","line":9,"column":8,"nodeType":"365","messageId":"366","endLine":9,"endColumn":12},{"ruleId":"363","severity":1,"message":"389","line":19,"column":13,"nodeType":"365","messageId":"366","endLine":19,"endColumn":28},{"ruleId":"375","severity":1,"message":"396","line":54,"column":8,"nodeType":"397","endLine":54,"endColumn":26,"suggestions":"398"},{"ruleId":"363","severity":1,"message":"399","line":5,"column":10,"nodeType":"365","messageId":"366","endLine":5,"endColumn":16},{"ruleId":"363","severity":1,"message":"381","line":5,"column":46,"nodeType":"365","messageId":"366","endLine":5,"endColumn":50},{"ruleId":"363","severity":1,"message":"400","line":7,"column":8,"nodeType":"365","messageId":"366","endLine":7,"endColumn":21},{"ruleId":"363","severity":1,"message":"401","line":29,"column":20,"nodeType":"365","messageId":"366","endLine":29,"endColumn":27},"no-native-reassign",["402"],"no-negated-in-lhs",["403"],["402"],["403"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Image' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'Load' is defined but never used.","'backend_URL' is defined but never used.","'settings' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'settings' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ObjectExpression","react/jsx-pascal-case","Imported JSX component Loginform_Container must be in PascalCase or SCREAMING_SNAKE_CASE","'ListGroup' is defined but never used.","'Card' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Mess' is defined but never used.","'useEffect' is defined but never used.","'dispatch' is assigned a value but never used.","'shippingAddress' is assigned a value but never used.",["402"],["403"],"'Container' is defined but never used.","'activee' is assigned a value but never used.","'Dropdown' is defined but never used.","'DropdownButton' is defined but never used.","React Hook useEffect has a missing dependency: 'Order._id'. Either include it or remove the dependency array.","ArrayExpression",["404"],"'Button' is defined but never used.","'CheckoutSteps' is defined but never used.","'success' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"405","fix":"406"},"Update the dependencies array to be: [Order._id, history, success]",{"range":"407","text":"408"},[1688,1706],"[Order._id, history, success]"]