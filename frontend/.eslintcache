[{"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\index.js":"1","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\App.js":"2","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\reportWebVitals.js":"3","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Footer.js":"4","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Header.js":"5","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\Homescreen.js":"6","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\products.js":"7","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Prod.js":"8","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Rating.js":"9","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\Productscreen.js":"10","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\backend_URL.js":"11","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\store.js":"12","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Reducers\\Product_reducer.js":"13","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Constants\\Product_constant.js":"14","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Actions\\product_action.js":"15","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Message.js":"16","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Loading.js":"17","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\Cartscreen.js":"18","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Reducers\\Cart_reducer.js":"19","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Constants\\Cart_constant.js":"20","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Actions\\Cart_action.js":"21","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\Introscreen.js":"22","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Reducers\\User_reducer.js":"23","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Constants\\User_constant.js":"24","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\LoginScreen.js":"25","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Actions\\User_action.js":"26","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Loginform_Container.js":"27","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\RegisterScreen.js":"28","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\ProfileScreen.js":"29","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\ShippingScreen.js":"30","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\CheckoutSteps.js":"31","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\PaymentScreen.js":"32","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\PlaceOrderScreen.js":"33","D:\\React_Projects\\Ecommerce\\frontend\\src\\index.js":"34","D:\\React_Projects\\Ecommerce\\frontend\\src\\store.js":"35","D:\\React_Projects\\Ecommerce\\frontend\\src\\App.js":"36","D:\\React_Projects\\Ecommerce\\frontend\\src\\reportWebVitals.js":"37","D:\\React_Projects\\Ecommerce\\frontend\\src\\Reducers\\Product_reducer.js":"38","D:\\React_Projects\\Ecommerce\\frontend\\src\\Reducers\\Cart_reducer.js":"39","D:\\React_Projects\\Ecommerce\\frontend\\src\\Reducers\\User_reducer.js":"40","D:\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Footer.js":"41","D:\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Header.js":"42","D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\Introscreen.js":"43","D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\Homescreen.js":"44","D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\Cartscreen.js":"45","D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\Productscreen.js":"46","D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\LoginScreen.js":"47","D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\ProfileScreen.js":"48","D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\RegisterScreen.js":"49","D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\ShippingScreen.js":"50","D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\PaymentScreen.js":"51","D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\PlaceOrderScreen.js":"52","D:\\React_Projects\\Ecommerce\\frontend\\src\\Constants\\Product_constant.js":"53","D:\\React_Projects\\Ecommerce\\frontend\\src\\Constants\\User_constant.js":"54","D:\\React_Projects\\Ecommerce\\frontend\\src\\Constants\\Cart_constant.js":"55","D:\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Message.js":"56","D:\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Loading.js":"57","D:\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Prod.js":"58","D:\\React_Projects\\Ecommerce\\frontend\\src\\backend_URL.js":"59","D:\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Rating.js":"60","D:\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Loginform_Container.js":"61","D:\\React_Projects\\Ecommerce\\frontend\\src\\Components\\CheckoutSteps.js":"62","D:\\React_Projects\\Ecommerce\\frontend\\src\\Actions\\User_action.js":"63","D:\\React_Projects\\Ecommerce\\frontend\\src\\Actions\\Cart_action.js":"64","D:\\React_Projects\\Ecommerce\\frontend\\src\\Actions\\product_action.js":"65","D:\\React_Projects\\Ecommerce\\frontend\\src\\Reducers\\Order_reducer.js":"66","D:\\React_Projects\\Ecommerce\\frontend\\src\\Constants\\Order_constant.js":"67","D:\\React_Projects\\Ecommerce\\frontend\\src\\Actions\\Order_action.js":"68","D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\OrderScreen.js":"69","D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\UsersListScreen.js":"70","D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\UserEditScreen.js":"71","D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\ProductsListScreen.js":"72","D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\ProductEditScreen.js":"73","D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\Orders_ListScreen.jsx":"74"},{"size":715,"mtime":1616531793444,"results":"75","hashOfConfig":"76"},{"size":1854,"mtime":1617285470218,"results":"77","hashOfConfig":"76"},{"size":362,"mtime":499162500000,"results":"78","hashOfConfig":"76"},{"size":440,"mtime":1611411991764,"results":"79","hashOfConfig":"76"},{"size":2769,"mtime":1616936893994,"results":"80","hashOfConfig":"76"},{"size":2927,"mtime":1616919975444,"results":"81","hashOfConfig":"76"},{"size":2490,"mtime":1613826245217,"results":"82","hashOfConfig":"76"},{"size":1779,"mtime":1616847122325,"results":"83","hashOfConfig":"76"},{"size":2004,"mtime":1616846788902,"results":"84","hashOfConfig":"76"},{"size":6298,"mtime":1617288713918,"results":"85","hashOfConfig":"76"},{"size":80,"mtime":1613887620885,"results":"86","hashOfConfig":"76"},{"size":1661,"mtime":1617266326312,"results":"87","hashOfConfig":"76"},{"size":1391,"mtime":1616092221784,"results":"88","hashOfConfig":"76"},{"size":380,"mtime":1613809861086,"results":"89","hashOfConfig":"76"},{"size":1702,"mtime":1613927677108,"results":"90","hashOfConfig":"76"},{"size":299,"mtime":1613800954645,"results":"91","hashOfConfig":"76"},{"size":402,"mtime":1613993721894,"results":"92","hashOfConfig":"76"},{"size":6417,"mtime":1616941385888,"results":"93","hashOfConfig":"76"},{"size":1854,"mtime":1617266852660,"results":"94","hashOfConfig":"76"},{"size":242,"mtime":1617262445945,"results":"95","hashOfConfig":"76"},{"size":1833,"mtime":1617266880987,"results":"96","hashOfConfig":"76"},{"size":11528,"mtime":1617203285236,"results":"97","hashOfConfig":"76"},{"size":2294,"mtime":1617204188502,"results":"98","hashOfConfig":"76"},{"size":876,"mtime":1616504435563,"results":"99","hashOfConfig":"76"},{"size":3105,"mtime":1616943074539,"results":"100","hashOfConfig":"76"},{"size":4438,"mtime":1616510690229,"results":"101","hashOfConfig":"76"},{"size":519,"mtime":1616400492822,"results":"102","hashOfConfig":"76"},{"size":4289,"mtime":1616943588940,"results":"103","hashOfConfig":"76"},{"size":5706,"mtime":1617023995514,"results":"104","hashOfConfig":"76"},{"size":3927,"mtime":1617205573239,"results":"105","hashOfConfig":"76"},{"size":1772,"mtime":1617207771035,"results":"106","hashOfConfig":"76"},{"size":2404,"mtime":1617282291167,"results":"107","hashOfConfig":"76"},{"size":7530,"mtime":1617350624436,"results":"108","hashOfConfig":"76"},{"size":588,"mtime":1628234082987,"results":"109","hashOfConfig":"110"},{"size":2563,"mtime":1624800694062,"results":"111","hashOfConfig":"110"},{"size":2984,"mtime":1628235374314,"results":"112","hashOfConfig":"110"},{"size":375,"mtime":1622134317196,"results":"113","hashOfConfig":"110"},{"size":3839,"mtime":1624800647806,"results":"114","hashOfConfig":"110"},{"size":1982,"mtime":1622465990238,"results":"115","hashOfConfig":"110"},{"size":4085,"mtime":1623093347439,"results":"116","hashOfConfig":"110"},{"size":614,"mtime":1628196870062,"results":"117","hashOfConfig":"110"},{"size":4020,"mtime":1628241085216,"results":"118","hashOfConfig":"110"},{"size":11397,"mtime":1628251404591,"results":"119","hashOfConfig":"110"},{"size":6883,"mtime":1628251842947,"results":"120","hashOfConfig":"110"},{"size":6737,"mtime":1628235309143,"results":"121","hashOfConfig":"110"},{"size":16530,"mtime":1628235172878,"results":"122","hashOfConfig":"110"},{"size":3319,"mtime":1628250366088,"results":"123","hashOfConfig":"110"},{"size":8191,"mtime":1628250579373,"results":"124","hashOfConfig":"110"},{"size":4610,"mtime":1628250565598,"results":"125","hashOfConfig":"110"},{"size":4136,"mtime":1628235848751,"results":"126","hashOfConfig":"110"},{"size":2679,"mtime":1628235932917,"results":"127","hashOfConfig":"110"},{"size":8511,"mtime":1625508601262,"results":"128","hashOfConfig":"110"},{"size":1385,"mtime":1624800546865,"results":"129","hashOfConfig":"110"},{"size":1604,"mtime":1623093212316,"results":"130","hashOfConfig":"110"},{"size":242,"mtime":1622134317000,"results":"131","hashOfConfig":"110"},{"size":299,"mtime":1622134316998,"results":"132","hashOfConfig":"110"},{"size":402,"mtime":1622134316997,"results":"133","hashOfConfig":"110"},{"size":1773,"mtime":1628189760050,"results":"134","hashOfConfig":"110"},{"size":179,"mtime":1628252481332,"results":"135","hashOfConfig":"110"},{"size":2004,"mtime":1622134316999,"results":"136","hashOfConfig":"110"},{"size":519,"mtime":1622134316997,"results":"137","hashOfConfig":"110"},{"size":1772,"mtime":1622134316995,"results":"138","hashOfConfig":"110"},{"size":8135,"mtime":1623155521323,"results":"139","hashOfConfig":"110"},{"size":2164,"mtime":1622837297598,"results":"140","hashOfConfig":"110"},{"size":5744,"mtime":1625502581374,"results":"141","hashOfConfig":"110"},{"size":4051,"mtime":1624689666671,"results":"142","hashOfConfig":"110"},{"size":1301,"mtime":1624688193379,"results":"143","hashOfConfig":"110"},{"size":6570,"mtime":1624689729305,"results":"144","hashOfConfig":"110"},{"size":13536,"mtime":1625484163707,"results":"145","hashOfConfig":"110"},{"size":4365,"mtime":1623069860100,"results":"146","hashOfConfig":"110"},{"size":5099,"mtime":1623134624510,"results":"147","hashOfConfig":"110"},{"size":5370,"mtime":1623940092600,"results":"148","hashOfConfig":"110"},{"size":10816,"mtime":1624455361899,"results":"149","hashOfConfig":"110"},{"size":4132,"mtime":1624479705504,"results":"150","hashOfConfig":"110"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},"1e4carg",{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"153"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"153"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"153"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"153"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"153"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"153"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"153"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"153"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ongqcw",{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"231"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"265","messages":"266","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"231"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"231"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"231"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"231"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"231"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"231"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"231"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"231"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"231"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\index.js",[],["320","321"],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\App.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\reportWebVitals.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Footer.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Header.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\Homescreen.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\products.js",[],["322","323"],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Prod.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Rating.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\Productscreen.js",["324","325","326"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap';\r\nimport Rating from '../Components/Rating.js';\r\nimport '../index.css';\r\nimport \"../STYLES/product_style.css\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Detailsproducts } from '../Actions/product_action.js';\r\nimport Mess from '../Components/Message.js';\r\nimport Load from '../Components/Loading.js';\r\n\r\n\r\n\r\nconst Productscreen = ({ history, match }) => {\r\n\r\n    // < ------  Shopping Cart ------>\r\n    const [qty, setqty] = useState(1);\r\n\r\n    // < ------  Fetcing data from the Backend using REDUX  ------>\r\n    const dispatch = useDispatch();\r\n\r\n    const product_details = useSelector(state => state.product_details);\r\n    const { loading, error, product } = product_details;\r\n\r\n    useEffect(() => {\r\n        dispatch(Detailsproducts(match.params.id));\r\n    }, [dispatch, match])\r\n\r\n    // const product = [];  \r\n    const addToCart_Handler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* { product.name} */}\r\n            <section className=\"Button\">\r\n                <a className=\"Button-btn\" href=\"/home\"> Back </a>\r\n            </section>\r\n\r\n\r\n            {loading ? < Load /> :\r\n                error ? < Mess variant=\"danger\" > {error}</Mess> :\r\n                    product ?\r\n                        (<Row>\r\n                            <Col md={5} id=\"proimg\">\r\n                                <img src={product.image} fluid />\r\n                            </Col>\r\n\r\n                            <Col md={4}>\r\n                                <ListGroup variant=\"flush\" >\r\n                                    <ListGroup.Item  ><h3 id=\"prohead\"> {product.name} </h3></ListGroup.Item>\r\n\r\n                                    <ListGroup.Item className='listy1'>\r\n                                        <Rating\r\n                                            value={product.rating}\r\n                                            text={` ${product.numReviews} reviews`}\r\n                                            color='crimson'\r\n                                        />\r\n                                    </ListGroup.Item >\r\n\r\n                                    <ListGroup.Item className='listy1' style={{ fontSize: \"1.8rem\" }}><b> Price : </b>₹{product.price}  </ListGroup.Item>\r\n                                    <ListGroup.Item className='listy1'><b> Description :  {' '}</b>{product.description}  </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col>\r\n\r\n                            <Col md={3} >\r\n                                <Card>\r\n                                    <ListGroup variant=\"flush\" >\r\n                                        <ListGroup.Item className=\"boxsm\" style={{ backgroundColor: \"#edf2f4\", padding: \".8rem 2rem\", color: 'black' }} >\r\n                                            <Row>\r\n                                                <Col> <b> PRICE -:</b> </Col>\r\n                                                <Col><strong>₹{product.price}</strong></Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item className=\"boxsm\" style={{ backgroundColor: \"#edf2f4\", padding: \".8rem 2rem\", color: 'black' }} >\r\n                                            <Row>\r\n                                                <Col> <b>STATUS -: </b> </Col>\r\n                                                <Col> {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"} </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n\r\n                                        {/* QUantity of the product */}\r\n                                        {product.countInStock > 0 && (\r\n                                            <ListGroup.Item className=\"boxsm\" style={{ backgroundColor: \"#edf2f4\", padding: \".8rem 2rem \", color: 'black' }} >\r\n                                                <Row>\r\n                                                    <Col><strong>Quantity -: </strong> </Col>\r\n                                                    <Col>\r\n                                                        <Form.Control as='select' value={qty} onChange={(e) => { setqty(e.target.value) }}>\r\n                                                            {[...Array(product.countInStock).keys()].map((x) => (\r\n                                                                <option key={x + 1} value={x + 1} >\r\n                                                                    {x + 1}\r\n                                                                </option>\r\n                                                            ))}\r\n                                                        </Form.Control>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        )}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Button\r\n                                                onClick={addToCart_Handler}\r\n                                                variant=\"danger\"\r\n                                                className='btn-block '\r\n                                                type='button'\r\n                                                disabled={product.countInStock === 0}\r\n                                            >\r\n                                                <strong><i class=\"fas fa-cart-arrow-down\"></i> ADD TO CART</strong>\r\n                                            </Button>\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>)\r\n\r\n                        : <h3>Cant fetch product obj</h3>\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Productscreen;\r\n","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\backend_URL.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\store.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Reducers\\Product_reducer.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Constants\\Product_constant.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Actions\\product_action.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Message.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Loading.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\Cartscreen.js",["327","328","329"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addToCart, removefromCart } from '../Actions/Cart_action.js';\r\nimport '../STYLES/cart_style.css';\r\nimport Mess from '../Components/Message.js';\r\nimport Load from '../Components/Loading.js';\r\nimport backend_URL from '../backend_URL.js';\r\n\r\nconst Cartscreen = ({ match, location, history }) => {\r\n\r\n    const productID = match.params.id;\r\n    const qTY = location.search;\r\n    console.log(qTY);  // ?qTY=4               \r\n\r\n    //  ?qTY=4  is stored in an array so a[0] = ?qty  and a[1] = 4.\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const CART = useSelector(state => state.CART);\r\n    // console.log(\"cart :: \", CART);\r\n    const { cartItems } = CART;\r\n    console.log(\"{ cartItems } from cartscreen : \", cartItems); // Array of OBJECTS -- [{}, {}, {}] present in the CART\r\n\r\n    useEffect(() => {\r\n        if (productID)\r\n            dispatch(addToCart(productID, qty));\r\n    }, [qty, productID, dispatch]);\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        console.log('remove')\r\n        dispatch(removefromCart(id));\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        // console.log(\"ccheckout\")\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col md={8} sm={5} >\r\n                    <div class=\"p-2 \">\r\n                        <Link to=\"/home\"> <i className=\"arrow left\"></i></Link>\r\n                        <span>  <h1 id=\"prohead\">Shopping Cart</h1></span>\r\n                    </div>\r\n\r\n\r\n                    {cartItems.length === 0 ?\r\n\r\n                        (<Mess>Your Cart id Empty <Link to=\"/home\">Go Back</Link></Mess>) :\r\n\r\n                        (<ListGroup variant=\"flush\" className=\"procart\">\r\n                            {/* item  ----> each product */}\r\n                            {cartItems.map(item => (\r\n                                <ListGroup.Item key={item.product} className=\"boxsm\">\r\n                                    <Row >\r\n                                        <Col md={2}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded />\r\n                                        </Col>\r\n\r\n                                        <Col md={3}>\r\n                                            {/* {item.product} ------->  is the ID */}\r\n                                            <Link to={`/product/${item.product}`} id=\"link_css\" style={{ fontSize: \"1.2rem\" }} ><b>{item.name}</b></Link>\r\n                                        </Col>\r\n\r\n                                        <Col md={2} id=\"link_css\">₹{item.price}</Col>\r\n\r\n                                        <Col md={2}>\r\n                                            <Form.Control\r\n                                                className=\"cartitem_num\"\r\n                                                as='select'\r\n                                                value={item.QTY} // update in the redux devtools \r\n                                                onChange={(e) =>\r\n                                                    dispatch(\r\n                                                        addToCart(item.product, Number(e.target.value))\r\n                                                    )}\r\n                                            >\r\n                                                {[...Array(item.countInStock).keys()].map((x) => (\r\n                                                    <option key={x + 1} value={x + 1}>\r\n                                                        {x + 1}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Form.Control>\r\n                                        </Col>\r\n\r\n                                        <Col md={2}>\r\n                                            <Button\r\n                                                type='button'\r\n                                                variant='light'\r\n                                                onClick={() => removeFromCartHandler(item.product)}\r\n                                            >\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                        )}\r\n                </Col>\r\n\r\n\r\n                <Col md={4} sm={7} style={{ padding: '.5rem' }} >\r\n                    <Card>\r\n                        <ListGroup variant='flush' >\r\n                            <ListGroup.Item className=\"cartbox_rgt\" >\r\n                                <h2>\r\n                                    <b>  Subtotal ({cartItems.reduce((acc, item) => acc + item.QTY, 0)}) items</b>\r\n                                </h2>\r\n                                <p> ₹ {cartItems\r\n                                    .reduce((acc, item) => acc + item.QTY * item.price, 0)\r\n                                    .toFixed(2)}  {/* fixed to 2 decimal places */}</p>\r\n\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    variant='success'\r\n                                    className='btn-block'\r\n                                    disabled={cartItems.length === 0}\r\n                                    onClick={checkoutHandler}\r\n                                >\r\n                                    <b> PROCEED TO CHECKOUT</b>\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cartscreen;\r\n\r\n\r\n\r\n\r\n// Syntax :    array.reduce(function(total, currentValue, currentIndex, arr), initialValue)","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Reducers\\Cart_reducer.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Constants\\Cart_constant.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Actions\\Cart_action.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\Introscreen.js",["330","331"],"import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col, Container, Carousel, } from \"react-bootstrap\";\r\nimport \"../STYLES/intro_style.css\";\r\n\r\n// Import css files for Carousal\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Slider from \"react-slick\";\r\n\r\n// Images\r\nimport pic from \"./choco.jpg\";\r\nimport cday from \"../Pics/img2.jfif\";\r\nimport gifts from \"../Pics/gifts.jfif\";\r\nimport party from \"../Pics/party.jfif\";\r\n\r\n\r\n\r\nconst Introscreen = () => {\r\n\r\n    var settings;\r\n    const [slider, setslider] = useState(settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 3,\r\n        slidesToScroll: 1,\r\n    })\r\n\r\n    var width = window.innerWidth;\r\n\r\n    useEffect(() => {\r\n        console.log(width);\r\n        if (width < 780) {     // <----- Responsive for VIEWPORT\r\n            console.log(\"if cond working\");\r\n            setslider(settings = {\r\n                dots: true,\r\n                infinite: true,\r\n                speed: 500,\r\n                slidesToShow: 2,\r\n                slidesToScroll: 1,\r\n            })\r\n        }\r\n    }, [width]);\r\n\r\n    return (\r\n        <div className=\"main-cls\">\r\n            {/*   <Container >   border around\r\n            <Link className=\"btn btn-danger my-3\" to=\"/home\" >  GO BACK  </Link>\r\n            {{<div className=\"bubble\" >\r\n                    <img src={bubble} />\r\n                    <img src={bubble} />\r\n                    <img src={bubble} />\r\n                    <img src={bubble} />\r\n                    <img src={bubble} />\r\n                    <img src={bubble} />\r\n                    <img src={bubble} />\r\n                </div>}}\r\n            </Container> */}\r\n\r\n            {/*  <Link className=\"btn btn-danger my-3\" to=\"/home\">\r\n                GO BACK{\" \"}\r\n            </Link> */}\r\n\r\n            {/* -----------  CAROUSEL  --------- */}\r\n            <Carousel fade>\r\n                <Carousel.Item className=\"mycarou\">\r\n                    <div className=\"overlay-image\">\r\n                        {\" \"}\r\n                        {/* hazy in the background using OPACITY */}\r\n                        <img\r\n                            className=\"d-block w-100\"\r\n                            src=\"https://images.unsplash.com/photo-1526081715791-7c538f86060e?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NHx8Y2hvY29sYXRlJTIwZ2lmdCUyMGJveHxlbnwwfHwwfA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60\"\r\n                            alt=\"Third slide\"\r\n                        />\r\n                    </div>\r\n                    <Carousel.Caption className=\"carou_center\">\r\n                        <h3 className=\"title\">Chocolatey</h3>\r\n                        <p className=\"subtitle\">\r\n                            ------- Made with Love Unique Chocolates for gourmet -------\r\n                    </p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n\r\n                <Carousel.Item className=\"mycarou\">\r\n                    <div className=\"overlay-image\">\r\n                        <img className=\"d-block w-100\" src={cday} alt=\"Second slide\" />\r\n                    </div>\r\n                    <Carousel.Caption className=\"carou_center\">\r\n                        <h3 className=\"subtitle\">DARK CHOCOLATES</h3>\r\n                        <p className=\"subtitle\">\r\n                            ------- A healthy alternatives for Chocolate Lovers -------{\" \"}\r\n                        </p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n\r\n                <Carousel.Item className=\"mycarou\">\r\n                    <div className=\"overlay-image\">{\" \"}\r\n                        <img\r\n                            className=\"d-block w-100 \"\r\n                            src=\"https://images.unsplash.com/photo-1526823127573-0fda76b6c24f?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxzZWFyY2h8MjR8fGNob2NvbGF0ZXxlbnwwfHwwfA%3D%3D&auto=format&fit=crop&w=600&q=60\"\r\n                            alt=\"First slide\"\r\n                        />\r\n                    </div>\r\n\r\n                    <Carousel.Caption className=\"carou_center\">\r\n                        <h3 className=\"subtitle\">DARK CHOCOLATES</h3>\r\n                        <p className=\"subtitle\">\r\n                            ------- A healthy alternatives for Chocolate Lovers -------{\" \"}\r\n                        </p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n            </Carousel>\r\n\r\n\r\n            <Container className=\"container_self\">\r\n                <div className=\"minihead\">\r\n                    <h2 className=\"subheading\">\r\n                        {\" \"}\r\n                        <span> Free Shipping</span>{\" \"}\r\n                    </h2>\r\n                </div>\r\n\r\n                {/* -----------  CARD - SLIDDER   --------- */}\r\n                <div>\r\n                    <Slider {...slider}>\r\n                        <div className=\"minislider\">\r\n                            <img\r\n                                className=\"d-block w-100 htset \"\r\n                                src=\"http://design.dev.drcsystems.ooo:8084/themeforest/chocolate/assets/images/offer-img/img10.jpg\"\r\n                                alt=\"First slide\"\r\n                            />\r\n                            <div className=\"minisli_box\">\r\n                                <h4>Birthday Day</h4>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"minislider\">\r\n                            <img className=\"d-block w-100 htset\" src={pic} alt=\"First slide\" />\r\n                            <div className=\"minisli_box\">\r\n                                <h4>Valentine's Day</h4>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"minislider\">\r\n                            <img\r\n                                className=\"d-block w-100 htset\"\r\n                                src={gifts}\r\n                                alt=\"First slide\"\r\n                            />\r\n                            <div className=\"minisli_box\">\r\n                                <h4>Gifts</h4>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"minislider\">\r\n                            <img className=\"d-block w-100 htset\" src={party} alt=\"First slide\" />\r\n                            <div className=\"minisli_box\">\r\n                                <h4>Party</h4>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"minislider\">\r\n                            <img\r\n                                className=\"d-block w-100 htset\"\r\n                                src=\"https://images.unsplash.com/photo-1548741487-18d363dc4469?ixid=MXwxMjA3fDB8MHxzZWFyY2h8Mjd8fGNob2NvbGF0ZXxlbnwwfHwwfA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60\"\r\n                                alt=\"First slide\"\r\n                            />\r\n                            <div className=\"minisli_box\">\r\n                                <h4>chocolatey</h4>\r\n                            </div>\r\n                        </div>\r\n                    </Slider>\r\n                </div>\r\n            </Container>\r\n\r\n\r\n            <section id=\"parallax\" className=\"parallax\">\r\n                <div className=\"container\" data-aos=\"zoom-in\">\r\n                    <div className=\"text-center\">\r\n                        <h2>Valentines Day</h2>\r\n                        <p>A brand new Valentines Day's Collection on your way ....</p>\r\n                        <a className=\"parallax-btn\" href=\"/home\">\r\n                            SHOP NOW\r\n                         </a>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n\r\n            <Container>\r\n                {/* <div class=\"d-flex justify-content-around\"> */}\r\n                <Row>\r\n                    <Col md={8} >\r\n                        <img\r\n                            src=\"http://crems.like-themes.com/wp-content/uploads/2020/07/section-about-bg.png\"\r\n                            alt=\"First slide\"\r\n                        />\r\n                    </Col>\r\n\r\n                    <Col md={4} >\r\n                        <div id=\"item\">\r\n                            <h5 className=\"itemhead\"><i class=\"fab fa-pagelines icoo\"></i> Natural Organic Products</h5>\r\n                            <p className=\"item_subhead\">\r\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div id=\"item\">\r\n                            <h5 className=\"itemhead\"> <i class=\"fas fa-gift icoo\"></i>Designing</h5>\r\n                            <p className=\"item_subhead\">\r\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div id=\"item\">\r\n                            <h5 className=\"itemhead\"><i class=\"fas fa-candy-cane icoo\"></i>Best Quality Cocoa</h5>\r\n                            <p className=\"item_subhead\">\r\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit.Duis aute irure dolor in reprehenderit\r\n                            </p>\r\n                        </div>\r\n\r\n                    </Col>\r\n                </Row>\r\n                {/* </div> */}\r\n            </Container>\r\n\r\n\r\n            <Container className=\"container_self\">\r\n                <div className=\"minihead\">\r\n                    <h2 className=\"subheading\">\r\n                        {\" \"}\r\n                        <span>Trending Chocolates</span>{\" \"}\r\n                    </h2>\r\n                </div>\r\n                <Row className=\"HOVER\" >\r\n                    <Col md={3} sm={6} xs={6} className=\"choco\" >\r\n                        <img className=\"choco_img\" src=\"http://crems.like-themes.com/wp-content/uploads/2019/06/shop-04-800x800.png\" alt=\"lost\" />\r\n                        <div className=\"choco_name\" > <h4>Choco Vanilla Truffle</h4></div>\r\n                    </Col>\r\n\r\n                    <Col md={3} sm={6} xs={6} className=\"choco\" >\r\n                        <img className=\"choco_img\" src=\"http://crems.like-themes.com/wp-content/uploads/2019/06/candies_prod.png\" alt=\"lost\" />\r\n                        <div className=\"choco_name\" > <h4>Ferrero Rocher</h4></div>\r\n                    </Col>\r\n\r\n                    <Col md={3} sm={6} xs={6} className=\"choco\" >\r\n                        <img className=\"choco_img\" src=\"http://crems.like-themes.com/wp-content/uploads/2019/06/shop-05-768x768.png\" alt=\"lost\" />\r\n                        <div className=\"choco_name\" > <h4>Almond Dark Chocolate</h4></div>\r\n                    </Col>\r\n\r\n                    <Col md={3} sm={6} xs={6} className=\"choco\" >\r\n                        <img className=\"choco_img\" src=\"http://crems.like-themes.com/wp-content/uploads/2019/06/choco_prod.png\" alt=\"lost\" />\r\n                        <div className=\"choco_name\" > <h4>Dark Chocolate</h4></div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <section className=\"my-3 Button\" style={{ marginLeft: \"3rem\" }}>\r\n                        <a className=\"Button-btn\" href=\"/home\"> SHOP NOW </a>\r\n                    </section>\r\n                </Row>\r\n\r\n            </Container>\r\n\r\n\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default Introscreen;\r\n","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Reducers\\User_reducer.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Constants\\User_constant.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\LoginScreen.js",["332"],"\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Button, Form } from 'react-bootstrap';\r\nimport '../index.css';\r\nimport '../STYLES/Loginform.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LogIN } from '../Actions/User_action.js';\r\nimport Loginform_Container from \"../Components/Loginform_Container.js\";\r\nimport Mess from '../Components/Message.js';\r\nimport Load from '../Components/Loading.js';\r\n\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/home';// email ( returns the querystring part of a URL)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const user_Login = useSelector(state => state.user_Login);  //user_Login -> from the store\r\n    const { loading, error, UserInfo } = user_Login;\r\n\r\n\r\n    useEffect(() => {\r\n        if (UserInfo)\r\n            history.push(redirect)\r\n    }, [history, UserInfo, redirect])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault() //It'll NOT SUBMIT unless dispatch() calls ACTION & PW,EMAIL are get verified\r\n        dispatch(LogIN(email, password)) //DISPATCH LOGIN\r\n    }\r\n\r\n\r\n    return (\r\n        <Loginform_Container>\r\n            <h1 className=\"loginhead\"><b>Sign In</b></h1>\r\n\r\n            {error && <Mess variant='danger'>{error}</Mess>}\r\n            {loading && <Load />}\r\n\r\n            <Form onSubmit={submitHandler} id=\"login_form\" >\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label><b>Email Address</b></Form.Label>\r\n                    <Form.Control\r\n                        className=\"form_box\"\r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label><b>Password</b></Form.Label>\r\n                    <Form.Control\r\n                        className=\"form_box\"\r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='danger'>\r\n                    <b style={{ fontSize: \"18px\" }}>Sign In</b>\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col style={{ color: \"rgba(255, 255, 255, 0.959)\" }}>\r\n                    New Customer?{' '}\r\n                    <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Loginform_Container>\r\n    )\r\n}\r\n\r\nexport default LoginScreen;\r\n","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Actions\\User_action.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Loginform_Container.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\RegisterScreen.js",["333","334","335","336"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap';\r\nimport '../index.css';\r\nimport '../STYLES/Loginform.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Register } from '../Actions/User_action.js';\r\nimport Loginform_Container from \"../Components/Loginform_Container.js\";\r\nimport Mess from '../Components/Message.js';\r\nimport Load from '../Components/Loading.js';\r\n\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmpass, setConfirmpass] = useState('');\r\n    const [msg, setMsg] = useState(null);\r\n\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/home';// email ( returns the querystring part of a URL)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const user_Register = useSelector(state => state.user_Register);  //user_Register -> from the store\r\n    const { loading, error, UserInfo } = user_Register;\r\n\r\n\r\n    useEffect(() => {\r\n        if (UserInfo)\r\n            history.push(redirect)\r\n    }, [history, UserInfo, redirect])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (password !== confirmpass)\r\n            setMsg(\"Password doesn't match!\");\r\n        else\r\n            dispatch(Register(name, email, password));\r\n    }\r\n\r\n\r\n    return (\r\n        <Loginform_Container>\r\n            <h1 className=\"loginhead\" >Sign Up</h1>\r\n\r\n            {msg && <Mess variant='danger'>{msg}</Mess>}\r\n            {error && <Mess variant='danger'>{error}</Mess>}\r\n            {loading && <Load />}\r\n\r\n\r\n            <Form onSubmit={submitHandler} id=\"login_form\">\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label><b>Name</b></Form.Label>\r\n                    <Form.Control\r\n                        className=\"form_box\"\r\n                        type='name'\r\n                        placeholder='name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label><b>Email Address</b></Form.Label>\r\n                    <Form.Control\r\n                        className=\"form_box\"\r\n                        type='email'\r\n                        placeholder='email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label><b>Password</b></Form.Label>\r\n                    <Form.Control\r\n                        className=\"form_box\"\r\n                        type='password'\r\n                        placeholder='password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmpassword'>\r\n                    <Form.Label><b>Confirm Password</b></Form.Label>\r\n                    <Form.Control\r\n                        className=\"form_box\"\r\n                        type='password'\r\n                        placeholder='confirm password'\r\n                        value={confirmpass}\r\n                        onChange={(e) => setConfirmpass(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='danger'>\r\n                    <b style={{ fontSize: \"18px\" }}>Register</b>\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col style={{ color: \"rgba(255, 255, 255, 0.959)\" }}>\r\n                    Have an Account ?{' '}\r\n                    <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Register\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Loginform_Container>\r\n    )\r\n}\r\n\r\n\r\nexport default LoginScreen;\r\n","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\ProfileScreen.js",["337"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Row, Col, Container, Button, Form } from 'react-bootstrap';\r\nimport '../index.css';\r\nimport '../STYLES/Loginform.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getUserDetails, UserUpdateProfile } from '../Actions/User_action.js';\r\nimport Mess from '../Components/Message.js';\r\nimport Load from '../Components/Loading.js';\r\n\r\n\r\nconst LoginScreen = ({ history }) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmpass, setConfirmpass] = useState('');\r\n    const [msg, setMsg] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const user_Details = useSelector(state => state.user_Details);\r\n    const { loading, error, USER } = user_Details;\r\n\r\n    const user_Login = useSelector(state => state.user_Login); //user_Login -> from the store\r\n    const { UserInfo } = user_Login;\r\n\r\n    const user_UpdateProfileDetails = useSelector(state => state.user_UpdateProfileDetails);\r\n    const { success } = user_UpdateProfileDetails;\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!UserInfo)\r\n            history.push('/login');\r\n        else {\r\n            if (!USER.name)\r\n                dispatch(getUserDetails('profile'));\r\n            else {\r\n                console.log(USER.name)\r\n                setName(USER.name);\r\n                setEmail(USER.email);\r\n            }\r\n        }\r\n    }, [dispatch, history, UserInfo, USER]) //useEffect will be fired off when there is any change in these attributes.\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (password != confirmpass)\r\n            setMsg(\"Password doesn't match!\");\r\n        else {\r\n            //DISPATCH Updated PROFILE\r\n            dispatch(UserUpdateProfile({ id: USER._id, name, email, password }))\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={5} >\r\n                <Container>\r\n                    <Row className=\"justify-content-md-center\" >\r\n                        <Col md={6} xs={12} >\r\n                            {/* <Loginform_Container> */}\r\n                            <h2 className=\"loginhead\" >PROFILE</h2>\r\n\r\n                            {msg && <Mess variant='danger'>{msg}</Mess>}\r\n                            {error && <Mess variant='danger'>{error}</Mess>}\r\n                            {success && <Mess variant='success'>Profile Updated</Mess>}\r\n                            {loading && <Load />}\r\n\r\n\r\n                            <Form onSubmit={submitHandler} id=\"login_form\">\r\n                                <Form.Group controlId='name'>\r\n                                    <Form.Label><b>Name</b></Form.Label>\r\n                                    <Form.Control\r\n                                        className=\"form_box\"\r\n                                        type='name'\r\n                                        placeholder='Enter name'\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='email'>\r\n                                    <Form.Label><b>Email Address</b></Form.Label>\r\n                                    <Form.Control\r\n                                        className=\"form_box\"\r\n                                        type='email'\r\n                                        placeholder='Enter email'\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='password'>\r\n                                    <Form.Label><b>Password</b></Form.Label>\r\n                                    <Form.Control\r\n                                        className=\"form_box\"\r\n                                        type='password'\r\n                                        placeholder='Enter password'\r\n                                        value={password}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='confirmpassword'>\r\n                                    <Form.Label><b>Confirm Password</b></Form.Label>\r\n                                    <Form.Control\r\n                                        className=\"form_box\"\r\n                                        type='password'\r\n                                        placeholder='confirm password'\r\n                                        value={confirmpass}\r\n                                        onChange={(e) => setConfirmpass(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Button type='submit' variant='warning'>\r\n                                    <b style={{ fontSize: \"18px\" }}>Update</b>\r\n                                </Button>\r\n                            </Form>\r\n                            {/* </Loginform_Container> */}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Col>\r\n\r\n            <Col md={7} >\r\n                <h2>My Orders</h2>\r\n            </Col>\r\n        </Row>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default LoginScreen;\r\n","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\ShippingScreen.js",["338","339","340"],"\r\nimport React, { useState } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport '../index.css';\r\nimport '../STYLES/Loginform.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SaveShippingAddress } from '../Actions/Cart_action.js';\r\nimport Loginform_Container from \"../Components/Loginform_Container.js\";\r\nimport CheckoutSteps from \"../Components/CheckoutSteps.js\";\r\nimport Mess from '../Components/Message.js';\r\nimport Load from '../Components/Loading.js';\r\n\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n\r\n    const CART = useSelector(state => state.CART);\r\n    const { shippingAddress } = CART;\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address);\r\n    const [city, setCity] = useState(shippingAddress.city);\r\n    const [postalcode, setPostalCode] = useState(shippingAddress.postalcode);\r\n    const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"submit\");\r\n        dispatch(SaveShippingAddress({ address, city, postalcode, country }));\r\n        history.push('/payment');   // redirect to payment page\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Loginform_Container>\r\n                <CheckoutSteps step1 step2 />\r\n                <h1 className=\"loginhead\" >Shipping</h1>\r\n\r\n                {/*  {msg && <Mess variant='danger'>{msg}</Mess>}\r\n                {error && <Mess variant='danger'>{error}</Mess>}\r\n                {loading && <Load />} */}\r\n\r\n\r\n                <Form onSubmit={submitHandler} id=\"login_form\">\r\n                    <Form.Group controlId='address'>\r\n                        <Form.Label><b>Address</b></Form.Label>\r\n                        <Form.Control\r\n                            className=\"form_box\"\r\n                            type='name'\r\n                            placeholder='address'\r\n                            value={address}\r\n                            onChange={(e) => setAddress(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='city'>\r\n                        <Form.Label><b>City</b></Form.Label>\r\n                        <Form.Control\r\n                            className=\"form_box\"\r\n                            type='city'\r\n                            placeholder='city'\r\n                            value={city}\r\n                            onChange={(e) => setCity(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='postalcode'>\r\n                        <Form.Label><b>Postal Code</b></Form.Label>\r\n                        <Form.Control\r\n                            className=\"form_box\"\r\n                            type='postalcode'\r\n                            placeholder='postalcode'\r\n                            value={postalcode}\r\n                            onChange={(e) => setPostalCode(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='country'>\r\n                        <Form.Label><b>Country</b></Form.Label>\r\n                        <Form.Control\r\n                            className=\"form_box\"\r\n                            type='text'\r\n                            placeholder='country'\r\n                            value={country}\r\n                            onChange={(e) => setCountry(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='success'>\r\n                        <b style={{ fontSize: \"18px\" }}>Continue</b>\r\n                    </Button>\r\n                </Form>\r\n\r\n            </Loginform_Container>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ShippingScreen;\r\n","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\CheckoutSteps.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\PaymentScreen.js",["341"],"\r\nimport React, { useState } from 'react';\r\nimport { Button, Form, Col } from 'react-bootstrap';\r\nimport '../index.css';\r\nimport '../STYLES/Loginform.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SavePaymentMethod } from '../Actions/Cart_action.js';\r\nimport Loginform_Container from \"../Components/Loginform_Container.js\";\r\nimport CheckoutSteps from \"../Components/CheckoutSteps.js\";\r\n\r\n\r\n\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n\r\n\r\n    const CART = useSelector(state => state.CART);\r\n    const { shippingAddress } = CART;\r\n\r\n    if (!shippingAddress)\r\n        history.push('/shipping');\r\n\r\n    const [paymentmethod, setPaymentMethod] = useState(\"PayPal\");\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"submit\");\r\n        dispatch(SavePaymentMethod(paymentmethod));\r\n        history.push('/placeorder');   // redirect to payment page\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Loginform_Container>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <h1 className=\"loginhead\" >Payment Method</h1>\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='PayPal'\r\n                            name='paymentMethod'\r\n                            value='PayPal'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n                        </Form.Check>\r\n\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='Stripe'\r\n                            id='Stripe'\r\n                            name='paymentMethod'\r\n                            value='Stripe'\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        ></Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </Loginform_Container>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen;\r\n","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\PlaceOrderScreen.js",["342","343","344","345"],"D:\\React_Projects\\Ecommerce\\frontend\\src\\index.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\store.js",[],["346","347"],"D:\\React_Projects\\Ecommerce\\frontend\\src\\App.js",["348"],"D:\\React_Projects\\Ecommerce\\frontend\\src\\reportWebVitals.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Reducers\\Product_reducer.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Reducers\\Cart_reducer.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Reducers\\User_reducer.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Footer.js",["349","350","351"],"import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            {/* <Container> */}\r\n            {/* <Row> */}\r\n            {/* <Col className=\"text-center py-3 mx-2\"> */}\r\n            <div style={{ textAlign: \"center\", margin: \"0rem 0\", padding: \"2rem 0 .6rem 0\" }}  >\r\n                <p style={{ color: \"#e5e5e5\" }} >  Developed By Niharika Dutta</p>\r\n            </div>\r\n\r\n            {/* </Col> */}\r\n            {/* </Row> */}\r\n            {/* </Container> */}\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","D:\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Header.js",["352","353","354"],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\Introscreen.js",["355","356","357","358","359","360","361"],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\Homescreen.js",["362"],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\Cartscreen.js",["363","364","365"],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\Productscreen.js",["366","367","368","369"],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\LoginScreen.js",["370"],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\ProfileScreen.js",["371","372"],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\RegisterScreen.js",["373","374","375","376"],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\ShippingScreen.js",["377","378","379"],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\PaymentScreen.js",["380"],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\PlaceOrderScreen.js",["381","382","383","384"],"\r\nimport React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport CheckoutSteps from \"../Components/CheckoutSteps.js\";\r\nimport { Create_OrderAction } from '../Actions/Order_action.js';\r\nimport Mess from '../Components/Message.js';\r\nimport Load from '../Components/Loading.js';\r\nimport \"../STYLES/placeOrderScreen.css\";\r\n\r\n\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const CART = useSelector(state => state.CART);\r\n    const { shippingAddress } = CART;\r\n\r\n    if (!CART.shippingAddress.address)\r\n        history.push('/shipping')\r\n    else if (!CART.paymentMethod)\r\n        history.push('/payment')\r\n\r\n\r\n    //   Calculate prices\r\n    const Till_2_Decimals = (num) => {\r\n        return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    CART.itemsPrice = Till_2_Decimals(\r\n        CART.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    )\r\n    CART.shippingPrice = Till_2_Decimals(CART.itemsPrice > 500 ? 0 : 100)\r\n    CART.taxPrice = Till_2_Decimals(Number((0.15 * CART.itemsPrice).toFixed(2))) // 15% tax\r\n    CART.totalPrice = (\r\n        Number(CART.itemsPrice) +\r\n        Number(CART.shippingPrice) +\r\n        Number(CART.taxPrice)\r\n    ).toFixed(2)\r\n\r\n\r\n\r\n    const order_Create = useSelector(state => state.order_Create);\r\n    const { Order, success, error } = order_Create;\r\n\r\n    console.log(order_Create); // {loading,succes,Order}\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${Order._id}`);\r\n        }\r\n    }, [history, success])\r\n\r\n\r\n\r\n    const placeOrderHandler = () => {\r\n        console.log('order placed');\r\n        console.log(order_Create);\r\n\r\n        // Dispatch(send) to Action\r\n        dispatch(Create_OrderAction({\r\n            itemsPrice: CART.itemsPrice,\r\n            orderItems: CART.cartItems,\r\n            paymentMethod: CART.paymentMethod,\r\n            shippingAddress: CART.shippingAddress,\r\n            shipping_price: CART.shippingPrice,\r\n            taxPrice: CART.taxPrice,\r\n            total_price: CART.totalPrice\r\n        }))\r\n\r\n    }\r\n\r\n\r\n    /* 141314 */\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={7} sm={12} xs={12} /* className=\"Orderbkgrnd\" */ >\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item style={{ backgroundColor: \"#262626\", padding: \"0rem\" }} >\r\n                            <h2 className=\"orderHead\" > Shipping</h2>\r\n                            <p>\r\n                                <strong style={{ fontSize: \"1.05rem \" }} >Address: </strong>\r\n                                <span id=\"Ordersubhead\">\r\n                                    {CART.shippingAddress.address},\r\n                                    {CART.shippingAddress.city}{' '}\r\n                                    {CART.shippingAddress.postalCode},{' '}\r\n                                    {CART.shippingAddress.country}\r\n                                </span>\r\n\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item style={{ backgroundColor: \"#262626\", padding: \"0rem\" }}>\r\n                            <h2 className=\"orderHead\" >Payment Method</h2>\r\n                            <strong style={{ fontSize: \"1.05rem \" }}>Method: </strong>\r\n                            <span id=\"Ordersubhead\">\r\n                                {CART.paymentMethod}\r\n                            </span>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item style={{ backgroundColor: \"#262626\", padding: \"0rem\" }}>\r\n                            <h2 className=\"orderHead\">Ordered Items</h2>\r\n                            {CART.cartItems.length === 0 ? (\r\n                                <Mess>Your cart is empty</Mess>\r\n                            ) : (\r\n                                <ListGroup variant='flush' >\r\n                                    {CART.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={2} sm={3} xs={3}>\r\n                                                    <Image\r\n                                                        src={item.image}\r\n                                                        alt={item.name}\r\n                                                        fluid\r\n                                                        rounded\r\n                                                    />\r\n                                                </Col>\r\n\r\n                                                <Col md={6} sm={5} xs={5}>\r\n                                                    <Link to={`/product/${item.product}`} className=\"itemDet fontWt7_4\">\r\n                                                        {item.name} | ({item.filling})\r\n                                                    </Link>\r\n                                                </Col>\r\n\r\n                                                <Col md={4} sm={4} xs={4} className=\"itemDet fontWt7_4\">\r\n                                                    {item.qty} x ₹{item.price} = ₹{item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={1}></Col>\r\n\r\n                <Col md={4}>\r\n                    <div className=\"Orderbox\" >\r\n                        <ListGroup variant='flush' style={{ backgroundColor: \"#262626\", padding: \"0 0 12px 0\" }} >\r\n                            <ListGroup.Item>\r\n                                <h2 className=\"orderHead\" style={{ textAlign: \"center\" }} >Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item id=\"boxsubitem\" >\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>₹{CART.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item id=\"boxsubitem\">\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>₹{CART.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item id=\"boxsubitem\">\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>₹{CART.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item id=\"boxsubitem\">\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>₹{CART.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item id=\"boxsubitem\">\r\n                                {error && <Mess variant='danger'>{error}</Mess>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item id=\"boxsubitem\">\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    variant=\"success\"\r\n                                    disabled={CART.cartItems === 0}   //cartItems -> array of obj [{},{},{}]\r\n                                    onClick={placeOrderHandler}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen;\r\n","D:\\React_Projects\\Ecommerce\\frontend\\src\\Constants\\Product_constant.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Constants\\User_constant.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Constants\\Cart_constant.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Message.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Loading.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Prod.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\backend_URL.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Rating.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Components\\Loginform_Container.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Components\\CheckoutSteps.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Actions\\User_action.js",["385","386"],"\r\nimport axios from \"axios\";\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_RESET,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET\r\n} from \"../Constants/User_constant.js\";\r\nimport { ORDER_ALL_MY_RESET } from \"../Constants/Order_constant.js\";\r\nimport backend_URL from \"../backend_URL.js\";\r\n\r\n\r\n\r\n\r\n\r\n// LOGIN -- ACTION (already registered)\r\nexport const LogIN = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: USER_LOGIN_REQUEST });\r\n\r\n        const config = {\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n        };\r\n\r\n        // data ----> res.json full object{} that is passed from the user_controller\r\n        const { data } = await axios.post(`${backend_URL}/api/users/login`, { email, password }, config); // from user_controller backend\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        });\r\n        // console.log(data)\r\n        localStorage.setItem(\"UserInfo\", JSON.stringify(data)); // UserInfo frm reducer.js\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n// LOGOUT -- ACTION\r\nexport const LogOUT = () => (dispatch) => {\r\n    localStorage.removeItem('UserInfo');   // ERASED the info of particular user\r\n    dispatch({ type: USER_LOGOUT });\r\n    dispatch({ type: USER_DETAILS_RESET });\r\n    dispatch({ type: ORDER_ALL_MY_RESET });\r\n    dispatch({ type: USER_LIST_RESET });\r\n}\r\n\r\n\r\n\r\n\r\n// REGISTER -- ACTION\r\nexport const Register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: USER_REGISTER_REQUEST });\r\n\r\n        const config = {\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n        };\r\n\r\n        const { data } = await axios.post(`${backend_URL}/api/users`, { name, email, password }, config); // from user_controller backend\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data,\r\n        });\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        });\r\n\r\n        localStorage.setItem(\"UserInfo\", JSON.stringify(data)); // UserInfo frm reducer.js\r\n    }\r\n\r\n    catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n//  GETUSER DETAILS TO DISPLAY IN PROFILE  ---- ACTION\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_DETAILS_REQUEST });\r\n\r\n        const { user_Login: { UserInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: ` Bearer ${UserInfo.token}`\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.get(`${backend_URL}/api/users/${id}`, config); // from user_controller backend\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        });\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n//  UPDATE IN PROFILE  ---- ACTION\r\nexport const UserUpdateProfile = (USER) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_UPDATE_PROFILE_REQUEST });\r\n        const { user_Login: { UserInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: ` Bearer ${UserInfo.token}`\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.put(`${backend_URL}/api/users/profile`, USER, config); // from user_controller backend\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data,     // updated data stored into the database\r\n        });\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n//  ALL USERS LIST  ---- ACTION (Admin Access)\r\nexport const UserAll_ListAction = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_LIST_REQUEST });\r\n\r\n        const { user_Login: { UserInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: ` Bearer ${UserInfo.token}`\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.get(`${backend_URL}/api/users`, config); // from user_controller backend\r\n        console.log(data);                                                 // data gets into  allUsers: []  in the Reducer\r\n\r\n        //  allUsers: []   <-----  action.payload(REDUCER)   <-------- payload(ACTION)   <--------- DATA\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data,\r\n        });\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport const userDeleteAction = (ID) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_DELETE_REQUEST });\r\n\r\n        const { user_Login: { UserInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: ` Bearer ${UserInfo.token}`\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.delete(`${backend_URL}/api/users/${ID}`, config); // from user_controller backend\r\n\r\n        dispatch({ type: USER_DELETE_SUCCESS });\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport const userUpdateAction = (userObj) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_UPDATE_REQUEST });\r\n\r\n        const { user_Login: { UserInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: ` Bearer ${UserInfo.token}`\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.put(`${backend_URL}/api/users/${userObj._id}`, userObj, config); // from user_controller backend\r\n\r\n        dispatch({ type: USER_UPDATE_SUCCESS })\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        });\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};","D:\\React_Projects\\Ecommerce\\frontend\\src\\Actions\\Cart_action.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Actions\\product_action.js",["387","388"],"\r\nimport axios from 'axios';\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n} from '../Constants/Product_constant.js';\r\nimport backend_URL from '../backend_URL.js';\r\n\r\n\r\n// dispatch() is the method used to dispatch actions and trigger state changes to the store.\r\nexport const Listproducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n        const { data } = await axios.get(`${backend_URL}/api/products`) // destructure - frm the prev homescreen\r\n        console.log(\"successafter\");\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const Detailsproducts = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n        const { data } = await axios.get(`${backend_URL}/api/products/${id}`)        // returns obj{} from the backend\r\n        console.log(\"successafter\");\r\n\r\n        dispatch({                 // TRUE\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const deleteProductAction = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DELETE_REQUEST });\r\n\r\n        const { user_Login: { UserInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: ` Bearer ${UserInfo.token}`\r\n            },\r\n        };\r\n\r\n        await axios.delete(`${backend_URL}/api/products/${id}`, config); // from user_controller backend\r\n\r\n        dispatch({ type: PRODUCT_DELETE_SUCCESS, });\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nexport const createProductAction = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_CREATE_REQUEST });\r\n\r\n        const { user_Login: { UserInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: ` Bearer ${UserInfo.token}`\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.post(`${backend_URL}/api/products`, {}, config); // from user_controller backend\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        });\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nexport const updateProductAction = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_UPDATE_REQUEST });\r\n\r\n        const { user_Login: { UserInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: ` Bearer ${UserInfo.token}`\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.put(`${backend_URL}/api/products/${product._id}`, product, config); // from user_controller backend\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        });\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const createProductReviewAction = (productId, reviewObj) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_CREATE_REVIEW_REQUEST });\r\n\r\n        const { user_Login: { UserInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: ` Bearer ${UserInfo.token}`\r\n            },\r\n        };\r\n\r\n        await axios.post(`${backend_URL}/api/products/${productId}/reviews`, reviewObj, config);\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n        });\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};","D:\\React_Projects\\Ecommerce\\frontend\\src\\Reducers\\Order_reducer.js",["389"],"\r\n\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_RESET,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n    ORDER_ALL_MY_REQUEST,\r\n    ORDER_ALL_MY_SUCCESS,\r\n    ORDER_ALL_MY_FAIL,\r\n    ORDER_ALL_MY_RESET,\r\n    ORDERS_REQUEST,\r\n    ORDERS_SUCCESS,\r\n    ORDERS_FAIL,\r\n    ORDERS_RESET,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../Constants/Order_constant.js';\r\n\r\n\r\n\r\nexport const orderCreate_reducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                Order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const OrderDetails_Full_reducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return { loading: true }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                Order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const OrderPay_reducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return { loading: true }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const myAllOrders_reducer = (state = { allMyOrders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_ALL_MY_REQUEST:\r\n            return { loading: true }\r\n\r\n        case ORDER_ALL_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                allMyOrders: action.payload\r\n            }\r\n\r\n        case ORDER_ALL_MY_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case ORDER_ALL_MY_RESET:\r\n            return { allMyOrders: [] }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n// ------------      For th4 order list       -------------\r\nexport const ORDER_All_reducer = (state = { Order_All: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDERS_REQUEST:\r\n            return { loading: true }\r\n\r\n        case ORDERS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                Order_All: action.payload\r\n            }\r\n\r\n        case ORDERS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n// For deliver materials to the customer -----------    admin can handle the delivery option\r\nexport const OrderDeliver_reducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return { loading: true }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","D:\\React_Projects\\Ecommerce\\frontend\\src\\Constants\\Order_constant.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Actions\\Order_action.js",["390","391","392"],"\r\n\r\n\r\nimport axios from 'axios';\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_ALL_MY_REQUEST,\r\n    ORDER_ALL_MY_SUCCESS,\r\n    ORDER_ALL_MY_FAIL,\r\n    ORDERS_REQUEST,\r\n    ORDERS_SUCCESS,\r\n    ORDERS_FAIL,\r\n    ORDERS_RESET,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../Constants/Order_constant.js';\r\nimport backend_URL from '../backend_URL.js';\r\n\r\n\r\n\r\n\r\n\r\nexport const Create_OrderAction = (Order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_CREATE_REQUEST });\r\n        const { user_Login: { UserInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",   // data will be send in the form of json\r\n                Authorization: ` Bearer ${UserInfo.token}`\r\n            },\r\n        };\r\n\r\n        console.log(Order)\r\n\r\n        // axios.post(URL , DATA that we want to send back to the server , config)\r\n        const { data } = await axios.post(`${backend_URL}/api/orders`, Order, config); // from user_controller backend\r\n        console.log(data);\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data,\r\n        });\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport const GetOrderDetails_ByID = (ID) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_DETAILS_REQUEST });\r\n        const { user_Login: { UserInfo } } = getState();\r\n        const config = {\r\n            headers: {\r\n                Authorization: ` Bearer ${UserInfo.token}`\r\n            },\r\n        };\r\n\r\n        // axios.post(URL , DATA that we want to send back to the server , config)\r\n        const { data } = await axios.get(`${backend_URL}/api/orders/${ID}`, config); // from user_controller backend\r\n        console.log(data);           // Payload Object Printing \r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        });\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n// For payment handling Action\r\nexport const OrderPay_Action = (ORDER_ID, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_PAY_REQUEST });\r\n        const { user_Login: { UserInfo } } = getState();\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",   // data will be send in the form of json\r\n                Authorization: ` Bearer ${UserInfo.token}`\r\n            },\r\n        };\r\n\r\n\r\n        const { data } = await axios.put(`${backend_URL}/api/orders/${ORDER_ID}/pay`, paymentResult, config); // from user_controller backend\r\n        console.log(data);\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data,\r\n        });\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n// For Delivery Products handling Action  ---  by the ADMIN \r\nexport const OrderDeliver_Action = (ORDER) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_DELIVER_REQUEST });\r\n        const { user_Login: { UserInfo } } = getState();\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",   // data will be send in the form of json\r\n                Authorization: ` Bearer ${UserInfo.token}`\r\n            },\r\n        };\r\n\r\n\r\n        const { data } = await axios.put(`${backend_URL}/api/orders/${ORDER._id}/deliver`, {}, config); // from user_controller backend\r\n        console.log(data);\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data,\r\n        });\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const OrderMyAll_Action = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_ALL_MY_REQUEST });\r\n        const { user_Login: { UserInfo } } = getState();\r\n        const config = {\r\n            headers: { Authorization: ` Bearer ${UserInfo.token}` },\r\n        };\r\n\r\n\r\n        const { data } = await axios.get(`${backend_URL}/api/orders/myorders`, config); // from user_controller backend\r\n        console.log(data);    //  [{} {} {} {}]\r\n\r\n        dispatch({\r\n            type: ORDER_ALL_MY_SUCCESS,\r\n            payload: data,\r\n        });\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: ORDER_ALL_MY_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport const Order_All_Action = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDERS_REQUEST });\r\n        const { user_Login: { UserInfo } } = getState();\r\n        const config = {\r\n            headers: { Authorization: ` Bearer ${UserInfo.token}` },\r\n        };\r\n\r\n\r\n        const { data } = await axios.get(`${backend_URL}/api/orders`, config); // from user_controller backend\r\n        console.log(data);    //  [{} {} {} {}]\r\n\r\n        dispatch({\r\n            type: ORDERS_SUCCESS,\r\n            payload: data,\r\n        });\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: ORDERS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n","D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\OrderScreen.js",["393","394","395","396"],"\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport CheckoutSteps from \"../Components/CheckoutSteps.js\";\r\nimport { GetOrderDetails_ByID, OrderPay_Action, OrderDeliver_Action } from '../Actions/Order_action.js';\r\nimport Mess from '../Components/Message.js';\r\nimport Load from '../Components/Loading.js';\r\nimport \"../STYLES/placeOrderScreen.css\";\r\nimport backend_URL from '../backend_URL.js';\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from \"../Constants/Order_constant.js\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n\r\n    const [sdkReady, setsdkReady] = useState(false)\r\n    const ORDER_ID = match.params.id;\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    // USER LOGIN ---- User authentication \r\n    const user_Login = useSelector(state => state.user_Login);  //user_Login -> from the store\r\n    const { UserInfo } = user_Login;\r\n\r\n    // ORDER DETAILS\r\n    const order_Details = useSelector(state => state.order_Details);\r\n    const { Order, success, loading, error } = order_Details;\r\n    console.log(order_Details);                                      // {loading,succes,Order}\r\n\r\n\r\n    // ORDER PAYMENT \r\n    const order_Pay = useSelector(state => state.order_Pay);\r\n    const { success: successPay, loading: loadingPay } = order_Pay;\r\n\r\n\r\n    // ORDER DELIVER \r\n    const order_Deliver = useSelector(state => state.order_Deliver);\r\n    const { success: successDeliver, loading: loadingDeliver } = order_Deliver;\r\n\r\n\r\n\r\n    //   Calculatint Items Price                \r\n    if (!loading) {\r\n        const Till_2_Decimals = (num) => {\r\n            return (Math.round(num * 100) / 100).toFixed(2)\r\n        }\r\n        Order.itemsPrice = Till_2_Decimals(\r\n            Order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n        )\r\n    }\r\n\r\n\r\n\r\n    // -----  SCRIPT FOR PAYPAL INTEGRATION USING SANDBOX  -------\r\n    useEffect(() => {\r\n        if (!UserInfo)\r\n            history.push('/login');\r\n\r\n        else {\r\n            const addPayPalScript = async () => {\r\n                const { data: clientID } = await axios.get(`${backend_URL}/api/config/paypal`);\r\n                console.log(\"CLIENT-ID = \", clientID);\r\n                const script = document.createElement('script');\r\n                script.type = 'text/javascript';\r\n                // https://developer.paypal.com/docs/checkout/reference/customize-sdk/\r\n                script.src = `https://www.paypal.com/sdk/js?client-id=${clientID}`;\r\n                script.async = true\r\n                script.onload = () => {\r\n                    setsdkReady(true)\r\n                }\r\n                document.body.appendChild(script)\r\n            }\r\n            // addPayPalScript();\r\n\r\n\r\n            if (!Order || successPay || successDeliver) {\r\n                dispatch({ type: ORDER_PAY_RESET });\r\n                dispatch({ type: ORDER_DELIVER_RESET });\r\n                dispatch(GetOrderDetails_ByID(ORDER_ID));\r\n            }\r\n            else if (!Order.isPaid)   // Not Paid === (!false) === true\r\n            {\r\n                if (!window.paypal) {\r\n                    addPayPalScript();\r\n                    console.log(window.paypal)\r\n                }\r\n                else\r\n                    setsdkReady(true);\r\n            }\r\n        }\r\n\r\n    }, [dispatch, ORDER_ID, successPay, successDeliver, Order])\r\n\r\n\r\n\r\n\r\n    const PaymentSucces_Handler = (paymentResult) => {\r\n        console.log(paymentResult)\r\n        dispatch(OrderPay_Action(ORDER_ID, paymentResult));\r\n    }\r\n\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(OrderDeliver_Action(Order))\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {loading ? <Load /> :\r\n                error ? <Mess variant=\"danger\"> {error} </Mess> :\r\n                    <>\r\n                        <h1 id=\"orderNum\" >ORDER {Order._id}</h1>\r\n                        <Row>\r\n                            <Col md={7} className=\"Orderbkgrnd\"  >\r\n                                <ListGroup variant='flush' className=\"Orderbkgrnd\" >\r\n                                    <ListGroup.Item style={{ backgroundColor: \"#141314\" }} >\r\n                                        <h2 className=\"orderHead\" >Shipping</h2>\r\n                                        <p style={{ margin: \"0 0 3px 0\" }} ><strong style={{ fontSize: \"1.05rem \" }}>Name : </strong> <span id=\"Ordersubhead\">{Order.user.name}</span></p>\r\n                                        <p style={{ margin: \"0 0 3px 0\" }}><strong style={{ fontSize: \"1.05rem \" }}>Email : </strong> <span id=\"Ordersubhead\">{Order.user.email}</span></p>\r\n                                        {/* <p><a href={`mailto: ${Order.user.email}`} > <span>{Order.user.email}</span></a></p> */}\r\n                                        <p >\r\n                                            <strong style={{ fontSize: \"1.05rem \" }}>Address: </strong>\r\n                                            <span id=\"Ordersubhead\">\r\n                                                {Order.shippingAddress.address},\r\n                                                {Order.shippingAddress.city}{' '}\r\n                                                {Order.shippingAddress.postalCode},{' '}\r\n                                                {Order.shippingAddress.country}\r\n                                            </span>\r\n                                        </p>\r\n                                        {Order.isDelivered ? <Mess variant=\"success\" >Delivered At {Order.Delivered_at} </Mess>\r\n                                            :\r\n                                            <Mess variant=\"danger\">Not Delivered</Mess>}\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item style={{ backgroundColor: \"#141314\" }}>\r\n                                        <h2 className=\"orderHead\">Payment Method</h2>\r\n                                        <p style={{ margin: \"0 0 1.2rem 0\" }}>\r\n                                            <strong>Method: </strong>\r\n                                            <span id=\"Ordersubhead\" >\r\n                                                {Order.paymentMethod}\r\n                                            </span>\r\n                                        </p>\r\n\r\n\r\n                                        {Order.isPaid ? <Mess variant=\"success\" > Paid on {Order.paid_at} </Mess>\r\n                                            :\r\n                                            <Mess variant=\"danger\">Not Paid</Mess>}\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item style={{ backgroundColor: \"#141314\" }}>\r\n                                        <h2 className=\"orderHead\">Ordered Items</h2>\r\n                                        {Order.orderItems.length === 0 ? (\r\n                                            <Mess>Your cart is empty</Mess>\r\n                                        ) : (\r\n                                            <ListGroup variant='flush' style={{ border: \"1px solid #f4f1de\" }}>\r\n                                                {Order.orderItems.map((item, index) => (\r\n                                                    <ListGroup.Item key={index}>\r\n                                                        <Row>\r\n                                                            <Col md={2} sm={3} xs={3} >\r\n                                                                <Image\r\n                                                                    src={item.image}\r\n                                                                    alt={item.name}\r\n                                                                    fluid\r\n                                                                    rounded\r\n                                                                />\r\n                                                            </Col>\r\n                                                            <Col sm={4} xs={4} >\r\n                                                                <Link to={`/product/${item.product}`} className=\"itemDet fontWt7_4\" >\r\n                                                                    {item.name}\r\n                                                                </Link>\r\n                                                            </Col>\r\n                                                            <Col md={4} sm={5} xs={5} className=\"itemDet fontWt7_4\" >\r\n                                                                {item.qty} x ₹{item.price} = ₹{item.qty * item.price}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                ))}\r\n                                            </ListGroup>\r\n                                        )}\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col>\r\n\r\n                            <Col md={1}></Col>\r\n\r\n                            <Col md={4}>\r\n                                <div className=\"Orderbox\">\r\n                                    <ListGroup variant='flush' >\r\n                                        <ListGroup.Item>\r\n                                            <h2 className=\"orderHead\" style={{ textAlign: \"center\" }} >Order Summary</h2>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item id=\"boxsubitem\" >\r\n                                            <Row>\r\n                                                <Col>Items</Col>\r\n                                                <Col>₹{Order.itemsPrice}</Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item id=\"boxsubitem\">\r\n                                            <Row>\r\n                                                <Col>Shipping</Col>\r\n                                                <Col>₹{Order.shipping_price}</Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item id=\"boxsubitem\">\r\n                                            <Row>\r\n                                                <Col>Tax</Col>\r\n                                                <Col>₹{Order.taxPrice}</Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item id=\"boxsubitem\">\r\n                                            <Row>\r\n                                                <Col>Total</Col>\r\n                                                <Col>₹{Order.total_price}</Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n\r\n\r\n                                        {/* ------------------   IF NOT PAID THEN BUTTON VISIBLE   ---------------*/}\r\n                                        {!Order.isPaid && (\r\n                                            <ListGroup.Item>\r\n                                                {loadingPay && <Load />}\r\n                                                {!sdkReady ? <Load />\r\n                                                    :\r\n                                                    (\r\n                                                        <PayPalButton\r\n                                                            amount={Order.total_price}\r\n                                                            onSuccess={PaymentSucces_Handler}\r\n                                                        />\r\n                                                    )}\r\n                                            </ListGroup.Item>\r\n                                        )}\r\n\r\n\r\n\r\n                                        {loadingDeliver && <Load />}\r\n                                        {\r\n                                            UserInfo && UserInfo.isAdmin && Order.isPaid && !Order.isDelivered && (\r\n                                                <ListGroup.Item>\r\n                                                    <Button\r\n                                                        type=\"button\"\r\n                                                        onClick={deliverHandler}\r\n                                                        className=\"btn btn-block\"\r\n                                                    >\r\n                                                        Mark As Delivered\r\n                                                    </Button>\r\n                                                </ListGroup.Item>\r\n                                            )\r\n                                        }\r\n\r\n                                    </ListGroup>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderScreen;\r\n","D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\UsersListScreen.js",["397"],"\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Mess from '../Components/Message.js';\r\nimport Load from '../Components/Loading.js';\r\nimport { UserAll_ListAction, userDeleteAction } from '../Actions/User_action.js'\r\n\r\n\r\n\r\n\r\nconst UsersListScreen = ({ history }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const users_List = useSelector(state => state.users_List);\r\n    const { loading, error, allUsers } = users_List;\r\n\r\n    const user_Login = useSelector(state => state.user_Login);  //user_Login -> from the store\r\n    const { UserInfo } = user_Login;\r\n\r\n    const user_Delete = useSelector(state => state.user_Delete);  //user_Delete -> from the store\r\n    const { success: seccessDeleteUser } = user_Delete;\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (UserInfo && UserInfo.isAdmin)\r\n            dispatch(UserAll_ListAction())\r\n        else\r\n            history.push('/login');\r\n    }, [dispatch, history, seccessDeleteUser])\r\n\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure you want to delete this User?')) {\r\n            dispatch(userDeleteAction(id));\r\n            console.log(\"User Deleted Successfully\")\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"cartHead\" style={{ paddingBottom: \"2rem\" }} >Users</h1>\r\n            {\r\n                loading ? (<Load />) :\r\n                    error ? (<Mess variant='danger'>{error}</Mess>) :\r\n                        (\r\n                            <Table striped bordered hover responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>NAME</th>\r\n                                        <th>EMAIL</th>\r\n                                        <th>ADMIN</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {allUsers.map((user) => (\r\n                                        <tr key={user._id}>\r\n                                            <td>{user._id}</td>\r\n                                            <td>{user.name}</td>\r\n                                            <td>  <a href={`mailto:${user.email}`}>{user.email}</a>  </td>\r\n                                            <td>\r\n                                                {user.isAdmin ? (\r\n                                                    <i className='fas fa-check' style={{ color: 'green', fontSize: \"1.5rem\" }}></i>\r\n                                                ) : (\r\n                                                    <i className='fas fa-times' style={{ color: 'red', fontSize: \"1.5rem\" }}></i>\r\n                                                )}\r\n                                            </td>\r\n                                            <td>\r\n                                                <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                    <Button variant='light' className='btn-sm'>\r\n                                                        <i className='fas fa-edit'></i>\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n                                                <Button\r\n                                                    variant='danger'\r\n                                                    className='btn-sm'\r\n                                                    onClick={() => deleteHandler(user._id)}\r\n                                                >\r\n                                                    <i className='fas fa-trash'></i>\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        )\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default UsersListScreen;\r\n","D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\UserEditScreen.js",["398","399","400"],"\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Button, Form } from 'react-bootstrap';\r\nimport '../index.css';\r\nimport '../STYLES/Loginform.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getUserDetails, userUpdateAction } from '../Actions/User_action.js';\r\nimport Loginform_Container from \"../Components/Loginform_Container.js\";\r\nimport Mess from '../Components/Message.js';\r\nimport Load from '../Components/Loading.js';\r\nimport { USER_UPDATE_RESET } from '../Constants/User_constant.js';\r\n\r\n\r\n\r\nconst UserEditScreen = ({ history, match }) => {\r\n\r\n    // Id of the specific USER\r\n    const urlID = match.params.id;\r\n    console.log(urlID)\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [isadmin, setIsAdmin] = useState(false);\r\n\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const user_Details = useSelector(state => state.user_Details);  //user_Details -> from the store\r\n    const { loading, error, USER } = user_Details;\r\n    console.log(user_Details)\r\n\r\n    const user_Update = useSelector(state => state.user_Update);\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = user_Update;\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET });\r\n            history.push(\"/admin/usersList\");\r\n        }\r\n\r\n        else {\r\n            if (!USER.name || urlID !== USER._id)           // if the user details is not set\r\n                dispatch(getUserDetails(urlID));\r\n            else {\r\n                setName(USER.name);\r\n                setEmail(USER.email);\r\n                setIsAdmin(USER.isAdmin);\r\n            }\r\n        }\r\n    }, [USER, dispatch, urlID, successUpdate, history])\r\n\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const Obj = {\r\n            _id: USER._id,\r\n            name: name,\r\n            email: email,\r\n            isAdmin: isadmin\r\n        }\r\n        console.log(Obj)\r\n        dispatch(userUpdateAction(Obj));\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Link to=\"/admin/usersList\" style={{ fontSize: \"1.05rem\", color: \"white\" }}> <i className=\"arrow left\"></i> GO BACK </Link>\r\n\r\n            <Loginform_Container>\r\n                <h1 className=\"cartHead\" style={{ paddingBottom: \"2.1rem\" }} >Edit User</h1>\r\n\r\n\r\n                {errorUpdate && <Mess variant='danger'>{errorUpdate}</Mess>}\r\n                {/* {successUpdate && <Mess variant='success'>Profile Updated</Mess>} */}\r\n                {loadingUpdate && <Load />}\r\n\r\n                {\r\n                    loading ? <Load /> :\r\n                        error ? <Mess variant='danger'>{error}</Mess> :\r\n                            (\r\n                                <Form onSubmit={submitHandler} id=\"login_form\">\r\n                                    <Form.Group controlId='name'>\r\n                                        <Form.Label><b>Name</b></Form.Label>\r\n                                        <Form.Control\r\n                                            className=\"form_box\"\r\n                                            type='name'\r\n                                            placeholder='name'\r\n                                            value={name}\r\n                                            onChange={(e) => setName(e.target.value)}\r\n                                        ></Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='email'>\r\n                                        <Form.Label><b>Email Address</b></Form.Label>\r\n                                        <Form.Control\r\n                                            className=\"form_box\"\r\n                                            type='email'\r\n                                            placeholder='email'\r\n                                            value={email}\r\n                                            onChange={(e) => setEmail(e.target.value)}\r\n                                        ></Form.Control>\r\n                                    </Form.Group>\r\n\r\n\r\n                                    <Form.Group controlId='isAdmin'>\r\n                                        <Form.Check\r\n                                            type='checkbox'\r\n                                            label=\"Is Admin\"\r\n                                            checked={isadmin}\r\n                                            onChange={(e) => setIsAdmin(e.target.checked)}\r\n                                        ></Form.Check>\r\n                                    </Form.Group>\r\n\r\n\r\n                                    <Button type='submit' variant='success'>\r\n                                        <b style={{ fontSize: \"16px\" }}>Edit</b>\r\n                                    </Button>\r\n                                </Form>\r\n                            )\r\n                }\r\n            </Loginform_Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen;\r\n","D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\ProductsListScreen.js",[],"D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\ProductEditScreen.js",["401","402","403","404"],"\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Button, Form } from 'react-bootstrap';\r\nimport '../index.css';\r\nimport '../STYLES/Loginform.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Detailsproducts, updateProductAction } from '../Actions/product_action.js';\r\nimport Loginform_Container from \"../Components/Loginform_Container.js\";\r\nimport Mess from '../Components/Message.js';\r\nimport Load from '../Components/Loading.js';\r\nimport { PRODUCT_UPDATE_RESET } from '../Constants/Product_constant.js';\r\nimport backend_URL from '../backend_URL.js';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst UserEditScreen = ({ history, match }) => {\r\n\r\n    // Id of the specific USER\r\n    const urlProductID = match.params.id;\r\n    console.log(urlProductID)\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [image, setImage] = useState('');\r\n    const [topic, setTopic] = useState('');\r\n    const [brand, setBrand] = useState('');\r\n    const [catagory, setCatagory] = useState('');\r\n    const [countInStock, setCountInStock] = useState(0);\r\n    const [description, setDescription] = useState('');\r\n    const [imgUploading, setImgUploading] = useState(false);\r\n\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const product_details = useSelector(state => state.product_details);  //product_details -> from the store\r\n    const { loading, error, product } = product_details;\r\n    console.log(product_details)\r\n\r\n\r\n    const product_Update = useSelector(state => state.product_Update);  //product_Update -> from the store\r\n    const { loading: loadingUpdate, error: errorUpdate, product: updatedProduct, success: successUpdate } = product_Update;\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // true\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET });\r\n            history.push('/admin/productsList');\r\n        }\r\n        else {\r\n            if (!product.name || urlProductID !== product._id)           // if the user details is not set\r\n                dispatch(Detailsproducts(urlProductID));\r\n            else {\r\n                setName(product.name);\r\n                setPrice(product.price);\r\n                setImage(product.image);\r\n                setTopic(product.topic);\r\n                setBrand(product.brand);\r\n                setCatagory(product.catagory);\r\n                setCountInStock(product.countInStock);\r\n                setDescription(product.description);\r\n            }\r\n        }\r\n    }, [product, dispatch, urlProductID, history, successUpdate])\r\n\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        // updated obj\r\n        const prod = {\r\n            _id: urlProductID,\r\n            name,\r\n            price,\r\n            image,\r\n            topic,\r\n            brand,\r\n            catagory,\r\n            countInStock,\r\n            description\r\n        }\r\n        dispatch(updateProductAction(prod));\r\n    }\r\n\r\n\r\n\r\n    const fileUploadHandler = async (e) => {\r\n        console.log(\"Image upload Success!\");\r\n        const file = e.target.files[0];\r\n        console.log(\"File : \", file);\r\n        const formData = new FormData();\r\n        formData.append('image', file);           //  add a form field with the given IMAGE and FILE,\r\n        console.log(\"FormData : \", formData);\r\n        setImgUploading(true);\r\n\r\n        try {\r\n            const config = {\r\n                headers: { 'Content-Type': 'multipart/form-data' }\r\n            }\r\n\r\n            const { data } = await axios.post(`${backend_URL}/api/upload`, formData, config);\r\n            console.log(\"DATA : \", `${backend_URL}` + data);\r\n            setImage(`${backend_URL}` + data);\r\n            setImgUploading(false);\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n            setImgUploading(false);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Link to=\"/admin/productsList\" style={{ fontSize: \"1.05rem\", color: \"white\" }}> <i className=\"arrow left\"></i> GO BACK </Link>\r\n\r\n            <Loginform_Container>\r\n                <h1 className=\"cartHead\" style={{ paddingBottom: \"2.1rem\" }} >Edit Product</h1>\r\n\r\n\r\n                {errorUpdate && <Mess variant='danger'>{errorUpdate}</Mess>}\r\n                {loadingUpdate && <Load />}\r\n\r\n                {\r\n                    loading ? <Load /> :\r\n                        error ? <Mess variant='danger'>{error}</Mess> :\r\n                            (\r\n                                <Form onSubmit={submitHandler} id=\"login_form\">\r\n                                    <Form.Group controlId='name'>\r\n                                        <Form.Label><b>Name</b></Form.Label>\r\n                                        <Form.Control\r\n                                            className=\"form_box\"\r\n                                            type='name'\r\n                                            placeholder='name'\r\n                                            value={name}\r\n                                            onChange={(e) => setName(e.target.value)}\r\n                                        ></Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='price'>\r\n                                        <Form.Label><b>Price </b></Form.Label>\r\n                                        <Form.Control\r\n                                            className=\"form_box\"\r\n                                            type='text'\r\n                                            placeholder='price'\r\n                                            value={price}\r\n                                            onChange={(e) => setPrice(e.target.value)}\r\n                                        ></Form.Control>\r\n                                    </Form.Group>\r\n\r\n\r\n                                    {imgUploading && <Load />}\r\n                                    <Form.Group controlId='image'>\r\n                                        <Form.Label><b>Image </b></Form.Label>\r\n                                        <Form.Control\r\n                                            className=\"form_box\"\r\n                                            type='text'\r\n                                            placeholder='enter image Url'\r\n                                            value={image}\r\n                                            // accept=\".png, .jpg, .jpeg\"\r\n                                            onChange={(e) => setImage(e.target.value)}\r\n                                        ></Form.Control>\r\n                                        <Form.File\r\n                                            id=\"image-file\"\r\n                                            label=\"Choose File\"\r\n                                            custom\r\n                                            onChange={fileUploadHandler}\r\n                                        >\r\n                                        </Form.File>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='topic'>\r\n                                        <Form.Label><b>Topic </b></Form.Label>\r\n                                        <Form.Control\r\n                                            className=\"form_box\"\r\n                                            type='text'\r\n                                            placeholder='topic'\r\n                                            value={topic}\r\n                                            onChange={(e) => setTopic(e.target.value)}\r\n                                        ></Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='description'>\r\n                                        <Form.Label><b>description </b></Form.Label>\r\n                                        <Form.Control\r\n                                            className=\"form_box\"\r\n                                            type='text'\r\n                                            placeholder='description'\r\n                                            value={description}\r\n                                            onChange={(e) => setDescription(e.target.value)}\r\n                                        ></Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='brand'>\r\n                                        <Form.Label><b>Brand </b></Form.Label>\r\n                                        <Form.Control\r\n                                            className=\"form_box\"\r\n                                            type='text'\r\n                                            placeholder='brand'\r\n                                            value={brand}\r\n                                            onChange={(e) => setBrand(e.target.value)}\r\n                                        ></Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='catagory'>\r\n                                        <Form.Label><b>Catagory </b></Form.Label>\r\n                                        <Form.Control\r\n                                            className=\"form_box\"\r\n                                            type='text'\r\n                                            placeholder='catagory'\r\n                                            value={catagory}\r\n                                            onChange={(e) => setCatagory(e.target.value)}\r\n                                        ></Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='CountInStock'>\r\n                                        <Form.Label><b>CountInStock </b></Form.Label>\r\n                                        <Form.Control\r\n                                            className=\"form_box\"\r\n                                            type='text'\r\n                                            placeholder='CountInStock'\r\n                                            value={countInStock}\r\n                                            onChange={(e) => setCountInStock(e.target.value)}\r\n                                        ></Form.Control>\r\n                                    </Form.Group>\r\n\r\n\r\n\r\n\r\n\r\n                                    <Button type='submit' variant='success'>\r\n                                        <b style={{ fontSize: \"16px\" }}>Edit</b>\r\n                                    </Button>\r\n                                </Form>\r\n                            )\r\n                }\r\n            </Loginform_Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen;\r\n","D:\\React_Projects\\Ecommerce\\frontend\\src\\Screens\\Orders_ListScreen.jsx",[],{"ruleId":"405","replacedBy":"406"},{"ruleId":"407","replacedBy":"408"},{"ruleId":"405","replacedBy":"409"},{"ruleId":"407","replacedBy":"410"},{"ruleId":"411","severity":1,"message":"412","line":3,"column":10,"nodeType":"413","messageId":"414","endLine":3,"endColumn":14},{"ruleId":"411","severity":1,"message":"415","line":4,"column":20,"nodeType":"413","messageId":"414","endLine":4,"endColumn":25},{"ruleId":"416","severity":1,"message":"417","line":50,"column":33,"nodeType":"418","endLine":50,"endColumn":66},{"ruleId":"411","severity":1,"message":"419","line":2,"column":28,"nodeType":"413","messageId":"414","endLine":2,"endColumn":36},{"ruleId":"411","severity":1,"message":"420","line":9,"column":8,"nodeType":"413","messageId":"414","endLine":9,"endColumn":12},{"ruleId":"411","severity":1,"message":"421","line":10,"column":8,"nodeType":"413","messageId":"414","endLine":10,"endColumn":19},{"ruleId":"411","severity":1,"message":"422","line":35,"column":23,"nodeType":"413","messageId":"414","endLine":35,"endColumn":31},{"ruleId":"423","severity":1,"message":"424","line":35,"column":34,"nodeType":"425","endLine":41,"endColumn":14},{"ruleId":"426","severity":1,"message":"427","line":41,"column":9,"nodeType":"418","endLine":41,"endColumn":30},{"ruleId":"411","severity":1,"message":"415","line":4,"column":20,"nodeType":"413","messageId":"414","endLine":4,"endColumn":25},{"ruleId":"411","severity":1,"message":"428","line":4,"column":27,"nodeType":"413","messageId":"414","endLine":4,"endColumn":36},{"ruleId":"411","severity":1,"message":"429","line":4,"column":38,"nodeType":"413","messageId":"414","endLine":4,"endColumn":42},{"ruleId":"426","severity":1,"message":"427","line":47,"column":9,"nodeType":"418","endLine":47,"endColumn":30},{"ruleId":"430","severity":1,"message":"431","line":50,"column":22,"nodeType":"432","messageId":"433","endLine":50,"endColumn":24},{"ruleId":"411","severity":1,"message":"434","line":10,"column":8,"nodeType":"413","messageId":"414","endLine":10,"endColumn":12},{"ruleId":"411","severity":1,"message":"420","line":11,"column":8,"nodeType":"413","messageId":"414","endLine":11,"endColumn":12},{"ruleId":"426","severity":1,"message":"427","line":38,"column":13,"nodeType":"418","endLine":38,"endColumn":34},{"ruleId":"426","severity":1,"message":"427","line":38,"column":9,"nodeType":"418","endLine":38,"endColumn":30},{"ruleId":"411","severity":1,"message":"435","line":2,"column":17,"nodeType":"413","messageId":"414","endLine":2,"endColumn":26},{"ruleId":"411","severity":1,"message":"420","line":11,"column":8,"nodeType":"413","messageId":"414","endLine":11,"endColumn":12},{"ruleId":"411","severity":1,"message":"436","line":18,"column":11,"nodeType":"413","messageId":"414","endLine":18,"endColumn":19},{"ruleId":"411","severity":1,"message":"437","line":21,"column":13,"nodeType":"413","messageId":"414","endLine":21,"endColumn":28},{"ruleId":"405","replacedBy":"438"},{"ruleId":"407","replacedBy":"439"},{"ruleId":"411","severity":1,"message":"440","line":4,"column":10,"nodeType":"413","messageId":"414","endLine":4,"endColumn":19},{"ruleId":"411","severity":1,"message":"440","line":2,"column":10,"nodeType":"413","messageId":"414","endLine":2,"endColumn":19},{"ruleId":"411","severity":1,"message":"441","line":2,"column":21,"nodeType":"413","messageId":"414","endLine":2,"endColumn":24},{"ruleId":"411","severity":1,"message":"442","line":2,"column":26,"nodeType":"413","messageId":"414","endLine":2,"endColumn":29},{"ruleId":"411","severity":1,"message":"443","line":4,"column":34,"nodeType":"413","messageId":"414","endLine":4,"endColumn":40},{"ruleId":"411","severity":1,"message":"444","line":4,"column":42,"nodeType":"413","messageId":"414","endLine":4,"endColumn":46},{"ruleId":"411","severity":1,"message":"445","line":4,"column":48,"nodeType":"413","messageId":"414","endLine":4,"endColumn":59},{"ruleId":"411","severity":1,"message":"446","line":8,"column":8,"nodeType":"413","messageId":"414","endLine":8,"endColumn":14},{"ruleId":"411","severity":1,"message":"447","line":11,"column":8,"nodeType":"413","messageId":"414","endLine":11,"endColumn":11},{"ruleId":"411","severity":1,"message":"448","line":13,"column":8,"nodeType":"413","messageId":"414","endLine":13,"endColumn":13},{"ruleId":"411","severity":1,"message":"449","line":14,"column":8,"nodeType":"413","messageId":"414","endLine":14,"endColumn":13},{"ruleId":"411","severity":1,"message":"450","line":30,"column":12,"nodeType":"413","messageId":"414","endLine":30,"endColumn":18},{"ruleId":"411","severity":1,"message":"422","line":44,"column":23,"nodeType":"413","messageId":"414","endLine":44,"endColumn":31},{"ruleId":"423","severity":1,"message":"424","line":44,"column":34,"nodeType":"425","endLine":50,"endColumn":14},{"ruleId":"411","severity":1,"message":"451","line":31,"column":12,"nodeType":"413","messageId":"414","endLine":31,"endColumn":19},{"ruleId":"411","severity":1,"message":"419","line":2,"column":28,"nodeType":"413","messageId":"414","endLine":2,"endColumn":36},{"ruleId":"411","severity":1,"message":"420","line":9,"column":8,"nodeType":"413","messageId":"414","endLine":9,"endColumn":12},{"ruleId":"411","severity":1,"message":"421","line":10,"column":8,"nodeType":"413","messageId":"414","endLine":10,"endColumn":19},{"ruleId":"411","severity":1,"message":"415","line":4,"column":20,"nodeType":"413","messageId":"414","endLine":4,"endColumn":25},{"ruleId":"411","severity":1,"message":"452","line":4,"column":58,"nodeType":"413","messageId":"414","endLine":4,"endColumn":66},{"ruleId":"411","severity":1,"message":"453","line":4,"column":68,"nodeType":"413","messageId":"414","endLine":4,"endColumn":82},{"ruleId":"416","severity":1,"message":"417","line":84,"column":37,"nodeType":"418","endLine":84,"endColumn":70},{"ruleId":"426","severity":1,"message":"427","line":41,"column":9,"nodeType":"418","endLine":41,"endColumn":30},{"ruleId":"411","severity":1,"message":"440","line":3,"column":20,"nodeType":"413","messageId":"414","endLine":3,"endColumn":29},{"ruleId":"430","severity":1,"message":"431","line":65,"column":22,"nodeType":"432","messageId":"433","endLine":65,"endColumn":24},{"ruleId":"411","severity":1,"message":"415","line":4,"column":20,"nodeType":"413","messageId":"414","endLine":4,"endColumn":25},{"ruleId":"411","severity":1,"message":"428","line":4,"column":27,"nodeType":"413","messageId":"414","endLine":4,"endColumn":36},{"ruleId":"411","severity":1,"message":"429","line":4,"column":38,"nodeType":"413","messageId":"414","endLine":4,"endColumn":42},{"ruleId":"426","severity":1,"message":"427","line":47,"column":9,"nodeType":"418","endLine":47,"endColumn":30},{"ruleId":"411","severity":1,"message":"434","line":10,"column":8,"nodeType":"413","messageId":"414","endLine":10,"endColumn":12},{"ruleId":"411","severity":1,"message":"420","line":11,"column":8,"nodeType":"413","messageId":"414","endLine":11,"endColumn":12},{"ruleId":"426","severity":1,"message":"427","line":41,"column":13,"nodeType":"418","endLine":41,"endColumn":34},{"ruleId":"426","severity":1,"message":"427","line":38,"column":9,"nodeType":"418","endLine":38,"endColumn":30},{"ruleId":"411","severity":1,"message":"429","line":4,"column":46,"nodeType":"413","messageId":"414","endLine":4,"endColumn":50},{"ruleId":"411","severity":1,"message":"420","line":9,"column":8,"nodeType":"413","messageId":"414","endLine":9,"endColumn":12},{"ruleId":"411","severity":1,"message":"437","line":19,"column":13,"nodeType":"413","messageId":"414","endLine":19,"endColumn":28},{"ruleId":"423","severity":1,"message":"454","line":54,"column":8,"nodeType":"455","endLine":54,"endColumn":26,"suggestions":"456"},{"ruleId":"411","severity":1,"message":"457","line":28,"column":5,"nodeType":"413","messageId":"414","endLine":28,"endColumn":22},{"ruleId":"411","severity":1,"message":"458","line":239,"column":17,"nodeType":"413","messageId":"414","endLine":239,"endColumn":21},{"ruleId":"411","severity":1,"message":"459","line":19,"column":5,"nodeType":"413","messageId":"414","endLine":19,"endColumn":25},{"ruleId":"411","severity":1,"message":"460","line":23,"column":5,"nodeType":"413","messageId":"414","endLine":23,"endColumn":32},{"ruleId":"411","severity":1,"message":"461","line":22,"column":5,"nodeType":"413","messageId":"414","endLine":22,"endColumn":17},{"ruleId":"411","severity":1,"message":"461","line":18,"column":5,"nodeType":"413","messageId":"414","endLine":18,"endColumn":17},{"ruleId":"411","severity":1,"message":"462","line":22,"column":5,"nodeType":"413","messageId":"414","endLine":22,"endColumn":20},{"ruleId":"411","severity":1,"message":"463","line":26,"column":5,"nodeType":"413","messageId":"414","endLine":26,"endColumn":24},{"ruleId":"411","severity":1,"message":"429","line":5,"column":46,"nodeType":"413","messageId":"414","endLine":5,"endColumn":50},{"ruleId":"411","severity":1,"message":"464","line":7,"column":8,"nodeType":"413","messageId":"414","endLine":7,"endColumn":21},{"ruleId":"411","severity":1,"message":"465","line":34,"column":20,"nodeType":"413","messageId":"414","endLine":34,"endColumn":27},{"ruleId":"423","severity":1,"message":"466","line":99,"column":8,"nodeType":"455","endLine":99,"endColumn":63,"suggestions":"467"},{"ruleId":"423","severity":1,"message":"468","line":33,"column":8,"nodeType":"455","endLine":33,"endColumn":46,"suggestions":"469"},{"ruleId":"411","severity":1,"message":"441","line":6,"column":10,"nodeType":"413","messageId":"414","endLine":6,"endColumn":13},{"ruleId":"411","severity":1,"message":"442","line":6,"column":15,"nodeType":"413","messageId":"414","endLine":6,"endColumn":18},{"ruleId":"426","severity":1,"message":"427","line":82,"column":13,"nodeType":"418","endLine":82,"endColumn":34},{"ruleId":"411","severity":1,"message":"441","line":5,"column":10,"nodeType":"413","messageId":"414","endLine":5,"endColumn":13},{"ruleId":"411","severity":1,"message":"442","line":5,"column":15,"nodeType":"413","messageId":"414","endLine":5,"endColumn":18},{"ruleId":"411","severity":1,"message":"470","line":45,"column":66,"nodeType":"413","messageId":"414","endLine":45,"endColumn":80},{"ruleId":"426","severity":1,"message":"427","line":127,"column":13,"nodeType":"418","endLine":127,"endColumn":34},"no-native-reassign",["471"],"no-negated-in-lhs",["472"],["471"],["472"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Image' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'Load' is defined but never used.","'backend_URL' is defined but never used.","'settings' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'settings' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ObjectExpression","react/jsx-pascal-case","Imported JSX component Loginform_Container must be in PascalCase or SCREAMING_SNAKE_CASE","'ListGroup' is defined but never used.","'Card' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Mess' is defined but never used.","'useEffect' is defined but never used.","'dispatch' is assigned a value but never used.","'shippingAddress' is assigned a value but never used.",["471"],["472"],"'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'Slider' is defined but never used.","'pic' is defined but never used.","'gifts' is defined but never used.","'party' is defined but never used.","'slider' is assigned a value but never used.","'activee' is assigned a value but never used.","'Dropdown' is defined but never used.","'DropdownButton' is defined but never used.","React Hook useEffect has a missing dependency: 'Order._id'. Either include it or remove the dependency array.","ArrayExpression",["473"],"'USER_UPDATE_RESET' is defined but never used.","'data' is assigned a value but never used.","'PRODUCT_UPDATE_RESET' is defined but never used.","'PRODUCT_CREATE_REVIEW_RESET' is defined but never used.","'ORDERS_RESET' is defined but never used.","'ORDER_PAY_RESET' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.","'CheckoutSteps' is defined but never used.","'success' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'UserInfo' and 'history'. Either include them or remove the dependency array.",["474"],"React Hook useEffect has a missing dependency: 'UserInfo'. Either include it or remove the dependency array.",["475"],"'updatedProduct' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"476","fix":"477"},{"desc":"478","fix":"479"},{"desc":"480","fix":"481"},"Update the dependencies array to be: [Order._id, history, success]",{"range":"482","text":"483"},"Update the dependencies array to be: [dispatch, ORDER_ID, successPay, successDeliver, Order, UserInfo, history]",{"range":"484","text":"485"},"Update the dependencies array to be: [UserInfo, dispatch, history, seccessDeleteUser]",{"range":"486","text":"487"},[1688,1706],"[Order._id, history, success]",[3534,3589],"[dispatch, ORDER_ID, successPay, successDeliver, Order, UserInfo, history]",[1062,1100],"[UserInfo, dispatch, history, seccessDeleteUser]"]