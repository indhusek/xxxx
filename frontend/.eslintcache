[{"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\index.js":"1","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\App.js":"2","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\reportWebVitals.js":"3","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Footer.js":"4","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Header.js":"5","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\Homescreen.js":"6","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\products.js":"7","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Prod.js":"8","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Rating.js":"9","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\Productscreen.js":"10","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\backend_URL.js":"11","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\store.js":"12","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Reducers\\Product_reducer.js":"13","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Constants\\Product_constant.js":"14","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Actions\\product_action.js":"15","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Message.js":"16","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Loading.js":"17","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\Cartscreen.js":"18","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Reducers\\Cart_reducer.js":"19","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Constants\\Cart_constant.js":"20","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Actions\\Cart_action.js":"21","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\Introscreen.js":"22","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Reducers\\User_reducer.js":"23","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Constants\\User_constant.js":"24","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\LoginScreen.js":"25","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Actions\\User_action.js":"26","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Loginform_Container.js":"27","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\RegisterScreen.js":"28","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\ProfileScreen.js":"29","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\ShippingScreen.js":"30","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\CheckoutSteps.js":"31","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\PaymentScreen.js":"32","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\PlaceOrderScreen.js":"33"},{"size":715,"mtime":1616531793444,"results":"34","hashOfConfig":"35"},{"size":1854,"mtime":1617285470218,"results":"36","hashOfConfig":"35"},{"size":362,"mtime":499162500000,"results":"37","hashOfConfig":"35"},{"size":440,"mtime":1611411991764,"results":"38","hashOfConfig":"35"},{"size":2769,"mtime":1616936893994,"results":"39","hashOfConfig":"35"},{"size":2927,"mtime":1616919975444,"results":"40","hashOfConfig":"35"},{"size":2490,"mtime":1613826245217,"results":"41","hashOfConfig":"35"},{"size":1779,"mtime":1616847122325,"results":"42","hashOfConfig":"35"},{"size":2004,"mtime":1616846788902,"results":"43","hashOfConfig":"35"},{"size":6298,"mtime":1617288713918,"results":"44","hashOfConfig":"35"},{"size":80,"mtime":1613887620885,"results":"45","hashOfConfig":"35"},{"size":1661,"mtime":1617266326312,"results":"46","hashOfConfig":"35"},{"size":1391,"mtime":1616092221784,"results":"47","hashOfConfig":"35"},{"size":380,"mtime":1613809861086,"results":"48","hashOfConfig":"35"},{"size":1702,"mtime":1613927677108,"results":"49","hashOfConfig":"35"},{"size":299,"mtime":1613800954645,"results":"50","hashOfConfig":"35"},{"size":402,"mtime":1613993721894,"results":"51","hashOfConfig":"35"},{"size":6417,"mtime":1616941385888,"results":"52","hashOfConfig":"35"},{"size":1854,"mtime":1617266852660,"results":"53","hashOfConfig":"35"},{"size":242,"mtime":1617262445945,"results":"54","hashOfConfig":"35"},{"size":1833,"mtime":1617266880987,"results":"55","hashOfConfig":"35"},{"size":11528,"mtime":1617203285236,"results":"56","hashOfConfig":"35"},{"size":2294,"mtime":1617204188502,"results":"57","hashOfConfig":"35"},{"size":876,"mtime":1616504435563,"results":"58","hashOfConfig":"35"},{"size":3105,"mtime":1616943074539,"results":"59","hashOfConfig":"35"},{"size":4438,"mtime":1616510690229,"results":"60","hashOfConfig":"35"},{"size":519,"mtime":1616400492822,"results":"61","hashOfConfig":"35"},{"size":4289,"mtime":1616943588940,"results":"62","hashOfConfig":"35"},{"size":5706,"mtime":1617023995514,"results":"63","hashOfConfig":"35"},{"size":3927,"mtime":1617205573239,"results":"64","hashOfConfig":"35"},{"size":1772,"mtime":1617207771035,"results":"65","hashOfConfig":"35"},{"size":2404,"mtime":1617282291167,"results":"66","hashOfConfig":"35"},{"size":7530,"mtime":1617350624436,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1e4carg",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"70"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\index.js",[],["144","145"],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\App.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\reportWebVitals.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Footer.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Header.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\Homescreen.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\products.js",[],["146","147"],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Prod.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Rating.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\Productscreen.js",["148","149","150"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap';\r\nimport Rating from '../Components/Rating.js';\r\nimport '../index.css';\r\nimport \"../STYLES/product_style.css\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Detailsproducts } from '../Actions/product_action.js';\r\nimport Mess from '../Components/Message.js';\r\nimport Load from '../Components/Loading.js';\r\n\r\n\r\n\r\nconst Productscreen = ({ history, match }) => {\r\n\r\n    // < ------  Shopping Cart ------>\r\n    const [qty, setqty] = useState(1);\r\n\r\n    // < ------  Fetcing data from the Backend using REDUX  ------>\r\n    const dispatch = useDispatch();\r\n\r\n    const product_details = useSelector(state => state.product_details);\r\n    const { loading, error, product } = product_details;\r\n\r\n    useEffect(() => {\r\n        dispatch(Detailsproducts(match.params.id));\r\n    }, [dispatch, match])\r\n\r\n    // const product = [];  \r\n    const addToCart_Handler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* { product.name} */}\r\n            <section className=\"Button\">\r\n                <a className=\"Button-btn\" href=\"/home\"> Back </a>\r\n            </section>\r\n\r\n\r\n            {loading ? < Load /> :\r\n                error ? < Mess variant=\"danger\" > {error}</Mess> :\r\n                    product ?\r\n                        (<Row>\r\n                            <Col md={5} id=\"proimg\">\r\n                                <img src={product.image} fluid />\r\n                            </Col>\r\n\r\n                            <Col md={4}>\r\n                                <ListGroup variant=\"flush\" >\r\n                                    <ListGroup.Item  ><h3 id=\"prohead\"> {product.name} </h3></ListGroup.Item>\r\n\r\n                                    <ListGroup.Item className='listy1'>\r\n                                        <Rating\r\n                                            value={product.rating}\r\n                                            text={` ${product.numReviews} reviews`}\r\n                                            color='crimson'\r\n                                        />\r\n                                    </ListGroup.Item >\r\n\r\n                                    <ListGroup.Item className='listy1' style={{ fontSize: \"1.8rem\" }}><b> Price : </b>₹{product.price}  </ListGroup.Item>\r\n                                    <ListGroup.Item className='listy1'><b> Description :  {' '}</b>{product.description}  </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col>\r\n\r\n                            <Col md={3} >\r\n                                <Card>\r\n                                    <ListGroup variant=\"flush\" >\r\n                                        <ListGroup.Item className=\"boxsm\" style={{ backgroundColor: \"#edf2f4\", padding: \".8rem 2rem\", color: 'black' }} >\r\n                                            <Row>\r\n                                                <Col> <b> PRICE -:</b> </Col>\r\n                                                <Col><strong>₹{product.price}</strong></Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item className=\"boxsm\" style={{ backgroundColor: \"#edf2f4\", padding: \".8rem 2rem\", color: 'black' }} >\r\n                                            <Row>\r\n                                                <Col> <b>STATUS -: </b> </Col>\r\n                                                <Col> {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"} </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n\r\n                                        {/* QUantity of the product */}\r\n                                        {product.countInStock > 0 && (\r\n                                            <ListGroup.Item className=\"boxsm\" style={{ backgroundColor: \"#edf2f4\", padding: \".8rem 2rem \", color: 'black' }} >\r\n                                                <Row>\r\n                                                    <Col><strong>Quantity -: </strong> </Col>\r\n                                                    <Col>\r\n                                                        <Form.Control as='select' value={qty} onChange={(e) => { setqty(e.target.value) }}>\r\n                                                            {[...Array(product.countInStock).keys()].map((x) => (\r\n                                                                <option key={x + 1} value={x + 1} >\r\n                                                                    {x + 1}\r\n                                                                </option>\r\n                                                            ))}\r\n                                                        </Form.Control>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        )}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Button\r\n                                                onClick={addToCart_Handler}\r\n                                                variant=\"danger\"\r\n                                                className='btn-block '\r\n                                                type='button'\r\n                                                disabled={product.countInStock === 0}\r\n                                            >\r\n                                                <strong><i class=\"fas fa-cart-arrow-down\"></i> ADD TO CART</strong>\r\n                                            </Button>\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>)\r\n\r\n                        : <h3>Cant fetch product obj</h3>\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Productscreen;\r\n","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\backend_URL.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\store.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Reducers\\Product_reducer.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Constants\\Product_constant.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Actions\\product_action.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Message.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Loading.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\Cartscreen.js",["151","152","153"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addToCart, removefromCart } from '../Actions/Cart_action.js';\r\nimport '../STYLES/cart_style.css';\r\nimport Mess from '../Components/Message.js';\r\nimport Load from '../Components/Loading.js';\r\nimport backend_URL from '../backend_URL.js';\r\n\r\nconst Cartscreen = ({ match, location, history }) => {\r\n\r\n    const productID = match.params.id;\r\n    const qTY = location.search;\r\n    console.log(qTY);  // ?qTY=4               \r\n\r\n    //  ?qTY=4  is stored in an array so a[0] = ?qty  and a[1] = 4.\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const CART = useSelector(state => state.CART);\r\n    // console.log(\"cart :: \", CART);\r\n    const { cartItems } = CART;\r\n    console.log(\"{ cartItems } from cartscreen : \", cartItems); // Array of OBJECTS -- [{}, {}, {}] present in the CART\r\n\r\n    useEffect(() => {\r\n        if (productID)\r\n            dispatch(addToCart(productID, qty));\r\n    }, [qty, productID, dispatch]);\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        console.log('remove')\r\n        dispatch(removefromCart(id));\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        // console.log(\"ccheckout\")\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col md={8} sm={5} >\r\n                    <div class=\"p-2 \">\r\n                        <Link to=\"/home\"> <i className=\"arrow left\"></i></Link>\r\n                        <span>  <h1 id=\"prohead\">Shopping Cart</h1></span>\r\n                    </div>\r\n\r\n\r\n                    {cartItems.length === 0 ?\r\n\r\n                        (<Mess>Your Cart id Empty <Link to=\"/home\">Go Back</Link></Mess>) :\r\n\r\n                        (<ListGroup variant=\"flush\" className=\"procart\">\r\n                            {/* item  ----> each product */}\r\n                            {cartItems.map(item => (\r\n                                <ListGroup.Item key={item.product} className=\"boxsm\">\r\n                                    <Row >\r\n                                        <Col md={2}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded />\r\n                                        </Col>\r\n\r\n                                        <Col md={3}>\r\n                                            {/* {item.product} ------->  is the ID */}\r\n                                            <Link to={`/product/${item.product}`} id=\"link_css\" style={{ fontSize: \"1.2rem\" }} ><b>{item.name}</b></Link>\r\n                                        </Col>\r\n\r\n                                        <Col md={2} id=\"link_css\">₹{item.price}</Col>\r\n\r\n                                        <Col md={2}>\r\n                                            <Form.Control\r\n                                                className=\"cartitem_num\"\r\n                                                as='select'\r\n                                                value={item.QTY} // update in the redux devtools \r\n                                                onChange={(e) =>\r\n                                                    dispatch(\r\n                                                        addToCart(item.product, Number(e.target.value))\r\n                                                    )}\r\n                                            >\r\n                                                {[...Array(item.countInStock).keys()].map((x) => (\r\n                                                    <option key={x + 1} value={x + 1}>\r\n                                                        {x + 1}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Form.Control>\r\n                                        </Col>\r\n\r\n                                        <Col md={2}>\r\n                                            <Button\r\n                                                type='button'\r\n                                                variant='light'\r\n                                                onClick={() => removeFromCartHandler(item.product)}\r\n                                            >\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                        )}\r\n                </Col>\r\n\r\n\r\n                <Col md={4} sm={7} style={{ padding: '.5rem' }} >\r\n                    <Card>\r\n                        <ListGroup variant='flush' >\r\n                            <ListGroup.Item className=\"cartbox_rgt\" >\r\n                                <h2>\r\n                                    <b>  Subtotal ({cartItems.reduce((acc, item) => acc + item.QTY, 0)}) items</b>\r\n                                </h2>\r\n                                <p> ₹ {cartItems\r\n                                    .reduce((acc, item) => acc + item.QTY * item.price, 0)\r\n                                    .toFixed(2)}  {/* fixed to 2 decimal places */}</p>\r\n\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    variant='success'\r\n                                    className='btn-block'\r\n                                    disabled={cartItems.length === 0}\r\n                                    onClick={checkoutHandler}\r\n                                >\r\n                                    <b> PROCEED TO CHECKOUT</b>\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cartscreen;\r\n\r\n\r\n\r\n\r\n// Syntax :    array.reduce(function(total, currentValue, currentIndex, arr), initialValue)","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Reducers\\Cart_reducer.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Constants\\Cart_constant.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Actions\\Cart_action.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\Introscreen.js",["154","155"],"import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col, Container, Carousel, } from \"react-bootstrap\";\r\nimport \"../STYLES/intro_style.css\";\r\n\r\n// Import css files for Carousal\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Slider from \"react-slick\";\r\n\r\n// Images\r\nimport pic from \"./choco.jpg\";\r\nimport cday from \"../Pics/img2.jfif\";\r\nimport gifts from \"../Pics/gifts.jfif\";\r\nimport party from \"../Pics/party.jfif\";\r\n\r\n\r\n\r\nconst Introscreen = () => {\r\n\r\n    var settings;\r\n    const [slider, setslider] = useState(settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 3,\r\n        slidesToScroll: 1,\r\n    })\r\n\r\n    var width = window.innerWidth;\r\n\r\n    useEffect(() => {\r\n        console.log(width);\r\n        if (width < 780) {     // <----- Responsive for VIEWPORT\r\n            console.log(\"if cond working\");\r\n            setslider(settings = {\r\n                dots: true,\r\n                infinite: true,\r\n                speed: 500,\r\n                slidesToShow: 2,\r\n                slidesToScroll: 1,\r\n            })\r\n        }\r\n    }, [width]);\r\n\r\n    return (\r\n        <div className=\"main-cls\">\r\n            {/*   <Container >   border around\r\n            <Link className=\"btn btn-danger my-3\" to=\"/home\" >  GO BACK  </Link>\r\n            {{<div className=\"bubble\" >\r\n                    <img src={bubble} />\r\n                    <img src={bubble} />\r\n                    <img src={bubble} />\r\n                    <img src={bubble} />\r\n                    <img src={bubble} />\r\n                    <img src={bubble} />\r\n                    <img src={bubble} />\r\n                </div>}}\r\n            </Container> */}\r\n\r\n            {/*  <Link className=\"btn btn-danger my-3\" to=\"/home\">\r\n                GO BACK{\" \"}\r\n            </Link> */}\r\n\r\n            {/* -----------  CAROUSEL  --------- */}\r\n            <Carousel fade>\r\n                <Carousel.Item className=\"mycarou\">\r\n                    <div className=\"overlay-image\">\r\n                        {\" \"}\r\n                        {/* hazy in the background using OPACITY */}\r\n                        <img\r\n                            className=\"d-block w-100\"\r\n                            src=\"https://images.unsplash.com/photo-1526081715791-7c538f86060e?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NHx8Y2hvY29sYXRlJTIwZ2lmdCUyMGJveHxlbnwwfHwwfA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60\"\r\n                            alt=\"Third slide\"\r\n                        />\r\n                    </div>\r\n                    <Carousel.Caption className=\"carou_center\">\r\n                        <h3 className=\"title\">Chocolatey</h3>\r\n                        <p className=\"subtitle\">\r\n                            ------- Made with Love Unique Chocolates for gourmet -------\r\n                    </p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n\r\n                <Carousel.Item className=\"mycarou\">\r\n                    <div className=\"overlay-image\">\r\n                        <img className=\"d-block w-100\" src={cday} alt=\"Second slide\" />\r\n                    </div>\r\n                    <Carousel.Caption className=\"carou_center\">\r\n                        <h3 className=\"subtitle\">DARK CHOCOLATES</h3>\r\n                        <p className=\"subtitle\">\r\n                            ------- A healthy alternatives for Chocolate Lovers -------{\" \"}\r\n                        </p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n\r\n                <Carousel.Item className=\"mycarou\">\r\n                    <div className=\"overlay-image\">{\" \"}\r\n                        <img\r\n                            className=\"d-block w-100 \"\r\n                            src=\"https://images.unsplash.com/photo-1526823127573-0fda76b6c24f?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxzZWFyY2h8MjR8fGNob2NvbGF0ZXxlbnwwfHwwfA%3D%3D&auto=format&fit=crop&w=600&q=60\"\r\n                            alt=\"First slide\"\r\n                        />\r\n                    </div>\r\n\r\n                    <Carousel.Caption className=\"carou_center\">\r\n                        <h3 className=\"subtitle\">DARK CHOCOLATES</h3>\r\n                        <p className=\"subtitle\">\r\n                            ------- A healthy alternatives for Chocolate Lovers -------{\" \"}\r\n                        </p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n            </Carousel>\r\n\r\n\r\n            <Container className=\"container_self\">\r\n                <div className=\"minihead\">\r\n                    <h2 className=\"subheading\">\r\n                        {\" \"}\r\n                        <span> Free Shipping</span>{\" \"}\r\n                    </h2>\r\n                </div>\r\n\r\n                {/* -----------  CARD - SLIDDER   --------- */}\r\n                <div>\r\n                    <Slider {...slider}>\r\n                        <div className=\"minislider\">\r\n                            <img\r\n                                className=\"d-block w-100 htset \"\r\n                                src=\"http://design.dev.drcsystems.ooo:8084/themeforest/chocolate/assets/images/offer-img/img10.jpg\"\r\n                                alt=\"First slide\"\r\n                            />\r\n                            <div className=\"minisli_box\">\r\n                                <h4>Birthday Day</h4>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"minislider\">\r\n                            <img className=\"d-block w-100 htset\" src={pic} alt=\"First slide\" />\r\n                            <div className=\"minisli_box\">\r\n                                <h4>Valentine's Day</h4>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"minislider\">\r\n                            <img\r\n                                className=\"d-block w-100 htset\"\r\n                                src={gifts}\r\n                                alt=\"First slide\"\r\n                            />\r\n                            <div className=\"minisli_box\">\r\n                                <h4>Gifts</h4>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"minislider\">\r\n                            <img className=\"d-block w-100 htset\" src={party} alt=\"First slide\" />\r\n                            <div className=\"minisli_box\">\r\n                                <h4>Party</h4>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"minislider\">\r\n                            <img\r\n                                className=\"d-block w-100 htset\"\r\n                                src=\"https://images.unsplash.com/photo-1548741487-18d363dc4469?ixid=MXwxMjA3fDB8MHxzZWFyY2h8Mjd8fGNob2NvbGF0ZXxlbnwwfHwwfA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60\"\r\n                                alt=\"First slide\"\r\n                            />\r\n                            <div className=\"minisli_box\">\r\n                                <h4>chocolatey</h4>\r\n                            </div>\r\n                        </div>\r\n                    </Slider>\r\n                </div>\r\n            </Container>\r\n\r\n\r\n            <section id=\"parallax\" className=\"parallax\">\r\n                <div className=\"container\" data-aos=\"zoom-in\">\r\n                    <div className=\"text-center\">\r\n                        <h2>Valentines Day</h2>\r\n                        <p>A brand new Valentines Day's Collection on your way ....</p>\r\n                        <a className=\"parallax-btn\" href=\"/home\">\r\n                            SHOP NOW\r\n                         </a>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n\r\n            <Container>\r\n                {/* <div class=\"d-flex justify-content-around\"> */}\r\n                <Row>\r\n                    <Col md={8} >\r\n                        <img\r\n                            src=\"http://crems.like-themes.com/wp-content/uploads/2020/07/section-about-bg.png\"\r\n                            alt=\"First slide\"\r\n                        />\r\n                    </Col>\r\n\r\n                    <Col md={4} >\r\n                        <div id=\"item\">\r\n                            <h5 className=\"itemhead\"><i class=\"fab fa-pagelines icoo\"></i> Natural Organic Products</h5>\r\n                            <p className=\"item_subhead\">\r\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div id=\"item\">\r\n                            <h5 className=\"itemhead\"> <i class=\"fas fa-gift icoo\"></i>Designing</h5>\r\n                            <p className=\"item_subhead\">\r\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div id=\"item\">\r\n                            <h5 className=\"itemhead\"><i class=\"fas fa-candy-cane icoo\"></i>Best Quality Cocoa</h5>\r\n                            <p className=\"item_subhead\">\r\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit.Duis aute irure dolor in reprehenderit\r\n                            </p>\r\n                        </div>\r\n\r\n                    </Col>\r\n                </Row>\r\n                {/* </div> */}\r\n            </Container>\r\n\r\n\r\n            <Container className=\"container_self\">\r\n                <div className=\"minihead\">\r\n                    <h2 className=\"subheading\">\r\n                        {\" \"}\r\n                        <span>Trending Chocolates</span>{\" \"}\r\n                    </h2>\r\n                </div>\r\n                <Row className=\"HOVER\" >\r\n                    <Col md={3} sm={6} xs={6} className=\"choco\" >\r\n                        <img className=\"choco_img\" src=\"http://crems.like-themes.com/wp-content/uploads/2019/06/shop-04-800x800.png\" alt=\"lost\" />\r\n                        <div className=\"choco_name\" > <h4>Choco Vanilla Truffle</h4></div>\r\n                    </Col>\r\n\r\n                    <Col md={3} sm={6} xs={6} className=\"choco\" >\r\n                        <img className=\"choco_img\" src=\"http://crems.like-themes.com/wp-content/uploads/2019/06/candies_prod.png\" alt=\"lost\" />\r\n                        <div className=\"choco_name\" > <h4>Ferrero Rocher</h4></div>\r\n                    </Col>\r\n\r\n                    <Col md={3} sm={6} xs={6} className=\"choco\" >\r\n                        <img className=\"choco_img\" src=\"http://crems.like-themes.com/wp-content/uploads/2019/06/shop-05-768x768.png\" alt=\"lost\" />\r\n                        <div className=\"choco_name\" > <h4>Almond Dark Chocolate</h4></div>\r\n                    </Col>\r\n\r\n                    <Col md={3} sm={6} xs={6} className=\"choco\" >\r\n                        <img className=\"choco_img\" src=\"http://crems.like-themes.com/wp-content/uploads/2019/06/choco_prod.png\" alt=\"lost\" />\r\n                        <div className=\"choco_name\" > <h4>Dark Chocolate</h4></div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <section className=\"my-3 Button\" style={{ marginLeft: \"3rem\" }}>\r\n                        <a className=\"Button-btn\" href=\"/home\"> SHOP NOW </a>\r\n                    </section>\r\n                </Row>\r\n\r\n            </Container>\r\n\r\n\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default Introscreen;\r\n","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Reducers\\User_reducer.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Constants\\User_constant.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\LoginScreen.js",["156"],"\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Button, Form } from 'react-bootstrap';\r\nimport '../index.css';\r\nimport '../STYLES/Loginform.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LogIN } from '../Actions/User_action.js';\r\nimport Loginform_Container from \"../Components/Loginform_Container.js\";\r\nimport Mess from '../Components/Message.js';\r\nimport Load from '../Components/Loading.js';\r\n\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/home';// email ( returns the querystring part of a URL)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const user_Login = useSelector(state => state.user_Login);  //user_Login -> from the store\r\n    const { loading, error, UserInfo } = user_Login;\r\n\r\n\r\n    useEffect(() => {\r\n        if (UserInfo)\r\n            history.push(redirect)\r\n    }, [history, UserInfo, redirect])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault() //It'll NOT SUBMIT unless dispatch() calls ACTION & PW,EMAIL are get verified\r\n        dispatch(LogIN(email, password)) //DISPATCH LOGIN\r\n    }\r\n\r\n\r\n    return (\r\n        <Loginform_Container>\r\n            <h1 className=\"loginhead\"><b>Sign In</b></h1>\r\n\r\n            {error && <Mess variant='danger'>{error}</Mess>}\r\n            {loading && <Load />}\r\n\r\n            <Form onSubmit={submitHandler} id=\"login_form\" >\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label><b>Email Address</b></Form.Label>\r\n                    <Form.Control\r\n                        className=\"form_box\"\r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label><b>Password</b></Form.Label>\r\n                    <Form.Control\r\n                        className=\"form_box\"\r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='danger'>\r\n                    <b style={{ fontSize: \"18px\" }}>Sign In</b>\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col style={{ color: \"rgba(255, 255, 255, 0.959)\" }}>\r\n                    New Customer?{' '}\r\n                    <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Loginform_Container>\r\n    )\r\n}\r\n\r\nexport default LoginScreen;\r\n","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Actions\\User_action.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\Loginform_Container.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\RegisterScreen.js",["157","158","159","160"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap';\r\nimport '../index.css';\r\nimport '../STYLES/Loginform.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Register } from '../Actions/User_action.js';\r\nimport Loginform_Container from \"../Components/Loginform_Container.js\";\r\nimport Mess from '../Components/Message.js';\r\nimport Load from '../Components/Loading.js';\r\n\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmpass, setConfirmpass] = useState('');\r\n    const [msg, setMsg] = useState(null);\r\n\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/home';// email ( returns the querystring part of a URL)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const user_Register = useSelector(state => state.user_Register);  //user_Register -> from the store\r\n    const { loading, error, UserInfo } = user_Register;\r\n\r\n\r\n    useEffect(() => {\r\n        if (UserInfo)\r\n            history.push(redirect)\r\n    }, [history, UserInfo, redirect])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (password !== confirmpass)\r\n            setMsg(\"Password doesn't match!\");\r\n        else\r\n            dispatch(Register(name, email, password));\r\n    }\r\n\r\n\r\n    return (\r\n        <Loginform_Container>\r\n            <h1 className=\"loginhead\" >Sign Up</h1>\r\n\r\n            {msg && <Mess variant='danger'>{msg}</Mess>}\r\n            {error && <Mess variant='danger'>{error}</Mess>}\r\n            {loading && <Load />}\r\n\r\n\r\n            <Form onSubmit={submitHandler} id=\"login_form\">\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label><b>Name</b></Form.Label>\r\n                    <Form.Control\r\n                        className=\"form_box\"\r\n                        type='name'\r\n                        placeholder='name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label><b>Email Address</b></Form.Label>\r\n                    <Form.Control\r\n                        className=\"form_box\"\r\n                        type='email'\r\n                        placeholder='email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label><b>Password</b></Form.Label>\r\n                    <Form.Control\r\n                        className=\"form_box\"\r\n                        type='password'\r\n                        placeholder='password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmpassword'>\r\n                    <Form.Label><b>Confirm Password</b></Form.Label>\r\n                    <Form.Control\r\n                        className=\"form_box\"\r\n                        type='password'\r\n                        placeholder='confirm password'\r\n                        value={confirmpass}\r\n                        onChange={(e) => setConfirmpass(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='danger'>\r\n                    <b style={{ fontSize: \"18px\" }}>Register</b>\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col style={{ color: \"rgba(255, 255, 255, 0.959)\" }}>\r\n                    Have an Account ?{' '}\r\n                    <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Register\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Loginform_Container>\r\n    )\r\n}\r\n\r\n\r\nexport default LoginScreen;\r\n","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\ProfileScreen.js",["161"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Row, Col, Container, Button, Form } from 'react-bootstrap';\r\nimport '../index.css';\r\nimport '../STYLES/Loginform.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getUserDetails, UserUpdateProfile } from '../Actions/User_action.js';\r\nimport Mess from '../Components/Message.js';\r\nimport Load from '../Components/Loading.js';\r\n\r\n\r\nconst LoginScreen = ({ history }) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmpass, setConfirmpass] = useState('');\r\n    const [msg, setMsg] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const user_Details = useSelector(state => state.user_Details);\r\n    const { loading, error, USER } = user_Details;\r\n\r\n    const user_Login = useSelector(state => state.user_Login); //user_Login -> from the store\r\n    const { UserInfo } = user_Login;\r\n\r\n    const user_UpdateProfileDetails = useSelector(state => state.user_UpdateProfileDetails);\r\n    const { success } = user_UpdateProfileDetails;\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!UserInfo)\r\n            history.push('/login');\r\n        else {\r\n            if (!USER.name)\r\n                dispatch(getUserDetails('profile'));\r\n            else {\r\n                console.log(USER.name)\r\n                setName(USER.name);\r\n                setEmail(USER.email);\r\n            }\r\n        }\r\n    }, [dispatch, history, UserInfo, USER]) //useEffect will be fired off when there is any change in these attributes.\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (password != confirmpass)\r\n            setMsg(\"Password doesn't match!\");\r\n        else {\r\n            //DISPATCH Updated PROFILE\r\n            dispatch(UserUpdateProfile({ id: USER._id, name, email, password }))\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={5} >\r\n                <Container>\r\n                    <Row className=\"justify-content-md-center\" >\r\n                        <Col md={6} xs={12} >\r\n                            {/* <Loginform_Container> */}\r\n                            <h2 className=\"loginhead\" >PROFILE</h2>\r\n\r\n                            {msg && <Mess variant='danger'>{msg}</Mess>}\r\n                            {error && <Mess variant='danger'>{error}</Mess>}\r\n                            {success && <Mess variant='success'>Profile Updated</Mess>}\r\n                            {loading && <Load />}\r\n\r\n\r\n                            <Form onSubmit={submitHandler} id=\"login_form\">\r\n                                <Form.Group controlId='name'>\r\n                                    <Form.Label><b>Name</b></Form.Label>\r\n                                    <Form.Control\r\n                                        className=\"form_box\"\r\n                                        type='name'\r\n                                        placeholder='Enter name'\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='email'>\r\n                                    <Form.Label><b>Email Address</b></Form.Label>\r\n                                    <Form.Control\r\n                                        className=\"form_box\"\r\n                                        type='email'\r\n                                        placeholder='Enter email'\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='password'>\r\n                                    <Form.Label><b>Password</b></Form.Label>\r\n                                    <Form.Control\r\n                                        className=\"form_box\"\r\n                                        type='password'\r\n                                        placeholder='Enter password'\r\n                                        value={password}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='confirmpassword'>\r\n                                    <Form.Label><b>Confirm Password</b></Form.Label>\r\n                                    <Form.Control\r\n                                        className=\"form_box\"\r\n                                        type='password'\r\n                                        placeholder='confirm password'\r\n                                        value={confirmpass}\r\n                                        onChange={(e) => setConfirmpass(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Button type='submit' variant='warning'>\r\n                                    <b style={{ fontSize: \"18px\" }}>Update</b>\r\n                                </Button>\r\n                            </Form>\r\n                            {/* </Loginform_Container> */}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Col>\r\n\r\n            <Col md={7} >\r\n                <h2>My Orders</h2>\r\n            </Col>\r\n        </Row>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default LoginScreen;\r\n","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\ShippingScreen.js",["162","163","164"],"\r\nimport React, { useState } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport '../index.css';\r\nimport '../STYLES/Loginform.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SaveShippingAddress } from '../Actions/Cart_action.js';\r\nimport Loginform_Container from \"../Components/Loginform_Container.js\";\r\nimport CheckoutSteps from \"../Components/CheckoutSteps.js\";\r\nimport Mess from '../Components/Message.js';\r\nimport Load from '../Components/Loading.js';\r\n\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n\r\n    const CART = useSelector(state => state.CART);\r\n    const { shippingAddress } = CART;\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address);\r\n    const [city, setCity] = useState(shippingAddress.city);\r\n    const [postalcode, setPostalCode] = useState(shippingAddress.postalcode);\r\n    const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"submit\");\r\n        dispatch(SaveShippingAddress({ address, city, postalcode, country }));\r\n        history.push('/payment');   // redirect to payment page\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Loginform_Container>\r\n                <CheckoutSteps step1 step2 />\r\n                <h1 className=\"loginhead\" >Shipping</h1>\r\n\r\n                {/*  {msg && <Mess variant='danger'>{msg}</Mess>}\r\n                {error && <Mess variant='danger'>{error}</Mess>}\r\n                {loading && <Load />} */}\r\n\r\n\r\n                <Form onSubmit={submitHandler} id=\"login_form\">\r\n                    <Form.Group controlId='address'>\r\n                        <Form.Label><b>Address</b></Form.Label>\r\n                        <Form.Control\r\n                            className=\"form_box\"\r\n                            type='name'\r\n                            placeholder='address'\r\n                            value={address}\r\n                            onChange={(e) => setAddress(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='city'>\r\n                        <Form.Label><b>City</b></Form.Label>\r\n                        <Form.Control\r\n                            className=\"form_box\"\r\n                            type='city'\r\n                            placeholder='city'\r\n                            value={city}\r\n                            onChange={(e) => setCity(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='postalcode'>\r\n                        <Form.Label><b>Postal Code</b></Form.Label>\r\n                        <Form.Control\r\n                            className=\"form_box\"\r\n                            type='postalcode'\r\n                            placeholder='postalcode'\r\n                            value={postalcode}\r\n                            onChange={(e) => setPostalCode(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='country'>\r\n                        <Form.Label><b>Country</b></Form.Label>\r\n                        <Form.Control\r\n                            className=\"form_box\"\r\n                            type='text'\r\n                            placeholder='country'\r\n                            value={country}\r\n                            onChange={(e) => setCountry(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='success'>\r\n                        <b style={{ fontSize: \"18px\" }}>Continue</b>\r\n                    </Button>\r\n                </Form>\r\n\r\n            </Loginform_Container>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ShippingScreen;\r\n","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Components\\CheckoutSteps.js",[],"E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\PaymentScreen.js",["165"],"\r\nimport React, { useState } from 'react';\r\nimport { Button, Form, Col } from 'react-bootstrap';\r\nimport '../index.css';\r\nimport '../STYLES/Loginform.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SavePaymentMethod } from '../Actions/Cart_action.js';\r\nimport Loginform_Container from \"../Components/Loginform_Container.js\";\r\nimport CheckoutSteps from \"../Components/CheckoutSteps.js\";\r\n\r\n\r\n\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n\r\n\r\n    const CART = useSelector(state => state.CART);\r\n    const { shippingAddress } = CART;\r\n\r\n    if (!shippingAddress)\r\n        history.push('/shipping');\r\n\r\n    const [paymentmethod, setPaymentMethod] = useState(\"PayPal\");\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"submit\");\r\n        dispatch(SavePaymentMethod(paymentmethod));\r\n        history.push('/placeorder');   // redirect to payment page\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Loginform_Container>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <h1 className=\"loginhead\" >Payment Method</h1>\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='PayPal'\r\n                            name='paymentMethod'\r\n                            value='PayPal'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n                        </Form.Check>\r\n\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='Stripe'\r\n                            id='Stripe'\r\n                            name='paymentMethod'\r\n                            value='Stripe'\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        ></Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </Loginform_Container>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen;\r\n","E:\\REACT_PROJECTS\\Ecommerce\\frontend\\src\\Screens\\PlaceOrderScreen.js",["166","167","168","169"],{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"170","replacedBy":"174"},{"ruleId":"172","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":3,"column":10,"nodeType":"178","messageId":"179","endLine":3,"endColumn":14},{"ruleId":"176","severity":1,"message":"180","line":4,"column":20,"nodeType":"178","messageId":"179","endLine":4,"endColumn":25},{"ruleId":"181","severity":1,"message":"182","line":50,"column":33,"nodeType":"183","endLine":50,"endColumn":66},{"ruleId":"176","severity":1,"message":"184","line":2,"column":28,"nodeType":"178","messageId":"179","endLine":2,"endColumn":36},{"ruleId":"176","severity":1,"message":"185","line":9,"column":8,"nodeType":"178","messageId":"179","endLine":9,"endColumn":12},{"ruleId":"176","severity":1,"message":"186","line":10,"column":8,"nodeType":"178","messageId":"179","endLine":10,"endColumn":19},{"ruleId":"176","severity":1,"message":"187","line":35,"column":23,"nodeType":"178","messageId":"179","endLine":35,"endColumn":31},{"ruleId":"188","severity":1,"message":"189","line":35,"column":34,"nodeType":"190","endLine":41,"endColumn":14},{"ruleId":"191","severity":1,"message":"192","line":41,"column":9,"nodeType":"183","endLine":41,"endColumn":30},{"ruleId":"176","severity":1,"message":"180","line":4,"column":20,"nodeType":"178","messageId":"179","endLine":4,"endColumn":25},{"ruleId":"176","severity":1,"message":"193","line":4,"column":27,"nodeType":"178","messageId":"179","endLine":4,"endColumn":36},{"ruleId":"176","severity":1,"message":"194","line":4,"column":38,"nodeType":"178","messageId":"179","endLine":4,"endColumn":42},{"ruleId":"191","severity":1,"message":"192","line":47,"column":9,"nodeType":"183","endLine":47,"endColumn":30},{"ruleId":"195","severity":1,"message":"196","line":50,"column":22,"nodeType":"197","messageId":"198","endLine":50,"endColumn":24},{"ruleId":"176","severity":1,"message":"199","line":10,"column":8,"nodeType":"178","messageId":"179","endLine":10,"endColumn":12},{"ruleId":"176","severity":1,"message":"185","line":11,"column":8,"nodeType":"178","messageId":"179","endLine":11,"endColumn":12},{"ruleId":"191","severity":1,"message":"192","line":38,"column":13,"nodeType":"183","endLine":38,"endColumn":34},{"ruleId":"191","severity":1,"message":"192","line":38,"column":9,"nodeType":"183","endLine":38,"endColumn":30},{"ruleId":"176","severity":1,"message":"200","line":2,"column":17,"nodeType":"178","messageId":"179","endLine":2,"endColumn":26},{"ruleId":"176","severity":1,"message":"185","line":11,"column":8,"nodeType":"178","messageId":"179","endLine":11,"endColumn":12},{"ruleId":"176","severity":1,"message":"201","line":18,"column":11,"nodeType":"178","messageId":"179","endLine":18,"endColumn":19},{"ruleId":"176","severity":1,"message":"202","line":21,"column":13,"nodeType":"178","messageId":"179","endLine":21,"endColumn":28},"no-native-reassign",["203"],"no-negated-in-lhs",["204"],["203"],["204"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Image' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'Load' is defined but never used.","'backend_URL' is defined but never used.","'settings' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'settings' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ObjectExpression","react/jsx-pascal-case","Imported JSX component Loginform_Container must be in PascalCase or SCREAMING_SNAKE_CASE","'ListGroup' is defined but never used.","'Card' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Mess' is defined but never used.","'useEffect' is defined but never used.","'dispatch' is assigned a value but never used.","'shippingAddress' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]